/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SpaceTimeMarkerComponent,
  SpaceTimeMarkerComponentInterface,
} from "../SpaceTimeMarkerComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isUnlimited",
            type: "bool",
          },
        ],
        internalType: "struct SpaceTimeMarker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isUnlimited",
            type: "bool",
          },
        ],
        internalType: "struct SpaceTimeMarker",
        name: "spaceTimeMarker",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200165138038062001651833981016040819052620000349162000200565b807f4b1ac4c3aa37732e927cbff52c019e9fbdad0f3e454031afaefd319a3dc66ce462000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000bd41760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000bd41760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61140f80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102da578063cccf7a8e146102ed578063f2fde38b1461030057600080fd5b8063b361be46146102a7578063b8bc073d146102ba57600080fd5b80638b282947146102625780638da5cb5b146102755780639d2c76b41461027d578063af640d0f1461029057600080fd5b80634fef6a38116101095780636b122fe0116100ee5780636b122fe01461021657806375c0669c1461022c578063861eb9051461023f57600080fd5b80634fef6a38146101f0578063663579381461020357600080fd5b80630ff4c9161461013b57806330b67baa1461018157806331b933b9146101c65780634cc82215146101db575b600080fd5b61014e610149366004610e9b565b610313565b604080518251815260208084015167ffffffffffffffff1690820152918101511515908201526060015b60405180910390f35b6000546101a19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610178565b6101ce61037b565b6040516101789190610eb4565b6101ee6101e9366004610e9b565b6103af565b005b6101ee6101fe366004610ef8565b6103fa565b6101ee610211366004610f88565b6104d8565b61021e610528565b6040516101789291906110c9565b6101ee61023a366004610ef8565b610748565b61025261024d366004610ef8565b61077a565b6040519015158152602001610178565b6101ee610270366004611264565b610805565b6101a161084e565b6101ee61028b366004610ef8565b610893565b61029960025481565b604051908152602001610178565b6101ce6102b53660046112ab565b61037b565b6102cd6102c8366004610e9b565b6109bc565b60405161017891906112e8565b6101ee6102e8366004610ef8565b610a5e565b6102526102fb366004610e9b565b610b39565b6101ee61030e366004610ef8565b610b5b565b6040805160608101825260008082526020820181905291810182905290808061033b856109bc565b80602001905181019061034e91906112fb565b6040805160608101825293845267ffffffffffffffff909216602084015215159082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b83361077a565b6103ee576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f781610bf8565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461046a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b805160208083015160408085015181519384019490945267ffffffffffffffff909116908201529015156060820152610524908390608001604051602081830303815290604052610805565b5050565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161054357505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600481526020017f7365656400000000000000000000000000000000000000000000000000000000815250826000815181106105c3576105c361133e565b6020026020010181905250600d816000815181106105e3576105e361133e565b602002602001019060218111156105fc576105fc61109a565b9081602181111561060f5761060f61109a565b815250506040518060400160405280600781526020017f74696d656f7574000000000000000000000000000000000000000000000000008152508260018151811061065c5761065c61133e565b6020026020010181905250600b8160018151811061067c5761067c61133e565b602002602001019060218111156106955761069561109a565b908160218111156106a8576106a861109a565b815250506040518060400160405280600b81526020017f6973556e6c696d69746564000000000000000000000000000000000000000000815250826001815181106106f5576106f561133e565b60200260200101819052506000816001815181106107155761071561133e565b6020026020010190602181111561072e5761072e61109a565b908160218111156107415761074161109a565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107ff57506107d061084e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61080e3361077a565b610844576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105248282610c66565b600061088e7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610903576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109a157600080fd5b505af11580156109b5573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906109d99061136d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a059061136d565b8015610a525780601f10610a2757610100808354040283529160200191610a52565b820191906000526020600020905b815481529060010190602001808311610a3557829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ace576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b529061136d565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bcb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f781610d14565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c0f91610dc8565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610987565b60008281526001602090815260409091208251610c8592840190610e02565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610cde90859085906004016113c0565b600060405180830381600087803b158015610cf857600080fd5b505af1158015610d0c573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103f7928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610dd49061136d565b6000825580601f10610de4575050565b601f0160209004906000526020600020908101906103f79190610e86565b828054610e0e9061136d565b90600052602060002090601f016020900481019282610e305760008555610e76565b82601f10610e4957805160ff1916838001178555610e76565b82800160010185558215610e76579182015b82811115610e76578251825591602001919060010190610e5b565b50610e82929150610e86565b5090565b5b80821115610e825760008155600101610e87565b600060208284031215610ead57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610eec57835183529284019291840191600101610ed0565b50909695505050505050565b600060208284031215610f0a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f2e57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff811681146103f757600080fd5b80151581146103f757600080fd5b6000808284036080811215610f9c57600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215610fd057600080fd5b506040516060810181811067ffffffffffffffff82111715610ff457610ff4610f35565b60409081526020850135825284013561100c81610f64565b6020820152606084013561101f81610f7a565b6040820152919491935090915050565b6000815180845260005b8181101561105557602081850181015186830182015201611039565b81811115611067576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561113e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261112c86835161102f565b955093820193908201906001016110f2565b50508584038187015286518085528782019482019350915060005b828110156111ac5784516022811061119a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611159565b5091979650505050505050565b600082601f8301126111ca57600080fd5b813567ffffffffffffffff808211156111e5576111e5610f35565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561122b5761122b610f35565b8160405283815286602085880101111561124457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561127757600080fd5b82359150602083013567ffffffffffffffff81111561129557600080fd5b6112a1858286016111b9565b9150509250929050565b6000602082840312156112bd57600080fd5b813567ffffffffffffffff8111156112d457600080fd5b6112e0848285016111b9565b949350505050565b602081526000610f2e602083018461102f565b60008060006060848603121561131057600080fd5b83519250602084015161132281610f64565b604085015190925061133381610f7a565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061138157607f821691505b6020821081036113ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006112e0604083018461102f56fea264697066735822122064b4ddbc731a1f8e9db4e726d6321b1e4f04757700c1a43e96c15660758c0c8364736f6c634300080d0033";

type SpaceTimeMarkerComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceTimeMarkerComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpaceTimeMarkerComponent__factory extends ContractFactory {
  constructor(...args: SpaceTimeMarkerComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpaceTimeMarkerComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<SpaceTimeMarkerComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): SpaceTimeMarkerComponent {
    return super.attach(address) as SpaceTimeMarkerComponent;
  }
  override connect(signer: Signer): SpaceTimeMarkerComponent__factory {
    return super.connect(signer) as SpaceTimeMarkerComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceTimeMarkerComponentInterface {
    return new utils.Interface(_abi) as SpaceTimeMarkerComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpaceTimeMarkerComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SpaceTimeMarkerComponent;
  }
}
