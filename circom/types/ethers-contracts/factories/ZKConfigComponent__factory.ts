/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKConfigComponent,
  ZKConfigComponentInterface,
} from "../ZKConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b5438038062001b54833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f6f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f6f1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61191280620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063c461318811610066578063c4613188146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b8bc073d1461027f578063bf4fe57e1461029f57600080fd5b80638da5cb5b1461023a5780639d2c76b414610242578063af640d0f14610255578063b361be461461026c57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101f1578063861eb905146102045780638b2829471461022757600080fd5b80634fef6a38146101c85780636b122fe0146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b6040516101509190611236565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a66103b9565b604051610150919061130b565b6101c66101c136600461134f565b6103ed565b005b6101c66101d636600461139a565b610438565b6101e3610516565b604051610150929190611458565b6101c66101ff36600461139a565b610a36565b61021761021236600461139a565b610a68565b6040519015158152602001610150565b6101c6610235366004611622565b610af3565b610179610b40565b6101c661025036600461139a565b610b85565b61025e60025481565b604051908152602001610150565b6101a661027a366004611669565b6103b9565b61029261028d36600461134f565b610cae565b60405161015091906116a6565b6101c66102ad36600461139a565b610d50565b6101c66102c03660046116c7565b610e2b565b6102176102d336600461134f565b610ed4565b6101c66102e636600461139a565b610ef6565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052908080808080808061033e61060d610cae565b8060200190518101906103519190611791565b6040805161010081018252981515895273ffffffffffffffffffffffffffffffffffffffff97881660208a01529587169588019590955292851660608701529084166080860152831660a0850152821660c08401521660e08201529998505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f633610a68565b61042c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043581610f93565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104a8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160088082526101208201909252606091829190816020015b6060815260200190600190039081610532575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106105b4576105b4611841565b60200260200101819052506000816000815181106105d4576105d4611841565b602002602001019060218111156105ed576105ed611429565b9081602181111561060057610600611429565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061064d5761064d611841565b602002602001018190525060108160018151811061066d5761066d611841565b6020026020010190602181111561068657610686611429565b9081602181111561069957610699611429565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106106e6576106e6611841565b602002602001018190525060108160028151811061070657610706611841565b6020026020010190602181111561071f5761071f611429565b9081602181111561073257610732611429565b815250506040518060400160405280601181526020017f6d61726b566572696679416464726573730000000000000000000000000000008152508260038151811061077f5761077f611841565b602002602001018190525060108160038151811061079f5761079f611841565b602002602001019060218111156107b8576107b8611429565b908160218111156107cb576107cb611429565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061081857610818611841565b602002602001018190525060108160048151811061083857610838611841565b6020026020010190602181111561085157610851611429565b9081602181111561086457610864611429565b815250506040518060400160405280601581526020017f7265736f75726365566572696679416464726573730000000000000000000000815250826005815181106108b1576108b1611841565b60200260200101819052506010816005815181106108d1576108d1611841565b602002602001019060218111156108ea576108ea611429565b908160218111156108fd576108fd611429565b815250506040518060400160405280601781526020017f61747461636b50617468566572696679416464726573730000000000000000008152508260068151811061094a5761094a611841565b602002602001018190525060108160068151811061096a5761096a611841565b6020026020010190602181111561098357610983611429565b9081602181111561099657610996611429565b815250506040518060400160405280601281526020017f636f6f7264566572696679416464726573730000000000000000000000000000815250826007815181106109e3576109e3611841565b6020026020010181905250601081600781518110610a0357610a03611841565b60200260200101906021811115610a1c57610a1c611429565b90816021811115610a2f57610a2f611429565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610aed5750610abe610b40565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610afc33610a68565b610b32576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b3c8282611001565b5050565b6000610b807f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bf5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c9357600080fd5b505af1158015610ca7573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610ccb90611870565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf790611870565b8015610d445780601f10610d1957610100808354040283529160200191610d44565b820191906000526020600020905b815481529060010190602001808311610d2757829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dc0576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b61043561060d826000015183602001518460400151856060015186608001518760a001518860c001518960e00151604051602001610ec0989796959493929190971515885273ffffffffffffffffffffffffffffffffffffffff9687166020890152948616604088015292851660608701529084166080860152831660a0850152821660c08401521660e08201526101000190565b604051602081830303815290604052610af3565b60008181526001602052604081208054610eed90611870565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f66576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610435816110af565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610faa91611163565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610c79565b600082815260016020908152604090912082516110209284019061119d565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f9061107990859085906004016118c3565b600060405180830381600087803b15801561109357600080fd5b505af11580156110a7573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610435928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461116f90611870565b6000825580601f1061117f575050565b601f0160209004906000526020600020908101906104359190611221565b8280546111a990611870565b90600052602060002090601f0160209004810192826111cb5760008555611211565b82601f106111e457805160ff1916838001178555611211565b82800160010185558215611211579182015b828111156112115782518255916020019190600101906111f6565b5061121d929150611221565b5090565b5b8082111561121d5760008155600101611222565b600061010082019050825115158252602083015173ffffffffffffffffffffffffffffffffffffffff8082166020850152806040860151166040850152806060860151166060850152806080860151166080850152505060a08301516112b460a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c08301516112dc60c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161130460e084018273ffffffffffffffffffffffffffffffffffffffff169052565b5092915050565b6020808252825182820181905260009190848201906040850190845b8181101561134357835183529284019291840191600101611327565b50909695505050505050565b60006020828403121561136157600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461043557600080fd5b803561139581611368565b919050565b6000602082840312156113ac57600080fd5b81356113b781611368565b9392505050565b6000815180845260005b818110156113e4576020818501810151868301820152016113c8565b818111156113f6576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156114cd577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526114bb8683516113be565b95509382019390820190600101611481565b50508584038187015286518085528782019482019350915060005b8281101561153b57845160228110611529577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016114e8565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261158857600080fd5b813567ffffffffffffffff808211156115a3576115a3611548565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156115e9576115e9611548565b8160405283815286602085880101111561160257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561163557600080fd5b82359150602083013567ffffffffffffffff81111561165357600080fd5b61165f85828601611577565b9150509250929050565b60006020828403121561167b57600080fd5b813567ffffffffffffffff81111561169257600080fd5b61169e84828501611577565b949350505050565b6020815260006113b760208301846113be565b801515811461043557600080fd5b60006101008083850312156116db57600080fd5b6040519081019067ffffffffffffffff821181831017156116fe576116fe611548565b816040528335915061170f826116b9565b81815261171e6020850161138a565b602082015261172f6040850161138a565b60408201526117406060850161138a565b60608201526117516080850161138a565b608082015261176260a0850161138a565b60a082015261177360c0850161138a565b60c082015261178460e0850161138a565b60e0820152949350505050565b600080600080600080600080610100898b0312156117ae57600080fd5b88516117b9816116b9565b60208a01519098506117ca81611368565b60408a01519097506117db81611368565b60608a01519096506117ec81611368565b60808a01519095506117fd81611368565b60a08a015190945061180e81611368565b60c08a015190935061181f81611368565b60e08a015190925061183081611368565b809150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061188457607f821691505b6020821081036118bd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061169e60408301846113be56fea26469706673582212208098d392abba35fc6f660a78f4b4b6ff3e63ff09a50394e4d15449dfba78dc7264736f6c634300080d0033";

type ZKConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKConfigComponent__factory extends ContractFactory {
  constructor(...args: ZKConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<ZKConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ZKConfigComponent {
    return super.attach(address) as ZKConfigComponent;
  }
  override connect(signer: Signer): ZKConfigComponent__factory {
    return super.connect(signer) as ZKConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConfigComponentInterface {
    return new utils.Interface(_abi) as ZKConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as ZKConfigComponent;
  }
}
