/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  VisionConfigComponent,
  VisionConfigComponentInterface,
} from "../VisionConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "remainTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxDistance",
            type: "uint64",
          },
        ],
        internalType: "struct VisionConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "remainTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxDistance",
            type: "uint64",
          },
        ],
        internalType: "struct VisionConfig",
        name: "visionConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200153838038062001538833981016040819052620000349162000200565b807f7b6e1afc104b7e498d92a5202135a932fbd13a556799eb8b3b435da6f581acca62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000b1a1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000b1a1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6112f680620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063ca095d5111610066578063ca095d51146102c9578063cccf7a8e146102dc578063f2fde38b146102ef57600080fd5b8063b8bc073d14610296578063bf4fe57e146102b657600080fd5b80638da5cb5b146102515780639d2c76b414610259578063af640d0f1461026c578063b361be461461028357600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610208578063861eb9051461021b5780638b2829471461023e57600080fd5b80634fef6a38146101df5780636b122fe0146101f257600080fd5b8063209652551461013b57806330b67baa1461017057806331b933b9146101b55780634cc82215146101ca575b600080fd5b610143610302565b60408051825167ffffffffffffffff90811682526020938401511692810192909252015b60405180910390f35b6000546101909073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610167565b6101bd61035d565b6040516101679190610de1565b6101dd6101d8366004610e25565b610391565b005b6101dd6101ed366004610e3e565b6103dc565b6101fa6104ba565b604051610167929190610f15565b6101dd610216366004610e3e565b61063f565b61022e610229366004610e3e565b610671565b6040519015158152602001610167565b6101dd61024c3660046110df565b6106fc565b610190610749565b6101dd610267366004610e3e565b61078e565b61027560025481565b604051908152602001610167565b6101bd610291366004611126565b61035d565b6102a96102a4366004610e25565b6108b7565b6040516101679190611163565b6101dd6102c4366004610e3e565b610959565b6101dd6102d736600461118c565b610a34565b61022e6102ea366004610e25565b610a7f565b6101dd6102fd366004610e3e565b610aa1565b604080518082019091526000808252602082015260008061032461060d6108b7565b80602001905181019061033791906111eb565b6040805180820190915267ffffffffffffffff9283168152911660208201529392505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039a33610671565b6103d0576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103d981610b3e565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461044c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816104d357505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600a81526020017f72656d61696e54696d65000000000000000000000000000000000000000000008152508260008151811061055357610553611225565b6020026020010181905250600b8160008151811061057357610573611225565b6020026020010190602181111561058c5761058c610ee6565b9081602181111561059f5761059f610ee6565b815250506040518060400160405280600b81526020017f6d617844697374616e6365000000000000000000000000000000000000000000815250826001815181106105ec576105ec611225565b6020026020010181905250600b8160018151811061060c5761060c611225565b6020026020010190602181111561062557610625610ee6565b9081602181111561063857610638610ee6565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106f657506106c7610749565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61070533610671565b61073b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107458282610bac565b5050565b60006107897f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146107fe576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561089c57600080fd5b505af11580156108b0573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906108d490611254565b80601f016020809104026020016040519081016040528092919081815260200182805461090090611254565b801561094d5780601f106109225761010080835404028352916020019161094d565b820191906000526020600020905b81548152906001019060200180831161093057829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109c9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6103d961060d82600001518360200151604051602001610a6b92919067ffffffffffffffff92831681529116602082015260400190565b6040516020818303038152906040526106fc565b60008181526001602052604081208054610a9890611254565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b11576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103d981610c5a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b5591610d0e565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610882565b60008281526001602090815260409091208251610bcb92840190610d48565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c2490859085906004016112a7565b600060405180830381600087803b158015610c3e57600080fd5b505af1158015610c52573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103d9928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d1a90611254565b6000825580601f10610d2a575050565b601f0160209004906000526020600020908101906103d99190610dcc565b828054610d5490611254565b90600052602060002090601f016020900481019282610d765760008555610dbc565b82601f10610d8f57805160ff1916838001178555610dbc565b82800160010185558215610dbc579182015b82811115610dbc578251825591602001919060010190610da1565b50610dc8929150610dcc565b5090565b5b80821115610dc85760008155600101610dcd565b6020808252825182820181905260009190848201906040850190845b81811015610e1957835183529284019291840191600101610dfd565b50909695505050505050565b600060208284031215610e3757600080fd5b5035919050565b600060208284031215610e5057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e7457600080fd5b9392505050565b6000815180845260005b81811015610ea157602081850181015186830182015201610e85565b81811115610eb3576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610f8a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610f78868351610e7b565b95509382019390820190600101610f3e565b50508584038187015286518085528782019482019350915060005b82811015610ff857845160228110610fe6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610fa5565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261104557600080fd5b813567ffffffffffffffff8082111561106057611060611005565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156110a6576110a6611005565b816040528381528660208588010111156110bf57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156110f257600080fd5b82359150602083013567ffffffffffffffff81111561111057600080fd5b61111c85828601611034565b9150509250929050565b60006020828403121561113857600080fd5b813567ffffffffffffffff81111561114f57600080fd5b61115b84828501611034565b949350505050565b602081526000610e746020830184610e7b565b67ffffffffffffffff811681146103d957600080fd5b60006040828403121561119e57600080fd5b6040516040810181811067ffffffffffffffff821117156111c1576111c1611005565b60405282356111cf81611176565b815260208301356111df81611176565b60208201529392505050565b600080604083850312156111fe57600080fd5b825161120981611176565b602084015190925061121a81611176565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061126857607f821691505b6020821081036112a1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061115b6040830184610e7b56fea264697066735822122039c1eccf44b5ba979f8f72d625da2044a8ceeb0ed6a4358fa99d4b52d378fa1e64736f6c634300080d0033";

type VisionConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VisionConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VisionConfigComponent__factory extends ContractFactory {
  constructor(...args: VisionConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VisionConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<VisionConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): VisionConfigComponent {
    return super.attach(address) as VisionConfigComponent;
  }
  override connect(signer: Signer): VisionConfigComponent__factory {
    return super.connect(signer) as VisionConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VisionConfigComponentInterface {
    return new utils.Interface(_abi) as VisionConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VisionConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VisionConfigComponent;
  }
}
