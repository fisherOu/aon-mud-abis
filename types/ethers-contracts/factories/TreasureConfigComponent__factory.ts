/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureConfigComponent,
  TreasureConfigComponentInterface,
} from "../TreasureConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "treasureTypes",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "properties",
            type: "bytes",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            internalType: "bytes",
            name: "treasureTypes",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "properties",
            type: "bytes",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "treasureConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200188838038062001888833981016040819052620000349162000200565b807faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c45698995862000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000c441760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000c441760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61164680620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101f1578063861eb905146102045780638938fd191461022757600080fd5b80634fef6a38146101c85780636b122fe0146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b6040516101509190610f85565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a6610361565b6040516101509190611003565b6101c66101c1366004611047565b610395565b005b6101c66101d6366004611060565b6103e0565b6101e36104be565b6040516101509291906110cc565b6101c66101ff366004611060565b610777565b610217610212366004611060565b6107a9565b6040519015158152602001610150565b6101c6610235366004611311565b610834565b6101c66102483660046113c8565b610871565b6101796108be565b6101c6610263366004611060565b610903565b61027160025481565b604051908152602001610150565b6101a661028d36600461140f565b610361565b6102a56102a0366004611047565b610a2c565b604051610150919061144c565b6101c66102c0366004611060565b610ace565b6102176102d3366004611047565b610ba9565b6101c66102e6366004611060565b610bcb565b604080516080810182526000808252602082015260609181018290528181019190915260008060008061031f61060d610a2c565b80602001905181019061033291906114a4565b6040805160808101825263ffffffff958616815294909316602085015291830152606082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039e336107a9565b6103d4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610c68565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610450576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816104d957505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600981526020017f656e657267794d61780000000000000000000000000000000000000000000000815250826000815181106105595761055961152f565b6020026020010181905250600a816000815181106105795761057961152f565b602002602001019060218111156105925761059261109d565b908160218111156105a5576105a561109d565b815250506040518060400160405280600981526020017f656e657267794d696e0000000000000000000000000000000000000000000000815250826001815181106105f2576105f261152f565b6020026020010181905250600a816001815181106106125761061261152f565b6020026020010190602181111561062b5761062b61109d565b9081602181111561063e5761063e61109d565b815250506040518060400160405280600d81526020017f74726561737572655479706573000000000000000000000000000000000000008152508260028151811061068b5761068b61152f565b6020026020010181905250600f816002815181106106ab576106ab61152f565b602002602001019060218111156106c4576106c461109d565b908160218111156106d7576106d761109d565b815250506040518060400160405280600a81526020017f70726f7065727469657300000000000000000000000000000000000000000000815250826003815181106107245761072461152f565b6020026020010181905250600f816003815181106107445761074461152f565b6020026020010190602181111561075d5761075d61109d565b908160218111156107705761077061109d565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061082e57506107ff6108be565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6103dd61060d8260000151836020015184604001518560600151604051602001610861949392919061155e565b6040516020818303038152906040525b61087a336107a9565b6108b0576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108ba8282610cd6565b5050565b60006108fe7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610973576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a1157600080fd5b505af1158015610a25573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610a49906115a4565b80601f0160208091040260200160405190810160405280929190818152602001828054610a75906115a4565b8015610ac25780601f10610a9757610100808354040283529160200191610ac2565b820191906000526020600020905b815481529060010190602001808311610aa557829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b3e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610bc2906115a4565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c3b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610d84565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c7f91610e38565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016109f7565b60008281526001602090815260409091208251610cf592840190610e72565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d4e90859085906004016115f7565b600060405180830381600087803b158015610d6857600080fd5b505af1158015610d7c573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103dd928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e44906115a4565b6000825580601f10610e54575050565b601f0160209004906000526020600020908101906103dd9190610ef6565b828054610e7e906115a4565b90600052602060002090601f016020900481019282610ea05760008555610ee6565b82601f10610eb957805160ff1916838001178555610ee6565b82800160010185558215610ee6579182015b82811115610ee6578251825591602001919060010190610ecb565b50610ef2929150610ef6565b5090565b5b80821115610ef25760008155600101610ef7565b60005b83811015610f26578181015183820152602001610f0e565b83811115610f35576000848401525b50505050565b60008151808452610f53816020860160208601610f0b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600063ffffffff80845116602084015280602085015116604084015250604083015160806060840152610fbf60a0840182610f3b565b905060608401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016080850152610ffa8282610f3b565b95945050505050565b6020808252825182820181905260009190848201906040850190845b8181101561103b5783518352928401929184019160010161101f565b50909695505050505050565b60006020828403121561105957600080fd5b5035919050565b60006020828403121561107257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461109657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611141577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261112f868351610f3b565b955093820193908201906001016110f5565b50508584038187015286518085528782019482019350915060005b828110156111af5784516022811061119d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161115c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561120e5761120e6111bc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561125b5761125b6111bc565b604052919050565b63ffffffff811681146103dd57600080fd5b600067ffffffffffffffff82111561128f5761128f6111bc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126112cc57600080fd5b81356112df6112da82611275565b611214565b8181528460208386010111156112f457600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561132357600080fd5b813567ffffffffffffffff8082111561133b57600080fd5b908301906080828603121561134f57600080fd5b6113576111eb565b823561136281611263565b8152602083013561137281611263565b602082015260408301358281111561138957600080fd5b611395878286016112bb565b6040830152506060830135828111156113ad57600080fd5b6113b9878286016112bb565b60608301525095945050505050565b600080604083850312156113db57600080fd5b82359150602083013567ffffffffffffffff8111156113f957600080fd5b611405858286016112bb565b9150509250929050565b60006020828403121561142157600080fd5b813567ffffffffffffffff81111561143857600080fd5b611444848285016112bb565b949350505050565b6020815260006110966020830184610f3b565b600082601f83011261147057600080fd5b815161147e6112da82611275565b81815284602083860101111561149357600080fd5b611444826020830160208701610f0b565b600080600080608085870312156114ba57600080fd5b84516114c581611263565b60208601519094506114d681611263565b604086015190935067ffffffffffffffff808211156114f457600080fd5b6115008883890161145f565b9350606087015191508082111561151657600080fd5b506115238782880161145f565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600063ffffffff8087168352808616602084015250608060408301526115876080830185610f3b565b82810360608401526115998185610f3b565b979650505050505050565b600181811c908216806115b857607f821691505b6020821081036115f1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006114446040830184610f3b56fea2646970667358221220e1bb4f7422c5415016023b78322fc0543fc714adef9b1a216ffa347e0a2910b664736f6c634300080d0033";

type TreasureConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureConfigComponent__factory extends ContractFactory {
  constructor(...args: TreasureConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureConfigComponent {
    return super.attach(address) as TreasureConfigComponent;
  }
  override connect(signer: Signer): TreasureConfigComponent__factory {
    return super.connect(signer) as TreasureConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureConfigComponentInterface {
    return new utils.Interface(_abi) as TreasureConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureConfigComponent;
  }
}
