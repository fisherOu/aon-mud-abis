/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureConfigComponent,
  TreasureConfigComponentInterface,
} from "../TreasureConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "typeId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isActive",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isFlight",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "flightEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "arrivalEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destroyEffectId",
                type: "uint32",
              },
            ],
            internalType: "struct TreasureTypes[]",
            name: "treasureTypes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "propertyId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "triggerType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "effectType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerRange",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerArea",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerDamage",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerShield",
                type: "uint32",
              },
            ],
            internalType: "struct PropertyConfigRange[]",
            name: "properties",
            type: "tuple[]",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "typeId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isActive",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isFlight",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "flightEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "arrivalEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destroyEffectId",
                type: "uint32",
              },
            ],
            internalType: "struct TreasureTypes[]",
            name: "treasureTypes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "propertyId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "triggerType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "effectType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerRange",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerArea",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerDamage",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerShield",
                type: "uint32",
              },
            ],
            internalType: "struct PropertyConfigRange[]",
            name: "properties",
            type: "tuple[]",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "treasureConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001eff38038062001eff833981016040819052620000349162000200565b807faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c45698995862000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000c481760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000c481760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611cbd80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102b2578063e47c5eed146102c5578063f2fde38b146102d857600080fd5b8063b8bc073d1461027f578063bf4fe57e1461029f57600080fd5b80638da5cb5b1461023a5780639d2c76b414610242578063af640d0f14610255578063b361be461461026c57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101f1578063861eb905146102045780638b2829471461022757600080fd5b80634fef6a38146101c85780636b122fe0146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b604051610150919061103a565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a6610361565b604051610150919061112b565b6101c66101c136600461116f565b610395565b005b6101c66101d6366004611188565b6103e0565b6101e36104be565b60405161015092919061125f565b6101c66101ff366004611188565b610777565b610217610212366004611188565b6107a9565b6040519015158152602001610150565b6101c66102353660046114cb565b610834565b610179610881565b6101c6610250366004611188565b6108c6565b61025e60025481565b604051908152602001610150565b6101a661027a366004611512565b610361565b61029261028d36600461116f565b6109ef565b604051610150919061154f565b6101c66102ad366004611188565b610a91565b6102176102c036600461116f565b610b6c565b6101c66102d33660046116e2565b610b8e565b6101c66102e6366004611188565b610bcf565b604080516080810182526000808252602082015260609181018290528181019190915260008060008061031f61060d6109ef565b80602001905181019061033291906119a2565b6040805160808101825263ffffffff958616815294909316602085015291830152606082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039e336107a9565b6103d4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610c6c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610450576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816104d957505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600981526020017f656e657267794d617800000000000000000000000000000000000000000000008152508260008151811061055957610559611b08565b6020026020010181905250600a8160008151811061057957610579611b08565b6020026020010190602181111561059257610592611230565b908160218111156105a5576105a5611230565b815250506040518060400160405280600981526020017f656e657267794d696e0000000000000000000000000000000000000000000000815250826001815181106105f2576105f2611b08565b6020026020010181905250600a8160018151811061061257610612611b08565b6020026020010190602181111561062b5761062b611230565b9081602181111561063e5761063e611230565b815250506040518060400160405280600d81526020017f74726561737572655479706573000000000000000000000000000000000000008152508260028151811061068b5761068b611b08565b6020026020010181905250601c816002815181106106ab576106ab611b08565b602002602001019060218111156106c4576106c4611230565b908160218111156106d7576106d7611230565b815250506040518060400160405280600a81526020017f70726f70657274696573000000000000000000000000000000000000000000008152508260038151811061072457610724611b08565b6020026020010181905250601c8160038151811061074457610744611b08565b6020026020010190602181111561075d5761075d611230565b9081602181111561077057610770611230565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061082e57506107ff610881565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61083d336107a9565b610873576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d8282610cda565b5050565b60006108c17f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610936576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109d457600080fd5b505af11580156109e8573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610a0c90611b37565b80601f0160208091040260200160405190810160405280929190818152602001828054610a3890611b37565b8015610a855780601f10610a5a57610100808354040283529160200191610a85565b820191906000526020600020905b815481529060010190602001808311610a6857829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b01576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b8590611b37565b15159392505050565b6103dd61060d8260000151836020015184604001518560600151604051602001610bbb9493929190611b8a565b604051602081830303815290604052610834565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c3f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610d88565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c8391610e3c565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016109ba565b60008281526001602090815260409091208251610cf992840190610e76565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d529085908590600401611c6e565b600060405180830381600087803b158015610d6c57600080fd5b505af1158015610d80573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103dd928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e4890611b37565b6000825580601f10610e58575050565b601f0160209004906000526020600020908101906103dd9190610efa565b828054610e8290611b37565b90600052602060002090601f016020900481019282610ea45760008555610eea565b82601f10610ebd57805160ff1916838001178555610eea565b82800160010185558215610eea579182015b82811115610eea578251825591602001919060010190610ecf565b50610ef6929150610efa565b5090565b5b80821115610ef65760008155600101610efb565b805163ffffffff16825260006020820151610f32602085018263ffffffff169052565b506040820151610f4a604085018263ffffffff169052565b506060820151610f62606085018263ffffffff169052565b506080820151610f7a608085018263ffffffff169052565b5060a0820151610f9260a085018263ffffffff169052565b5060c0820151610faa60c085018263ffffffff169052565b5060e0820151610fc260e085018263ffffffff169052565b50506101008181015163ffffffff90811691840191909152610120808301518216908401526101409182015116908201526101600190565b600081518084526020808501945080840160005b8381101561102f57611021878351610f0f565b96509082019060010161100e565b509495945050505050565b6020808252825163ffffffff90811683830152838201511660408084019190915283015160806060840152805160a0840181905260009291820190839060c08601905b808310156110e4578351805163ffffffff908116845260208083015182169085015260408083015182169085015260608083015182169085015260808083015182169085015260a091820151169083015260c082019150848401935060018301925061107d565b50606087015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08682030160808701526111208185610ffa565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561116357835183529284019291840191600101611147565b50909695505050505050565b60006020828403121561118157600080fd5b5035919050565b60006020828403121561119a57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146111be57600080fd5b9392505050565b6000815180845260005b818110156111eb576020818501810151868301820152016111cf565b818111156111fd576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112d4577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526112c28683516111c5565b95509382019390820190600101611288565b50508584038187015286518085528782019482019350915060005b8281101561134257845160228110611330577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016112ef565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156113a2576113a261134f565b60405290565b6040516080810167ffffffffffffffff811182821017156113a2576113a261134f565b60405160c0810167ffffffffffffffff811182821017156113a2576113a261134f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156114355761143561134f565b604052919050565b600082601f83011261144e57600080fd5b813567ffffffffffffffff8111156114685761146861134f565b61149960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113ee565b8181528460208386010111156114ae57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156114de57600080fd5b82359150602083013567ffffffffffffffff8111156114fc57600080fd5b6115088582860161143d565b9150509250929050565b60006020828403121561152457600080fd5b813567ffffffffffffffff81111561153b57600080fd5b6115478482850161143d565b949350505050565b6020815260006111be60208301846111c5565b63ffffffff811681146103dd57600080fd5b803561157f81611562565b919050565b600067ffffffffffffffff82111561159e5761159e61134f565b5060051b60200190565b600082601f8301126115b957600080fd5b813560206115ce6115c983611584565b6113ee565b82815261016092830285018201928282019190878511156115ee57600080fd5b8387015b858110156116d55781818a03121561160a5760008081fd5b61161261137e565b61161b82611574565b8152611628868301611574565b868201526040611639818401611574565b90820152606061164a838201611574565b90820152608061165b838201611574565b9082015260a061166c838201611574565b9082015260c061167d838201611574565b9082015260e061168e838201611574565b908201526101006116a0838201611574565b908201526101206116b2838201611574565b908201526101406116c4838201611574565b9082015284529284019281016115f2565b5090979650505050505050565b600060208083850312156116f557600080fd5b823567ffffffffffffffff8082111561170d57600080fd5b8185019150608080838803121561172357600080fd5b61172b6113a8565b833561173681611562565b81528385013561174581611562565b818601526040848101358481111561175c57600080fd5b8501601f81018a1361176d57600080fd5b803561177b6115c982611584565b81815260c0918202830189019189820191908d84111561179a57600080fd5b938a01935b838510156118345780858f0312156117b75760008081fd5b6117bf6113cb565b85356117ca81611562565b8152858c01356117d981611562565b818d0152858701356117ea81611562565b818801526060868101356117fd81611562565b908201528589013561180e81611562565b818a015260a08681013561182181611562565b90820152835293840193918a019161179f565b5080858701525050505050606084013594508285111561185357600080fd5b61185f888686016115a8565b6060820152979650505050505050565b805161157f81611562565b600082601f83011261188b57600080fd5b8151602061189b6115c983611584565b82815261016092830285018201928282019190878511156118bb57600080fd5b8387015b858110156116d55781818a0312156118d75760008081fd5b6118df61137e565b6118e88261186f565b81526118f586830161186f565b86820152604061190681840161186f565b90820152606061191783820161186f565b90820152608061192883820161186f565b9082015260a061193983820161186f565b9082015260c061194a83820161186f565b9082015260e061195b83820161186f565b9082015261010061196d83820161186f565b9082015261012061197f83820161186f565b9082015261014061199183820161186f565b9082015284529284019281016118bf565b600080600080608085870312156119b857600080fd5b84516119c381611562565b809450506020808601516119d681611562565b8094505060408087015167ffffffffffffffff808211156119f657600080fd5b818901915089601f830112611a0a57600080fd5b8151611a186115c982611584565b81815260c0918202840186019186820191908d841115611a3757600080fd5b948701945b83861015611ad35780868f031215611a545760008081fd5b611a5c6113cb565b8651611a6781611562565b815286890151611a7681611562565b818a015286880151611a8781611562565b81890152606087810151611a9a81611562565b908201526080870151611aac81611562565b608082015260a087810151611ac081611562565b9082015283529485019491870191611a3c565b5060608c01519098509550505080841115611aed57600080fd5b505050611afc8782880161187a565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611b4b57607f821691505b602082108103611b84577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006080820163ffffffff808816845260208188168186015260806040860152829150865180845260a086019250818801935060005b81811015611c23578451805163ffffffff908116865260208083015182169087015260408083015182169087015260608083015182169087015260808083015182169087015260a091820151169085015260c08401948301949350600101611bc0565b50508482036060860152855180835291810192508086019160005b81811015611c5f57611c51858551610f0f565b945092820192600101611c3e565b50929998505050505050505050565b82815260406020820152600061154760408301846111c556fea26469706673582212200320af408314ad81145939d2a62c16cc5d416e55242ef3c2f3ddea7e4037162664736f6c634300080d0033";

type TreasureConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureConfigComponent__factory extends ContractFactory {
  constructor(...args: TreasureConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureConfigComponent {
    return super.attach(address) as TreasureConfigComponent;
  }
  override connect(signer: Signer): TreasureConfigComponent__factory {
    return super.connect(signer) as TreasureConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureConfigComponentInterface {
    return new utils.Interface(_abi) as TreasureConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureConfigComponent;
  }
}
