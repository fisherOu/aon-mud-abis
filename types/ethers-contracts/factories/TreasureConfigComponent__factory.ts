/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureConfigComponent,
  TreasureConfigComponentInterface,
} from "../TreasureConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "typeId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isActive",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isFlight",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "flightEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "arrivalEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destroyEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "buffEffectId",
                type: "uint32",
              },
            ],
            internalType: "struct TreasureTypes[]",
            name: "treasureTypes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "propertyId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "triggerType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "effectType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerRange",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerArea",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerDamage",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerShield",
                type: "uint32",
              },
            ],
            internalType: "struct PropertyConfigRange[]",
            name: "properties",
            type: "tuple[]",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "energyMax",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "energyMin",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "typeId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isActive",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "isFlight",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "flightEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "arrivalEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "destroyEffectId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "buffEffectId",
                type: "uint32",
              },
            ],
            internalType: "struct TreasureTypes[]",
            name: "treasureTypes",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "propertyId",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "triggerType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "effectType",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerRange",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rangeMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerArea",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMax",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "areaMin",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerDamage",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "energyPerShield",
                type: "uint32",
              },
            ],
            internalType: "struct PropertyConfigRange[]",
            name: "properties",
            type: "tuple[]",
          },
        ],
        internalType: "struct TreasureConfig",
        name: "treasureConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f3138038062001f31833981016040819052620000349162000200565b807faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c45698995862000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000c481760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000c481760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611cef80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638da5cb5b1461023a5780639d2c76b414610242578063aa4896e314610255578063af640d0f1461026857600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101f1578063861eb905146102045780638b2829471461022757600080fd5b80634fef6a38146101c85780636b122fe0146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b604051610150919061103a565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a6610361565b6040516101509190611137565b6101c66101c136600461117b565b610395565b005b6101c66101d6366004611194565b6103e0565b6101e36104be565b60405161015092919061126b565b6101c66101ff366004611194565b610777565b610217610212366004611194565b6107a9565b6040519015158152602001610150565b6101c66102353660046114d7565b610834565b610179610881565b6101c6610250366004611194565b6108c6565b6101c661026336600461169e565b6109ef565b61027160025481565b604051908152602001610150565b6101a661028d366004611838565b610361565b6102a56102a036600461117b565b610a30565b6040516101509190611875565b6101c66102c0366004611194565b610ad2565b6102176102d336600461117b565b610bad565b6101c66102e6366004611194565b610bcf565b604080516080810182526000808252602082015260609181018290528181019190915260008060008061031f61060d610a30565b80602001905181019061033291906119bb565b6040805160808101825263ffffffff958616815294909316602085015291830152606082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039e336107a9565b6103d4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610c6c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610450576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b60608152602001906001900390816104d957505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600981526020017f656e657267794d617800000000000000000000000000000000000000000000008152508260008151811061055957610559611b2e565b6020026020010181905250600a8160008151811061057957610579611b2e565b602002602001019060218111156105925761059261123c565b908160218111156105a5576105a561123c565b815250506040518060400160405280600981526020017f656e657267794d696e0000000000000000000000000000000000000000000000815250826001815181106105f2576105f2611b2e565b6020026020010181905250600a8160018151811061061257610612611b2e565b6020026020010190602181111561062b5761062b61123c565b9081602181111561063e5761063e61123c565b815250506040518060400160405280600d81526020017f74726561737572655479706573000000000000000000000000000000000000008152508260028151811061068b5761068b611b2e565b6020026020010181905250601c816002815181106106ab576106ab611b2e565b602002602001019060218111156106c4576106c461123c565b908160218111156106d7576106d761123c565b815250506040518060400160405280600a81526020017f70726f70657274696573000000000000000000000000000000000000000000008152508260038151811061072457610724611b2e565b6020026020010181905250601c8160038151811061074457610744611b2e565b6020026020010190602181111561075d5761075d61123c565b908160218111156107705761077061123c565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061082e57506107ff610881565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61083d336107a9565b610873576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61087d8282610cda565b5050565b60006108c17f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610936576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109d457600080fd5b505af11580156109e8573d6000803e3d6000fd5b5050505050565b6103dd61060d8260000151836020015184604001518560600151604051602001610a1c9493929190611b5d565b604051602081830303815290604052610834565b6000818152600160205260409020805460609190610a4d90611c4d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a7990611c4d565b8015610ac65780601f10610a9b57610100808354040283529160200191610ac6565b820191906000526020600020905b815481529060010190602001808311610aa957829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b42576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610bc690611c4d565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c3f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610d88565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c8391610e3c565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016109ba565b60008281526001602090815260409091208251610cf992840190610e76565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d529085908590600401611ca0565b600060405180830381600087803b158015610d6c57600080fd5b505af1158015610d80573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103dd928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e4890611c4d565b6000825580601f10610e58575050565b601f0160209004906000526020600020908101906103dd9190610efa565b828054610e8290611c4d565b90600052602060002090601f016020900481019282610ea45760008555610eea565b82601f10610ebd57805160ff1916838001178555610eea565b82800160010185558215610eea579182015b82811115610eea578251825591602001919060010190610ecf565b50610ef6929150610efa565b5090565b5b80821115610ef65760008155600101610efb565b805163ffffffff16825260006020820151610f32602085018263ffffffff169052565b506040820151610f4a604085018263ffffffff169052565b506060820151610f62606085018263ffffffff169052565b506080820151610f7a608085018263ffffffff169052565b5060a0820151610f9260a085018263ffffffff169052565b5060c0820151610faa60c085018263ffffffff169052565b5060e0820151610fc260e085018263ffffffff169052565b50506101008181015163ffffffff90811691840191909152610120808301518216908401526101409182015116908201526101600190565b600081518084526020808501945080840160005b8381101561102f57611021878351610f0f565b96509082019060010161100e565b509495945050505050565b6020808252825163ffffffff90811683830152838201511660408084019190915283015160806060840152805160a0840181905260009291820190839060c08601905b808310156110f0578351805163ffffffff908116845260208083015182169085015260408083015182169085015260608083015182169085015260808083015182169085015260a08083015182169085015260c091820151169083015260e082019150848401935060018301925061107d565b50606087015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086820301608087015261112c8185610ffa565b979650505050505050565b6020808252825182820181905260009190848201906040850190845b8181101561116f57835183529284019291840191600101611153565b50909695505050505050565b60006020828403121561118d57600080fd5b5035919050565b6000602082840312156111a657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146111ca57600080fd5b9392505050565b6000815180845260005b818110156111f7576020818501810151868301820152016111db565b81811115611209576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112e0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526112ce8683516111d1565b95509382019390820190600101611294565b50508584038187015286518085528782019482019350915060005b8281101561134e5784516022811061133c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016112fb565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156113ae576113ae61135b565b60405290565b6040516080810167ffffffffffffffff811182821017156113ae576113ae61135b565b60405160e0810167ffffffffffffffff811182821017156113ae576113ae61135b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156114415761144161135b565b604052919050565b600082601f83011261145a57600080fd5b813567ffffffffffffffff8111156114745761147461135b565b6114a560207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016113fa565b8181528460208386010111156114ba57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156114ea57600080fd5b82359150602083013567ffffffffffffffff81111561150857600080fd5b61151485828601611449565b9150509250929050565b63ffffffff811681146103dd57600080fd5b803561153b8161151e565b919050565b600067ffffffffffffffff82111561155a5761155a61135b565b5060051b60200190565b600082601f83011261157557600080fd5b8135602061158a61158583611540565b6113fa565b82815261016092830285018201928282019190878511156115aa57600080fd5b8387015b858110156116915781818a0312156115c65760008081fd5b6115ce61138a565b6115d782611530565b81526115e4868301611530565b8682015260406115f5818401611530565b908201526060611606838201611530565b908201526080611617838201611530565b9082015260a0611628838201611530565b9082015260c0611639838201611530565b9082015260e061164a838201611530565b9082015261010061165c838201611530565b9082015261012061166e838201611530565b90820152610140611680838201611530565b9082015284529284019281016115ae565b5090979650505050505050565b600060208083850312156116b157600080fd5b823567ffffffffffffffff808211156116c957600080fd5b818501915060808083880312156116df57600080fd5b6116e76113b4565b83356116f28161151e565b8152838501356117018161151e565b818601526040848101358481111561171857600080fd5b8501601f81018a1361172957600080fd5b803561173761158582611540565b81815260e0918202830189019189820191908d84111561175657600080fd5b938a01935b838510156117fd5780858f0312156117735760008081fd5b61177b6113d7565b85356117868161151e565b8152858c01356117958161151e565b818d0152858701356117a68161151e565b818801526060868101356117b98161151e565b908201526117c8868a01611530565b8982015260a06117d9818801611530565b9082015260c06117ea878201611530565b90820152835293840193918a019161175b565b5080858701525050505050606084013594508285111561181c57600080fd5b61182888868601611564565b6060820152979650505050505050565b60006020828403121561184a57600080fd5b813567ffffffffffffffff81111561186157600080fd5b61186d84828501611449565b949350505050565b6020815260006111ca60208301846111d1565b805161153b8161151e565b600082601f8301126118a457600080fd5b815160206118b461158583611540565b82815261016092830285018201928282019190878511156118d457600080fd5b8387015b858110156116915781818a0312156118f05760008081fd5b6118f861138a565b61190182611888565b815261190e868301611888565b86820152604061191f818401611888565b908201526060611930838201611888565b908201526080611941838201611888565b9082015260a0611952838201611888565b9082015260c0611963838201611888565b9082015260e0611974838201611888565b90820152610100611986838201611888565b90820152610120611998838201611888565b908201526101406119aa838201611888565b9082015284529284019281016118d8565b600080600080608085870312156119d157600080fd5b84516119dc8161151e565b809450506020808601516119ef8161151e565b8094505060408087015167ffffffffffffffff80821115611a0f57600080fd5b818901915089601f830112611a2357600080fd5b8151611a3161158582611540565b81815260e0918202840186019186820191908d841115611a5057600080fd5b948701945b83861015611af95780868f031215611a6d5760008081fd5b611a756113d7565b8651611a808161151e565b815286890151611a8f8161151e565b818a015286880151611aa08161151e565b81890152606087810151611ab38161151e565b90820152611ac360808801611888565b608082015260a0611ad5818901611888565b9082015260c0611ae6888201611888565b9082015283529485019491870191611a55565b5060608c01519098509550505080841115611b1357600080fd5b505050611b2287828801611893565b91505092959194509250565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006080820163ffffffff808816845260208188168186015260806040860152829150865180845260a086019250818801935060005b81811015611c02578451805163ffffffff908116865260208083015182169087015260408083015182169087015260608083015182169087015260808083015182169087015260a08083015182169087015260c091820151169085015260e08401948301949350600101611b93565b50508482036060860152855180835291810192508086019160005b81811015611c3e57611c30858551610f0f565b945092820192600101611c1d565b50929998505050505050505050565b600181811c90821680611c6157607f821691505b602082108103611c9a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061186d60408301846111d156fea26469706673582212200ef31c530d19737c8cff4ca20aa3c8dc3dca7babc79628b702cb8fee6bb4076a64736f6c634300080d0033";

type TreasureConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureConfigComponent__factory extends ContractFactory {
  constructor(...args: TreasureConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureConfigComponent {
    return super.attach(address) as TreasureConfigComponent;
  }
  override connect(signer: Signer): TreasureConfigComponent__factory {
    return super.connect(signer) as TreasureConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureConfigComponentInterface {
    return new utils.Interface(_abi) as TreasureConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureConfigComponent;
  }
}
