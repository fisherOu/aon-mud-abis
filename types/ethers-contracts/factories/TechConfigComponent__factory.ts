/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TechConfigComponent,
  TechConfigComponentInterface,
} from "../TechConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "techGroupId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "basicResourceCost",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "basicLevelUpTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "levelUpCoolDownTime",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "accelerateResourceRatio",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cancelResourceRatio",
            type: "uint32",
          },
        ],
        internalType: "struct TechConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "techGroupId",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "basicResourceCost",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "basicLevelUpTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "levelUpCoolDownTime",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "accelerateResourceRatio",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "cancelResourceRatio",
            type: "uint32",
          },
        ],
        internalType: "struct TechConfig",
        name: "techConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200194d3803806200194d833981016040819052620000349162000200565b807fcff18fc6e785bccaceeb5098bd1a0e1b9eb64e10612dcefc604d27072aef9b4862000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000e4e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000e4e1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61170b80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e1461031a578063cccf7a8e1461032d578063f2fde38b1461034057600080fd5b8063b361be46146102e7578063b8bc073d146102fa57600080fd5b80638b282947146102a25780638da5cb5b146102b55780639d2c76b4146102bd578063af640d0f146102d057600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe01461025657806375c0669c1461026c578063861eb9051461027f57600080fd5b80634cc82215146102305780634fef6a381461024357600080fd5b80630ff4c9161461013b57806330b67baa146101c157806331b933b9146102065780633c04b95a1461021b575b600080fd5b61014e610149366004611115565b610353565b6040516101b89190600060c08201905082518252602083015167ffffffffffffffff80821660208501528060408601511660408501528060608601511660608501525050608083015163ffffffff80821660808501528060a08601511660a0850152505092915050565b60405180910390f35b6000546101e19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b8565b61020e6103f4565b6040516101b8919061112e565b61022e6102293660046111f2565b610428565b005b61022e61023e366004611115565b6104ae565b61022e6102513660046112b4565b6104f9565b61025e6105d7565b6040516101b892919061138b565b61022e61027a3660046112b4565b6109c2565b61029261028d3660046112b4565b6109f4565b60405190151581526020016101b8565b61022e6102b0366004611526565b610a7f565b6101e1610ac8565b61022e6102cb3660046112b4565b610b0d565b6102d960025481565b6040519081526020016101b8565b61020e6102f536600461156d565b6103f4565b61030d610308366004611115565b610c36565b6040516101b891906115aa565b61022e6103283660046112b4565b610cd8565b61029261033b366004611115565b610db3565b61022e61034e3660046112b4565b610dd5565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905290808080808061039388610c36565b8060200190518101906103a691906115bd565b6040805160c08101825296875267ffffffffffffffff9586166020880152938516938601939093529216606084015263ffffffff91821660808401521660a082015298975050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104aa82826000015183602001518460400151856060015186608001518760a001516040516020016104969695949392919095865267ffffffffffffffff948516602087015292841660408601529216606084015263ffffffff91821660808401521660a082015260c00190565b604051602081830303815290604052610a7f565b5050565b6104b7336109f4565b6104ed576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f681610e72565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610569576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600680825260e08201909252606091829190816020015b60608152602001906001900390816105f257505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600b81526020017f7465636847726f75704964000000000000000000000000000000000000000000815250826000815181106106725761067261163a565b6020026020010181905250600d816000815181106106925761069261163a565b602002602001019060218111156106ab576106ab61135c565b908160218111156106be576106be61135c565b815250506040518060400160405280601181526020017f62617369635265736f75726365436f73740000000000000000000000000000008152508260018151811061070b5761070b61163a565b6020026020010181905250600b8160018151811061072b5761072b61163a565b602002602001019060218111156107445761074461135c565b908160218111156107575761075761135c565b815250506040518060400160405280601081526020017f62617369634c6576656c557054696d6500000000000000000000000000000000815250826002815181106107a4576107a461163a565b6020026020010181905250600b816002815181106107c4576107c461163a565b602002602001019060218111156107dd576107dd61135c565b908160218111156107f0576107f061135c565b815250506040518060400160405280601381526020017f6c6576656c5570436f6f6c446f776e54696d65000000000000000000000000008152508260038151811061083d5761083d61163a565b6020026020010181905250600b8160038151811061085d5761085d61163a565b602002602001019060218111156108765761087661135c565b908160218111156108895761088961135c565b815250506040518060400160405280601781526020017f616363656c65726174655265736f75726365526174696f000000000000000000815250826004815181106108d6576108d661163a565b6020026020010181905250600a816004815181106108f6576108f661163a565b6020026020010190602181111561090f5761090f61135c565b908160218111156109225761092261135c565b815250506040518060400160405280601381526020017f63616e63656c5265736f75726365526174696f000000000000000000000000008152508260058151811061096f5761096f61163a565b6020026020010181905250600a8160058151811061098f5761098f61163a565b602002602001019060218111156109a8576109a861135c565b908160218111156109bb576109bb61135c565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a795750610a4a610ac8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a88336109f4565b610abe576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104aa8282610ee0565b6000610b087f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b7d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c1b57600080fd5b505af1158015610c2f573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610c5390611669565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7f90611669565b8015610ccc5780601f10610ca157610100808354040283529160200191610ccc565b820191906000526020600020905b815481529060010190602001808311610caf57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d48576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610dcc90611669565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e45576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104f681610f8e565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e8991611042565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610c01565b60008281526001602090815260409091208251610eff9284019061107c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f5890859085906004016116bc565b600060405180830381600087803b158015610f7257600080fd5b505af1158015610f86573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516104f6928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461104e90611669565b6000825580601f1061105e575050565b601f0160209004906000526020600020908101906104f69190611100565b82805461108890611669565b90600052602060002090601f0160209004810192826110aa57600085556110f0565b82601f106110c357805160ff19168380011785556110f0565b828001600101855582156110f0579182015b828111156110f05782518255916020019190600101906110d5565b506110fc929150611100565b5090565b5b808211156110fc5760008155600101611101565b60006020828403121561112757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156111665783518352928401929184019160010161114a565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156111c4576111c4611172565b60405290565b67ffffffffffffffff811681146104f657600080fd5b63ffffffff811681146104f657600080fd5b60008082840360e081121561120657600080fd5b8335925060c07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561123a57600080fd5b506112436111a1565b602084013581526040840135611258816111ca565b6020820152606084013561126b816111ca565b6040820152608084013561127e816111ca565b606082015260a0840135611291816111e0565b608082015260c08401356112a4816111e0565b60a0820152919491935090915050565b6000602082840312156112c657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146112ea57600080fd5b9392505050565b6000815180845260005b81811015611317576020818501810151868301820152016112fb565b81811115611329576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611400577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526113ee8683516112f1565b955093820193908201906001016113b4565b50508584038187015286518085528782019482019350915060005b8281101561146e5784516022811061145c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161141b565b5091979650505050505050565b600082601f83011261148c57600080fd5b813567ffffffffffffffff808211156114a7576114a7611172565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156114ed576114ed611172565b8160405283815286602085880101111561150657600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561153957600080fd5b82359150602083013567ffffffffffffffff81111561155757600080fd5b6115638582860161147b565b9150509250929050565b60006020828403121561157f57600080fd5b813567ffffffffffffffff81111561159657600080fd5b6115a28482850161147b565b949350505050565b6020815260006112ea60208301846112f1565b60008060008060008060c087890312156115d657600080fd5b8651955060208701516115e8816111ca565b60408801519095506115f9816111ca565b606088015190945061160a816111ca565b608088015190935061161b816111e0565b60a088015190925061162c816111e0565b809150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061167d57607f821691505b6020821081036116b6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006115a260408301846112f156fea2646970667358221220667321ce8643ee0d2920ea0764c2f92fa02ac70fcbfe7dcdc3c610967b95979c64736f6c634300080d0033";

type TechConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TechConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TechConfigComponent__factory extends ContractFactory {
  constructor(...args: TechConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TechConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<TechConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TechConfigComponent {
    return super.attach(address) as TechConfigComponent;
  }
  override connect(signer: Signer): TechConfigComponent__factory {
    return super.connect(signer) as TechConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TechConfigComponentInterface {
    return new utils.Interface(_abi) as TechConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TechConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as TechConfigComponent;
  }
}
