/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UsePassiveTreasureSystem,
  UsePassiveTreasureSystemInterface,
} from "../UsePassiveTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b1738038062001b1783398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000d2717901c565b5050505062000292565b600062000126620001ef60201b62000db81760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61187580620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046110c9565b6100cf565b60405161007191906111c3565b60405180910390f35b6100646100883660046111d6565b6100f9565b610095610c66565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611211565b610cab565b005b60606000828060200190518101906100e7919061122e565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610ddc565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190611247565b801561026e57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101859052829073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610248573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026c919061122e565b145b6102d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416c7265616479207069636b656455700000000000000000000000000000000060448201526064015b60405180910390fd5b6000805461031d9073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610ddc565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c9169060240160c060405180830381865afa15801561038e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b291906112ab565b805190915060ff1615610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064016102d0565b600080546104659073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610ddc565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810189905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156104d5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f9919061134a565b905042816000015167ffffffffffffffff1610610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016102d0565b600080546105b69073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610ddc565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018b905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610627573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064b91906113a5565b9050606080610811600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e4919061140a565b6000546107279073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e381610ddc565b85516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691630ff4c9169161077f9160040190815260200190565b600060405180830381865afa15801561079c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107e29190810190611477565b516040516107f391906020016111c3565b6040516020818303038152906040528051906020012060001c610ddc565b6040805160e0810182527f961d388c58e46fed9e89fd81a8ec1e27403995f406d211f565a024757c00226f8152600060208201528082018d9052606081018f90526080810185905260a081018490528582015163ffffffff1660c082015290517f7e62c17a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691637e62c17a916108c091600401611636565b6000604051808303816000875af11580156108df573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261092591908101906116d5565b50866080015163ffffffff16600103610b3d576040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff8a1690634cc8221590602401600060405180830381600087803b1580156109a057600080fd5b505af11580156109b4573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018d905273ffffffffffffffffffffffffffffffffffffffff8b169250634cc822159150602401600060405180830381600087803b158015610a2057600080fd5b505af1158015610a34573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018d905273ffffffffffffffffffffffffffffffffffffffff89169250634cc822159150602401600060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018d905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b158015610b2057600080fd5b505af1158015610b34573d6000803e3d6000fd5b50505050610c57565b6001876080015163ffffffff161115610c575760018760800151610b61919061171e565b63ffffffff1660808801526040517fa363c56f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169063a363c56f90610c24908f908b90600401600060e08201905083825260ff835116602083015260ff6020840151166040830152604083015167ffffffffffffffff808216606085015280606086015116608085015263ffffffff60808601511660a08501528060a08601511660c085015250509392505050565b600060405180830381600087803b158015610c3e57600080fd5b505af1158015610c52573d6000803e3d6000fd5b505050505b50505050505050505050919050565b6000610ca67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d1b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d2481610f28565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e4c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e92919081019061176a565b90508051600003610eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102d0565b610f2081600081518110610f1557610f15611810565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610d24928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561102e5761102e610fdc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561107b5761107b610fdc565b604052919050565b600067ffffffffffffffff82111561109d5761109d610fdc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156110db57600080fd5b813567ffffffffffffffff8111156110f257600080fd5b8201601f8101841361110357600080fd5b803561111661111182611083565b611034565b81815285602083850101111561112b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561116457818101518382015260200161114c565b83811115611173576000848401525b50505050565b60008151808452611191816020860160208601611149565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611179565b6000602082840312156111e857600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d2457600080fd5b60006020828403121561122357600080fd5b81356100f2816111ef565b60006020828403121561124057600080fd5b5051919050565b60006020828403121561125957600080fd5b815180151581146100f257600080fd5b805160ff8116811461127a57600080fd5b919050565b805167ffffffffffffffff8116811461127a57600080fd5b805163ffffffff8116811461127a57600080fd5b600060c082840312156112bd57600080fd5b60405160c0810181811067ffffffffffffffff821117156112e0576112e0610fdc565b6040526112ec83611269565b81526112fa60208401611269565b602082015261130b6040840161127f565b604082015261131c6060840161127f565b606082015261132d60808401611297565b608082015261133e60a0840161127f565b60a08201529392505050565b60006040828403121561135c57600080fd5b6040516040810181811067ffffffffffffffff8211171561137f5761137f610fdc565b60405261138b8361127f565b81526113996020840161127f565b60208201529392505050565b6000606082840312156113b757600080fd5b6040516060810181811067ffffffffffffffff821117156113da576113da610fdc565b604052825181526113ed60208401611297565b60208201526113fe60408401611297565b60408201529392505050565b60006020828403121561141c57600080fd5b81516100f2816111ef565b600061143561111184611083565b905082815283838301111561144957600080fd5b6100f2836020830184611149565b600082601f83011261146857600080fd5b6100f283835160208501611427565b60006020828403121561148957600080fd5b815167ffffffffffffffff808211156114a157600080fd5b9083019060c082860312156114b557600080fd5b6114bd61100b565b8251828111156114cc57600080fd5b6114d887828601611457565b8252506020830151828111156114ed57600080fd5b6114f987828601611457565b60208301525061150b60408401611297565b604082015261151c6060840161127f565b606082015261152d60808401611269565b608082015261153e60a08401611269565b60a082015295945050505050565b8060005b6002811015611173578151845260209384019390910190600101611550565b60008151808452602080850194508084016000805b8481101561162a5782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a0808301516115ca828d018261154c565b505060c082015160e0808c01865b60028110156115fc576115ec82855161154c565b92890192908401906001016115d8565b50508084015193505050506116156101608a018261154c565b506101a0979097019691830191600101611584565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a084015261167d61010084018261156f565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c08501526116b8828261156f565b91505063ffffffff60c08501511660e08401528091505092915050565b6000602082840312156116e757600080fd5b815167ffffffffffffffff8111156116fe57600080fd5b8201601f8101841361170f57600080fd5b610f2084825160208401611427565b600063ffffffff83811690831681811015611762577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b039392505050565b6000602080838503121561177d57600080fd5b825167ffffffffffffffff8082111561179557600080fd5b818501915085601f8301126117a957600080fd5b8151818111156117bb576117bb610fdc565b8060051b91506117cc848301611034565b81815291830184019184810190888411156117e657600080fd5b938501935b83851015611804578451825293850193908501906117eb565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205ed13feffde11e29213499aa08f3a39b1fe6258790704445ec6ab19aa98d9e8964736f6c634300080d0033";

type UsePassiveTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsePassiveTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsePassiveTreasureSystem__factory extends ContractFactory {
  constructor(...args: UsePassiveTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsePassiveTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UsePassiveTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UsePassiveTreasureSystem {
    return super.attach(address) as UsePassiveTreasureSystem;
  }
  override connect(signer: Signer): UsePassiveTreasureSystem__factory {
    return super.connect(signer) as UsePassiveTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsePassiveTreasureSystemInterface {
    return new utils.Interface(_abi) as UsePassiveTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsePassiveTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UsePassiveTreasureSystem;
  }
}
