/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UsePassiveTreasureSystem,
  UsePassiveTreasureSystemInterface,
} from "../UsePassiveTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c5a38038062001c5a83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000e1717901c565b5050505062000292565b600062000126620001ef60201b62000ea81760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6119b880620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046111b9565b6100cf565b60405161007191906112b3565b60405180910390f35b6100646100883660046112c6565b6100f9565b610095610d56565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611301565b610d9b565b005b60606000828060200190518101906100e7919061131e565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610ecc565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c9169060240160c060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d79190611379565b805190915060ff161561024b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064015b60405180910390fd5b6000805461028f9073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610ecc565b6040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101889052909150429073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156102fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103229190611476565b5167ffffffffffffffff1610610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e20796574000000000000000000000000000000006044820152606401610242565b600080546103d89073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c610ecc565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610446573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046a9190611492565b158061051157506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101889052429073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156104dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105019190611476565b6020015167ffffffffffffffff16105b610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616c726561647920426f756e64656400000000000000000000000000000000006044820152606401610242565b600080546105bb9073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610ecc565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018a905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa15801561062c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065091906114b4565b9050606080610816600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190611519565b60005461072c9073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e381610ecc565b85516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691630ff4c916916107849160040190815260200190565b600060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107e79190810190611586565b516040516107f891906020016112b3565b6040516020818303038152906040528051906020012060001c610ecc565b6040805160e0810182527f961d388c58e46fed9e89fd81a8ec1e27403995f406d211f565a024757c00226f8152600060208201528082018c9052606081018e90526080810185905260a081018490528582015163ffffffff1660c082015290517f7e62c17a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691637e62c17a916108c591600401611745565b6000604051808303816000875af11580156108e4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261092a91908101906117e4565b508473ffffffffffffffffffffffffffffffffffffffff16634e6641a98c60405180604001604052804267ffffffffffffffff1681526020018b6040015142610973919061185c565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b1580156109e857600080fd5b505af11580156109fc573d6000803e3d6000fd5b50505050866080015163ffffffff16600103610c4657600054610a559073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610ecc565b73ffffffffffffffffffffffffffffffffffffffff16634cc822158a6040518263ffffffff1660e01b8152600401610a8f91815260200190565b600060405180830381600087803b158015610aa957600080fd5b505af1158015610abd573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff8b169250634cc822159150602401600060405180830381600087803b158015610b2957600080fd5b505af1158015610b3d573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff89169250634cc822159150602401600060405180830381600087803b158015610ba957600080fd5b505af1158015610bbd573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b158015610c2957600080fd5b505af1158015610c3d573d6000803e3d6000fd5b50505050610d48565b6001876080015163ffffffff161115610d485760018760800151610c6a9190611888565b63ffffffff90811660808901908152604080517fa363c56f000000000000000000000000000000000000000000000000000000008152600481018f90528a5160ff908116602483015260208c0151166044820152908a015167ffffffffffffffff908116606483015260608b015181166084830152915190921660a483015260a08901511660c482015273ffffffffffffffffffffffffffffffffffffffff89169063a363c56f9060e401600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b505050505b505050505050505050919050565b6000610d967f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e0b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e1481611018565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610f3c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f8291908101906118ad565b90508051600003610fef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610242565b6110108160008151811061100557611005611953565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610e14928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561111e5761111e6110cc565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561116b5761116b6110cc565b604052919050565b600067ffffffffffffffff82111561118d5761118d6110cc565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156111cb57600080fd5b813567ffffffffffffffff8111156111e257600080fd5b8201601f810184136111f357600080fd5b803561120661120182611173565b611124565b81815285602083850101111561121b57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561125457818101518382015260200161123c565b83811115611263576000848401525b50505050565b60008151808452611281816020860160208601611239565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611269565b6000602082840312156112d857600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610e1457600080fd5b60006020828403121561131357600080fd5b81356100f2816112df565b60006020828403121561133057600080fd5b5051919050565b805160ff8116811461134857600080fd5b919050565b805167ffffffffffffffff8116811461134857600080fd5b805163ffffffff8116811461134857600080fd5b600060c0828403121561138b57600080fd5b60405160c0810181811067ffffffffffffffff821117156113ae576113ae6110cc565b6040526113ba83611337565b81526113c860208401611337565b60208201526113d96040840161134d565b60408201526113ea6060840161134d565b60608201526113fb60808401611365565b608082015261140c60a0840161134d565b60a08201529392505050565b60006040828403121561142a57600080fd5b6040516040810181811067ffffffffffffffff8211171561144d5761144d6110cc565b60405290508061145c8361134d565b815261146a6020840161134d565b60208201525092915050565b60006040828403121561148857600080fd5b6100f28383611418565b6000602082840312156114a457600080fd5b815180151581146100f257600080fd5b6000606082840312156114c657600080fd5b6040516060810181811067ffffffffffffffff821117156114e9576114e96110cc565b604052825181526114fc60208401611365565b602082015261150d60408401611365565b60408201529392505050565b60006020828403121561152b57600080fd5b81516100f2816112df565b600061154461120184611173565b905082815283838301111561155857600080fd5b6100f2836020830184611239565b600082601f83011261157757600080fd5b6100f283835160208501611536565b60006020828403121561159857600080fd5b815167ffffffffffffffff808211156115b057600080fd5b9083019060c082860312156115c457600080fd5b6115cc6110fb565b8251828111156115db57600080fd5b6115e787828601611566565b8252506020830151828111156115fc57600080fd5b61160887828601611566565b60208301525061161a60408401611365565b604082015261162b6060840161134d565b606082015261163c60808401611337565b608082015261164d60a08401611337565b60a082015295945050505050565b8060005b600281101561126357815184526020938401939091019060010161165f565b60008151808452602080850194508084016000805b848110156117395782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a0808301516116d9828d018261165b565b505060c082015160e0808c01865b600281101561170b576116fb82855161165b565b92890192908401906001016116e7565b50508084015193505050506117246101608a018261165b565b506101a0979097019691830191600101611693565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a084015261178c61010084018261167e565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c08501526117c7828261167e565b91505063ffffffff60c08501511660e08401528091505092915050565b6000602082840312156117f657600080fd5b815167ffffffffffffffff81111561180d57600080fd5b8201601f8101841361181e57600080fd5b61101084825160208401611536565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681851680830382111561187f5761187f61182d565b01949350505050565b600063ffffffff838116908316818110156118a5576118a561182d565b039392505050565b600060208083850312156118c057600080fd5b825167ffffffffffffffff808211156118d857600080fd5b818501915085601f8301126118ec57600080fd5b8151818111156118fe576118fe6110cc565b8060051b915061190f848301611124565b818152918301840191848101908884111561192957600080fd5b938501935b838510156119475784518252938501939085019061192e565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212208d74c82e4eb9ad3997fe69fc1cad4e4aa14dd59c9ba3c761c945935424892e1e64736f6c634300080d0033";

type UsePassiveTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UsePassiveTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UsePassiveTreasureSystem__factory extends ContractFactory {
  constructor(...args: UsePassiveTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UsePassiveTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UsePassiveTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UsePassiveTreasureSystem {
    return super.attach(address) as UsePassiveTreasureSystem;
  }
  override connect(signer: Signer): UsePassiveTreasureSystem__factory {
    return super.connect(signer) as UsePassiveTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UsePassiveTreasureSystemInterface {
    return new utils.Interface(_abi) as UsePassiveTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UsePassiveTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UsePassiveTreasureSystem;
  }
}
