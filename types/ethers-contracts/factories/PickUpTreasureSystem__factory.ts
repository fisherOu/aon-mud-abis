/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PickUpTreasureSystem,
  PickUpTreasureSystemInterface,
} from "../PickUpTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureSeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "treasureType",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "typeId",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct PickUpInfo",
        name: "pickUpInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bc338038062001bc383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000bc117901c565b5050505062000292565b600062000126620001ef60201b62000c521760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61192180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780631d87aa901461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610fe8565b6100cf565b60405161007191906110ab565b60405180910390f35b6100646100883660046111a3565b6100f9565b610095610b00565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046112c9565b610b45565b005b60606000828060200190518101906100e791906113ca565b90506100f2816100f9565b9392505050565b60008054606091906101419073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610c76565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160c060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af91906114de565b8051909150156103005760006040518060c001604052808560000151815260200185606001518152602001856080015181526020018560a0015181526020018560200151815260200185604001518152509050816080015173ffffffffffffffffffffffffffffffffffffffff1663f398789b8560c001518660e00151876101000151856040518563ffffffff1660e01b815260040161025294939291906115aa565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610293919061162e565b6102fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c6564207069636b75702070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b505b600080543391906103479073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610c76565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b59190611649565b9050806080015167ffffffffffffffff168560200151111580156103eb57508060a0015167ffffffffffffffff16856040015111155b610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d697400000000000000000000000000000060448201526064016102f5565b806020015167ffffffffffffffff1685600001511115801561048f5750806000015167ffffffffffffffff16816020015167ffffffffffffffff1611155b806104c45750806020015167ffffffffffffffff168560000151111580156104c457508051855167ffffffffffffffff909116105b61052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f20747265617375726520746f207069636b2075700000000000000000000060448201526064016102f5565b6000805461056e9073ffffffffffffffffffffffffffffffffffffffff167f227a211c6d125a9d774669e52dc0800efe47a0b26c3f94606cc2fbbf12eb16db610c76565b86516040517ffbdfa1ea000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff83169063fbdfa1ea90602401600060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106289190810190611701565b9050600080825111156106535781600081518110610648576106486117a7565b602002602001015190505b806000036106ef57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec91906117d6565b90505b600080546107339073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610c76565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c5919061162e565b1561082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416c7265616479207069636b656455700000000000000000000000000000000060448201526064016102f5565b600080546108709073ffffffffffffffffffffffffffffffffffffffff167faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c456989958610c76565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109009190810190611803565b9050806020015163ffffffff168a6101600151101580156109305750806000015163ffffffff168a610160015111155b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f656e65726779206f766572206c696d697400000000000000000000000000000060448201526064016102f5565b89516040517f1ab06ee500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871691631ab06ee5916109f3918791600401918252602082015260400190565b600060405180830381600087803b158015610a0d57600080fd5b505af1158015610a21573d6000803e3d6000fd5b5050600054610a69925073ffffffffffffffffffffffffffffffffffffffff1690507f60c75de7a5b0398849a1e84398f8f1f8d3aedeb9bd52b420fb7a970fa1f7c006610c76565b73ffffffffffffffffffffffffffffffffffffffff1663408531778860405180604001604052808e610160015181526020018e61012001518152506040518363ffffffff1660e01b8152600401610ac19291906118b6565b600060405180830381600087803b158015610adb57600080fd5b505af1158015610aef573d6000803e3d6000fd5b505050505050505050505050919050565b6000610b407f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bb5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bbe81610dc2565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610ce6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d2c9190810190611701565b90508051600003610d99576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102f5565b610dba81600081518110610daf57610daf6117a7565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610bbe928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715610ec957610ec9610e76565b60405290565b6040516080810167ffffffffffffffff81118282101715610ec957610ec9610e76565b6040805190810167ffffffffffffffff81118282101715610ec957610ec9610e76565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f5c57610f5c610e76565b604052919050565b600067ffffffffffffffff821115610f7e57610f7e610e76565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610fbd610fb884610f64565b610f15565b9050828152838383011115610fd157600080fd5b828260208301376000602084830101529392505050565b600060208284031215610ffa57600080fd5b813567ffffffffffffffff81111561101157600080fd5b8201601f8101841361102257600080fd5b610dba84823560208401610faa565b60005b8381101561104c578181015183820152602001611034565b8381111561105b576000848401525b50505050565b60008151808452611079816020860160208601611031565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611061565b600082601f8301126110cf57600080fd5b6110d7610ef2565b8060408401858111156110e957600080fd5b845b818110156111035780358452602093840193016110eb565b509095945050505050565b600082601f83011261111f57600080fd5b611127610ef2565b80608084018581111561113957600080fd5b845b818110156111035761114d87826110be565b845260209093019260400161113b565b600082601f83011261116e57600080fd5b6100f283833560208501610faa565b67ffffffffffffffff81168114610bbe57600080fd5b803561119e8161117d565b919050565b6000602082840312156111b557600080fd5b813567ffffffffffffffff808211156111cd57600080fd5b9083019061022082860312156111e257600080fd5b6111ea610ea5565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261122d8660c085016110be565b60c08201526101006112418782860161110e565b60e08301526112548761018086016110be565b908201526101c08301358281111561126b57600080fd5b6112778782860161115d565b6101208301525061128b6101e08401611193565b6101408201526102009290920135610160830152509392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610bbe57600080fd5b6000602082840312156112db57600080fd5b81356100f2816112a7565b600082601f8301126112f757600080fd5b6112ff610ef2565b80604084018581111561131157600080fd5b845b81811015611103578051845260209384019301611313565b600082601f83011261133c57600080fd5b611344610ef2565b80608084018581111561135657600080fd5b845b818110156111035761136a87826112e6565b8452602090930192604001611358565b600082601f83011261138b57600080fd5b8151611399610fb882610f64565b8181528460208386010111156113ae57600080fd5b610dba826020830160208701611031565b805161119e8161117d565b6000602082840312156113dc57600080fd5b815167ffffffffffffffff808211156113f457600080fd5b90830190610220828603121561140957600080fd5b611411610ea5565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201526114548660c085016112e6565b60c08201526101006114688782860161132b565b60e083015261147b8761018086016112e6565b908201526101c08301518281111561149257600080fd5b61149e8782860161137a565b610120830152506114b26101e084016113bf565b6101408201526102009290920151610160830152509392505050565b8051801515811461119e57600080fd5b600060c082840312156114f057600080fd5b60405160c0810181811067ffffffffffffffff8211171561151357611513610e76565b60405261151f836114ce565b8152602083015161152f816112a7565b60208201526040830151611542816112a7565b60408201526060830151611555816112a7565b60608201526080830151611568816112a7565b608082015260a083015161157b816112a7565b60a08201529392505050565b8060005b600281101561105b57815184526020938401939091019060010161158b565b6101c081016115b98287611587565b60408083018660005b60028110156115e9576115d6838351611587565b91830191602091909101906001016115c2565b505050506115fa60c0830185611587565b61010082018360005b6006811015611622578151835260209283019290910190600101611603565b50505095945050505050565b60006020828403121561164057600080fd5b6100f2826114ce565b600060e0828403121561165b57600080fd5b60405160e0810181811067ffffffffffffffff8211171561167e5761167e610e76565b604052825161168c8161117d565b8152602083015161169c8161117d565b602082015260408301516116af8161117d565b604082015260608301516116c28161117d565b60608201526116d3608084016113bf565b60808201526116e460a084016113bf565b60a08201526116f560c084016113bf565b60c08201529392505050565b6000602080838503121561171457600080fd5b825167ffffffffffffffff8082111561172c57600080fd5b818501915085601f83011261174057600080fd5b81518181111561175257611752610e76565b8060051b9150611763848301610f15565b818152918301840191848101908884111561177d57600080fd5b938501935b8385101561179b57845182529385019390850190611782565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156117e857600080fd5b5051919050565b805163ffffffff8116811461119e57600080fd5b60006020828403121561181557600080fd5b815167ffffffffffffffff8082111561182d57600080fd5b908301906080828603121561184157600080fd5b611849610ecf565b611852836117ef565b8152611860602084016117ef565b602082015260408301518281111561187757600080fd5b6118838782860161137a565b60408301525060608301518281111561189b57600080fd5b6118a78782860161137a565b60608301525095945050505050565b828152604060208201528151604082015260006020830151604060608401526118e26080840182611061565b9594505050505056fea26469706673582212205cac45ab11293f41a226ca37c6902241cb98b1a682fee40ddd79781cc83cad4b64736f6c634300080d0033";

type PickUpTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PickUpTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PickUpTreasureSystem__factory extends ContractFactory {
  constructor(...args: PickUpTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PickUpTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<PickUpTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): PickUpTreasureSystem {
    return super.attach(address) as PickUpTreasureSystem;
  }
  override connect(signer: Signer): PickUpTreasureSystem__factory {
    return super.connect(signer) as PickUpTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PickUpTreasureSystemInterface {
    return new utils.Interface(_abi) as PickUpTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PickUpTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PickUpTreasureSystem;
  }
}
