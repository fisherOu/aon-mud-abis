/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PickUpTreasureSystem,
  PickUpTreasureSystemInterface,
} from "../PickUpTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureSeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "terrainPerlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasurePerlin",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "treasureType",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "typeId",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct PickUpInfo",
        name: "pickUpInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001db338038062001db383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200093f17901c565b5050505062000292565b600062000126620001ef60201b620009d01760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611b1180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a19c332c146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610dd3565b6100cf565b6040516100719190610e96565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610f8e565b61013e565b6100cd6100c83660046110bf565b6108c3565b005b60606000828060200190518101906100e791906111c8565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091906101869073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d36109f4565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161012060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f591906112f2565b8051909150156103515760006040518060e001604052808560000151815260200185606001518152602001856080015181526020018560a0015181526020018560c0015181526020018560200151815260200185604001518152509050816080015173ffffffffffffffffffffffffffffffffffffffff1663c894e7578560e00151866101000151876101200151856040518563ffffffff1660e01b81526004016102a394939291906113cb565b602060405180830381865afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e4919061144f565b61034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c6564207069636b75702070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b505b600080543391906103989073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b766109f4565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa1580156103e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610406919061146a565b9050806080015167ffffffffffffffff1685602001511115801561043c57508060a0015167ffffffffffffffff16856040015111155b6104a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d69740000000000000000000000000000006044820152606401610346565b611d4c8560a00151101580156104dc575060208101516104c3906040611551565b6104ce90601061169a565b85516104da91906116b0565b155b610542576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f20747265617375726520746f207069636b207570000000000000000000006044820152606401610346565b8451600080546105889073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf066109f4565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156105f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061a919061144f565b15610681576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416c7265616479207069636b65645570000000000000000000000000000000006044820152606401610346565b600080546106c59073ffffffffffffffffffffffffffffffffffffffff167faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c4569899586109f4565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa15801561070f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107559190810190611858565b9050806020015163ffffffff16886101800151101580156107855750806000015163ffffffff1688610180015111155b6107eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f656e65726779206f766572206c696d69740000000000000000000000000000006044820152606401610346565b60005461082e9073ffffffffffffffffffffffffffffffffffffffff167f60c75de7a5b0398849a1e84398f8f1f8d3aedeb9bd52b420fb7a970fa1f7c0066109f4565b73ffffffffffffffffffffffffffffffffffffffff1663408531778660405180604001604052808c610180015181526020018c61014001518152506040518363ffffffff1660e01b81526004016108869291906119e6565b600060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b50505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610933576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093c81610b42565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a64573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610aaa9190810190611a1b565b90508051600003610b17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610346565b610b3881600081518110610b2d57610b2d611aac565b602002602001015190565b9150505b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161093c928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101a0810167ffffffffffffffff81118282101715610c4957610c49610bf6565b60405290565b604051610120810167ffffffffffffffff81118282101715610c4957610c49610bf6565b604051610160810167ffffffffffffffff81118282101715610c4957610c49610bf6565b6040516080810167ffffffffffffffff81118282101715610c4957610c49610bf6565b60405160e0810167ffffffffffffffff81118282101715610c4957610c49610bf6565b6040805190810167ffffffffffffffff81118282101715610c4957610c49610bf6565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610d4757610d47610bf6565b604052919050565b600067ffffffffffffffff821115610d6957610d69610bf6565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610da8610da384610d4f565b610d00565b9050828152838383011115610dbc57600080fd5b828260208301376000602084830101529392505050565b600060208284031215610de557600080fd5b813567ffffffffffffffff811115610dfc57600080fd5b8201601f81018413610e0d57600080fd5b610b3884823560208401610d95565b60005b83811015610e37578181015183820152602001610e1f565b83811115610e46576000848401525b50505050565b60008151808452610e64816020860160208601610e1c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610e4c565b600082601f830112610eba57600080fd5b610ec2610cdd565b806040840185811115610ed457600080fd5b845b81811015610eee578035845260209384019301610ed6565b509095945050505050565b600082601f830112610f0a57600080fd5b610f12610cdd565b806080840185811115610f2457600080fd5b845b81811015610eee57610f388782610ea9565b8452602090930192604001610f26565b600082601f830112610f5957600080fd5b6100f283833560208501610d95565b67ffffffffffffffff8116811461093c57600080fd5b8035610f8981610f68565b919050565b600060208284031215610fa057600080fd5b813567ffffffffffffffff80821115610fb857600080fd5b908301906102408286031215610fcd57600080fd5b610fd5610c25565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201526110228660e08501610ea9565b60e082015261012061103687828601610ef9565b61010083015261104a876101a08601610ea9565b908201526101e08301358281111561106157600080fd5b61106d87828601610f48565b610140830152506110816102008401610f7e565b6101608201526102209290920135610180830152509392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461093c57600080fd5b6000602082840312156110d157600080fd5b81356100f28161109d565b600082601f8301126110ed57600080fd5b6110f5610cdd565b80604084018581111561110757600080fd5b845b81811015610eee578051845260209384019301611109565b600082601f83011261113257600080fd5b61113a610cdd565b80608084018581111561114c57600080fd5b845b81811015610eee5761116087826110dc565b845260209093019260400161114e565b600082601f83011261118157600080fd5b815161118f610da382610d4f565b8181528460208386010111156111a457600080fd5b6111b5826020830160208701610e1c565b949350505050565b8051610f8981610f68565b6000602082840312156111da57600080fd5b815167ffffffffffffffff808211156111f257600080fd5b90830190610240828603121561120757600080fd5b61120f610c25565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c082015261125c8660e085016110dc565b60e082015261012061127087828601611121565b610100830152611284876101a086016110dc565b908201526101e08301518281111561129b57600080fd5b6112a787828601611170565b610140830152506112bb61020084016111bd565b6101608201526102209290920151610180830152509392505050565b80518015158114610f8957600080fd5b8051610f898161109d565b6000610120828403121561130557600080fd5b61130d610c4f565b611316836112d7565b8152611324602084016112e7565b6020820152611335604084016112e7565b6040820152611346606084016112e7565b6060820152611357608084016112e7565b608082015261136860a084016112e7565b60a082015261137960c084016112e7565b60c082015261138a60e084016112e7565b60e082015261010061139d8185016112e7565b908201529392505050565b8060005b6002811015610e465781518452602093840193909101906001016113ac565b6101e081016113da82876113a8565b60408083018660005b600281101561140a576113f78383516113a8565b91830191602091909101906001016113e3565b5050505061141b60c08301856113a8565b61010082018360005b6007811015611443578151835260209283019290910190600101611424565b50505095945050505050565b60006020828403121561146157600080fd5b6100f2826112d7565b600060e0828403121561147c57600080fd5b60405160e0810181811067ffffffffffffffff8211171561149f5761149f610bf6565b60405282516114ad81610f68565b815260208301516114bd81610f68565b602082015260408301516114d081610f68565b604082015260608301516114e381610f68565b60608201526114f4608084016111bd565b608082015261150560a084016111bd565b60a082015261151660c084016111bd565b60c08201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8381169083168181101561157257611572611522565b039392505050565b600181815b808511156115d357817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156115b9576115b9611522565b808516156115c657918102915b93841c939080029061157f565b509250929050565b6000826115ea57506001610b3c565b816115f757506000610b3c565b816001811461160d576002811461161757611633565b6001915050610b3c565b60ff84111561162857611628611522565b50506001821b610b3c565b5060208310610133831016604e8410600b8410161715611656575081810a610b3c565b611660838361157a565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561169257611692611522565b029392505050565b60006100f267ffffffffffffffff8416836115db565b6000826116e6577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b805163ffffffff81168114610f8957600080fd5b600067ffffffffffffffff82111561171957611719610bf6565b5060051b60200190565b600082601f83011261173457600080fd5b81516020611744610da3836116ff565b828152610160928302850182019282820191908785111561176457600080fd5b8387015b8581101561184b5781818a0312156117805760008081fd5b611788610c73565b611791826116eb565b815261179e8683016116eb565b8682015260406117af8184016116eb565b9082015260606117c08382016116eb565b9082015260806117d18382016116eb565b9082015260a06117e28382016116eb565b9082015260c06117f38382016116eb565b9082015260e06118048382016116eb565b908201526101006118168382016116eb565b908201526101206118288382016116eb565b9082015261014061183a8382016116eb565b908201528452928401928101611768565b5090979650505050505050565b6000602080838503121561186b57600080fd5b825167ffffffffffffffff8082111561188357600080fd5b8185019150608080838803121561189957600080fd5b6118a1610c97565b6118aa846116eb565b81526118b78585016116eb565b85820152604080850151848111156118ce57600080fd5b8501601f81018a136118df57600080fd5b80516118ed610da3826116ff565b81815260e0918202830189019189820191908d84111561190c57600080fd5b938a01935b838510156119ab5780858f0312156119295760008081fd5b611931610cba565b61193a866116eb565b81526119478c87016116eb565b8c8201526119568787016116eb565b8782015260606119678188016116eb565b90820152611976868a016116eb565b8982015260a06119878188016116eb565b9082015260c06119988782016116eb565b90820152835293840193918a0191611911565b508085870152505050505060608401519450828511156119ca57600080fd5b6119d688868601611723565b6060820152979650505050505050565b82815260406020820152815160408201526000602083015160406060840152611a126080840182610e4c565b95945050505050565b60006020808385031215611a2e57600080fd5b825167ffffffffffffffff811115611a4557600080fd5b8301601f81018513611a5657600080fd5b8051611a64610da3826116ff565b81815260059190911b82018301908381019087831115611a8357600080fd5b928401925b82841015611aa157835182529284019290840190611a88565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212201a8d84ade51a10977f80dd733788d63c47b449d2bf357dc1ba794315c1d073f964736f6c634300080d0033";

type PickUpTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PickUpTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PickUpTreasureSystem__factory extends ContractFactory {
  constructor(...args: PickUpTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PickUpTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<PickUpTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): PickUpTreasureSystem {
    return super.attach(address) as PickUpTreasureSystem;
  }
  override connect(signer: Signer): PickUpTreasureSystem__factory {
    return super.connect(signer) as PickUpTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PickUpTreasureSystemInterface {
    return new utils.Interface(_abi) as PickUpTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PickUpTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PickUpTreasureSystem;
  }
}
