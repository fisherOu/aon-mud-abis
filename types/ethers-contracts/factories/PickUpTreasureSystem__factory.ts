/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  PickUpTreasureSystem,
  PickUpTreasureSystemInterface,
} from "../PickUpTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureSeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "string",
            name: "treasureType",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "typeId",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "energy",
            type: "uint256",
          },
        ],
        internalType: "struct PickUpInfo",
        name: "pickUpInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b3338038062001b3383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000b3117901c565b5050505062000292565b600062000126620001ef60201b62000bc21760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61189180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780631d87aa901461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610f58565b6100cf565b604051610071919061101b565b60405180910390f35b610064610088366004611113565b6100f9565b610095610a70565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611239565b610ab5565b005b60606000828060200190518101906100e7919061133a565b90506100f2816100f9565b9392505050565b60008054606091906101419073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610be6565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160c060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af919061144e565b8051909150156103005760006040518060c001604052808560000151815260200185606001518152602001856080015181526020018560a0015181526020018560200151815260200185604001518152509050816080015173ffffffffffffffffffffffffffffffffffffffff1663f398789b8560c001518660e00151876101000151856040518563ffffffff1660e01b8152600401610252949392919061151a565b602060405180830381865afa15801561026f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610293919061159e565b6102fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c6564207069636b75702070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b505b600080543391906103479073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610be6565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b591906115b9565b9050806080015167ffffffffffffffff168560200151111580156103eb57508060a0015167ffffffffffffffff16856040015111155b610451576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d697400000000000000000000000000000060448201526064016102f5565b806020015167ffffffffffffffff1685600001511115801561048f5750806000015167ffffffffffffffff16816020015167ffffffffffffffff1611155b806104c45750806020015167ffffffffffffffff168560000151111580156104c457508051855167ffffffffffffffff909116105b61052a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f20747265617375726520746f207069636b2075700000000000000000000060448201526064016102f5565b6000805461056e9073ffffffffffffffffffffffffffffffffffffffff167f227a211c6d125a9d774669e52dc0800efe47a0b26c3f94606cc2fbbf12eb16db610be6565b86516040517ffbdfa1ea000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff83169063fbdfa1ea90602401600060405180830381865afa1580156105e2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106289190810190611671565b905060008082511115610653578160008151811061064857610648611717565b602002602001015190505b806000036106ef57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190611746565b90505b600080546107339073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610be6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156107a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c5919061159e565b1561082c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f416c7265616479207069636b656455700000000000000000000000000000000060448201526064016102f5565b600080546108709073ffffffffffffffffffffffffffffffffffffffff167faba0920628f0b3ae57d55af83900bf96b519a336c752234d24c5e3c456989958610be6565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa1580156108ba573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109009190810190611773565b9050806020015163ffffffff168a6101600151101580156109305750806000015163ffffffff168a610160015111155b610996576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f656e65726779206f766572206c696d697400000000000000000000000000000060448201526064016102f5565b6000546109d99073ffffffffffffffffffffffffffffffffffffffff167f60c75de7a5b0398849a1e84398f8f1f8d3aedeb9bd52b420fb7a970fa1f7c006610be6565b73ffffffffffffffffffffffffffffffffffffffff1663408531778860405180604001604052808e610160015181526020018e61012001518152506040518363ffffffff1660e01b8152600401610a31929190611826565b600060405180830381600087803b158015610a4b57600080fd5b505af1158015610a5f573d6000803e3d6000fd5b505050505050505050505050919050565b6000610ab07f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b25576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2e81610d32565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610c56573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c9c9190810190611671565b90508051600003610d09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102f5565b610d2a81600081518110610d1f57610d1f611717565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610b2e928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610180810167ffffffffffffffff81118282101715610e3957610e39610de6565b60405290565b6040516080810167ffffffffffffffff81118282101715610e3957610e39610de6565b6040805190810167ffffffffffffffff81118282101715610e3957610e39610de6565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ecc57610ecc610de6565b604052919050565b600067ffffffffffffffff821115610eee57610eee610de6565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610f2d610f2884610ed4565b610e85565b9050828152838383011115610f4157600080fd5b828260208301376000602084830101529392505050565b600060208284031215610f6a57600080fd5b813567ffffffffffffffff811115610f8157600080fd5b8201601f81018413610f9257600080fd5b610d2a84823560208401610f1a565b60005b83811015610fbc578181015183820152602001610fa4565b83811115610fcb576000848401525b50505050565b60008151808452610fe9816020860160208601610fa1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610fd1565b600082601f83011261103f57600080fd5b611047610e62565b80604084018581111561105957600080fd5b845b8181101561107357803584526020938401930161105b565b509095945050505050565b600082601f83011261108f57600080fd5b611097610e62565b8060808401858111156110a957600080fd5b845b81811015611073576110bd878261102e565b84526020909301926040016110ab565b600082601f8301126110de57600080fd5b6100f283833560208501610f1a565b67ffffffffffffffff81168114610b2e57600080fd5b803561110e816110ed565b919050565b60006020828403121561112557600080fd5b813567ffffffffffffffff8082111561113d57600080fd5b90830190610220828603121561115257600080fd5b61115a610e15565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261119d8660c0850161102e565b60c08201526101006111b18782860161107e565b60e08301526111c487610180860161102e565b908201526101c0830135828111156111db57600080fd5b6111e7878286016110cd565b610120830152506111fb6101e08401611103565b6101408201526102009290920135610160830152509392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b2e57600080fd5b60006020828403121561124b57600080fd5b81356100f281611217565b600082601f83011261126757600080fd5b61126f610e62565b80604084018581111561128157600080fd5b845b81811015611073578051845260209384019301611283565b600082601f8301126112ac57600080fd5b6112b4610e62565b8060808401858111156112c657600080fd5b845b81811015611073576112da8782611256565b84526020909301926040016112c8565b600082601f8301126112fb57600080fd5b8151611309610f2882610ed4565b81815284602083860101111561131e57600080fd5b610d2a826020830160208701610fa1565b805161110e816110ed565b60006020828403121561134c57600080fd5b815167ffffffffffffffff8082111561136457600080fd5b90830190610220828603121561137957600080fd5b611381610e15565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a08201526113c48660c08501611256565b60c08201526101006113d88782860161129b565b60e08301526113eb876101808601611256565b908201526101c08301518281111561140257600080fd5b61140e878286016112ea565b610120830152506114226101e0840161132f565b6101408201526102009290920151610160830152509392505050565b8051801515811461110e57600080fd5b600060c0828403121561146057600080fd5b60405160c0810181811067ffffffffffffffff8211171561148357611483610de6565b60405261148f8361143e565b8152602083015161149f81611217565b602082015260408301516114b281611217565b604082015260608301516114c581611217565b606082015260808301516114d881611217565b608082015260a08301516114eb81611217565b60a08201529392505050565b8060005b6002811015610fcb5781518452602093840193909101906001016114fb565b6101c0810161152982876114f7565b60408083018660005b6002811015611559576115468383516114f7565b9183019160209190910190600101611532565b5050505061156a60c08301856114f7565b61010082018360005b6006811015611592578151835260209283019290910190600101611573565b50505095945050505050565b6000602082840312156115b057600080fd5b6100f28261143e565b600060e082840312156115cb57600080fd5b60405160e0810181811067ffffffffffffffff821117156115ee576115ee610de6565b60405282516115fc816110ed565b8152602083015161160c816110ed565b6020820152604083015161161f816110ed565b60408201526060830151611632816110ed565b60608201526116436080840161132f565b608082015261165460a0840161132f565b60a082015261166560c0840161132f565b60c08201529392505050565b6000602080838503121561168457600080fd5b825167ffffffffffffffff8082111561169c57600080fd5b818501915085601f8301126116b057600080fd5b8151818111156116c2576116c2610de6565b8060051b91506116d3848301610e85565b81815291830184019184810190888411156116ed57600080fd5b938501935b8385101561170b578451825293850193908501906116f2565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561175857600080fd5b5051919050565b805163ffffffff8116811461110e57600080fd5b60006020828403121561178557600080fd5b815167ffffffffffffffff8082111561179d57600080fd5b90830190608082860312156117b157600080fd5b6117b9610e3f565b6117c28361175f565b81526117d06020840161175f565b60208201526040830151828111156117e757600080fd5b6117f3878286016112ea565b60408301525060608301518281111561180b57600080fd5b611817878286016112ea565b60608301525095945050505050565b828152604060208201528151604082015260006020830151604060608401526118526080840182610fd1565b9594505050505056fea264697066735822122011beb2b7ee26787cbdc22860594f632cd7f1b04d6fea30c0342e6b6254dbf51364736f6c634300080d0033";

type PickUpTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PickUpTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PickUpTreasureSystem__factory extends ContractFactory {
  constructor(...args: PickUpTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PickUpTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<PickUpTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): PickUpTreasureSystem {
    return super.attach(address) as PickUpTreasureSystem;
  }
  override connect(signer: Signer): PickUpTreasureSystem__factory {
    return super.connect(signer) as PickUpTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PickUpTreasureSystemInterface {
    return new utils.Interface(_abi) as PickUpTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PickUpTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PickUpTreasureSystem;
  }
}
