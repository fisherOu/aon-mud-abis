/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { MarkSystem, MarkSystemInterface } from "../MarkSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "realHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
        ],
        internalType: "struct MarkInfo",
        name: "markInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015343803806200153483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200074f17901c565b5050505062000292565b600062000126620001ef60201b620007e01760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61129280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780637b5cb78b1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610acf565b6100cf565b6040516100719190610b82565b60405180910390f35b610064610088366004610c94565b6100f9565b61009561068e565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610d48565b6106d3565b005b60606000828060200190518101906100e79190610df9565b90506100f2816100f9565b9392505050565b60008054606091906101419073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610804565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160c060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af9190610ea0565b8051909150156102f55760006040518060a001604052808560600151815260200185600001518152602001856020015181526020018560400151815260200185608001518152509050816060015173ffffffffffffffffffffffffffffffffffffffff166334baeab98560a001518660c001518760e00151856040518563ffffffff1660e01b81526004016102479493929190610f72565b602060405180830381865afa158015610264573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102889190610ff6565b6102f3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4661696c6564206d61726b2070726f6f6620636865636b00000000000000000060448201526064015b60405180910390fd5b505b600080546103399073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610804565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610383573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a79190611029565b9050806080015167ffffffffffffffff168460200151111580156103dd57508060a0015167ffffffffffffffff16846040015111155b610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d697400000000000000000000000000000060448201526064016102ea565b600080546104879073ffffffffffffffffffffffffffffffffffffffff167f7b6e1afc104b7e498d92a5202135a932fbd13a556799eb8b3b435da6f581acca610804565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b81526004016040805180830381865afa1580156104d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f491906110d9565b9050806020015167ffffffffffffffff1685608001511115610572576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6d61726b20746f6f20666172000000000000000000000000000000000000000060448201526064016102ea565b6000546105b59073ffffffffffffffffffffffffffffffffffffffff167f4b1ac4c3aa37732e927cbff52c019e9fbdad0f3e454031afaefd319a3dc66ce4610804565b73ffffffffffffffffffffffffffffffffffffffff1663df49b4218660600151604051806040016040528089610100015181526020018560000151426105fb9190611134565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935281516024840152602090910151166044820152606401600060405180830381600087803b15801561066e57600080fd5b505af1158015610682573d6000803e3d6000fd5b50505050505050919050565b60006106ce7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610743576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074c81610950565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610874573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108ba9190810190611187565b90508051600003610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102ea565b6109488160008151811061093d5761093d61122d565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161074c928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610a5757610a57610a04565b60405290565b6040805190810167ffffffffffffffff81118282101715610a5757610a57610a04565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ac757610ac7610a04565b604052919050565b60006020808385031215610ae257600080fd5b823567ffffffffffffffff80821115610afa57600080fd5b818501915085601f830112610b0e57600080fd5b813581811115610b2057610b20610a04565b610b50847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a80565b91508082528684828501011115610b6657600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610baf57858101830151858201604001528201610b93565b81811115610bc1576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f830112610c0657600080fd5b610c0e610a5d565b806040840185811115610c2057600080fd5b845b81811015610c3a578035845260209384019301610c22565b509095945050505050565b600082601f830112610c5657600080fd5b610c5e610a5d565b806080840185811115610c7057600080fd5b845b81811015610c3a57610c848782610bf5565b8452602090930192604001610c72565b60006101c08284031215610ca757600080fd5b610caf610a33565b8235815260208301356020820152604083013560408201526060830135606082015260808301356080820152610ce88460a08501610bf5565b60a0820152610cfa8460e08501610c45565b60c0820152610d0d846101608501610bf5565b60e08201526101a0929092013561010083015250919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461074c57600080fd5b600060208284031215610d5a57600080fd5b81356100f281610d26565b600082601f830112610d7657600080fd5b610d7e610a5d565b806040840185811115610d9057600080fd5b845b81811015610c3a578051845260209384019301610d92565b600082601f830112610dbb57600080fd5b610dc3610a5d565b806080840185811115610dd557600080fd5b845b81811015610c3a57610de98782610d65565b8452602090930192604001610dd7565b60006101c08284031215610e0c57600080fd5b610e14610a33565b8251815260208301516020820152604083015160408201526060830151606082015260808301516080820152610e4d8460a08501610d65565b60a0820152610e5f8460e08501610daa565b60c0820152610e72846101608501610d65565b60e08201526101a0929092015161010083015250919050565b80518015158114610e9b57600080fd5b919050565b600060c08284031215610eb257600080fd5b60405160c0810181811067ffffffffffffffff82111715610ed557610ed5610a04565b604052610ee183610e8b565b81526020830151610ef181610d26565b60208201526040830151610f0481610d26565b60408201526060830151610f1781610d26565b60608201526080830151610f2a81610d26565b608082015260a0830151610f3d81610d26565b60a08201529392505050565b8060005b6002811015610f6c578151845260209384019390910190600101610f4d565b50505050565b6101a08101610f818287610f49565b60408083018660005b6002811015610fb157610f9e838351610f49565b9183019160209190910190600101610f8a565b50505050610fc260c0830185610f49565b61010082018360005b6005811015610fea578151835260209283019290910190600101610fcb565b50505095945050505050565b60006020828403121561100857600080fd5b6100f282610e8b565b805167ffffffffffffffff81168114610e9b57600080fd5b600060e0828403121561103b57600080fd5b60405160e0810181811067ffffffffffffffff8211171561105e5761105e610a04565b60405261106a83611011565b815261107860208401611011565b602082015261108960408401611011565b604082015261109a60608401611011565b60608201526110ab60808401611011565b60808201526110bc60a08401611011565b60a08201526110cd60c08401611011565b60c08201529392505050565b6000604082840312156110eb57600080fd5b6040516040810181811067ffffffffffffffff8211171561110e5761110e610a04565b60405261111a83611011565b815261112860208401611011565b60208201529392505050565b600067ffffffffffffffff80831681851680830382111561117e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01949350505050565b6000602080838503121561119a57600080fd5b825167ffffffffffffffff808211156111b257600080fd5b818501915085601f8301126111c657600080fd5b8151818111156111d8576111d8610a04565b8060051b91506111e9848301610a80565b818152918301840191848101908884111561120357600080fd5b938501935b8385101561122157845182529385019390850190611208565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122057e8c2754bb4e9b708ae701ffc366bdd30269b6904d08f96a9aa2ab2c04d165664736f6c634300080d0033";

type MarkSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MarkSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MarkSystem__factory extends ContractFactory {
  constructor(...args: MarkSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MarkSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<MarkSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): MarkSystem {
    return super.attach(address) as MarkSystem;
  }
  override connect(signer: Signer): MarkSystem__factory {
    return super.connect(signer) as MarkSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MarkSystemInterface {
    return new utils.Interface(_abi) as MarkSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MarkSystem {
    return new Contract(address, _abi, signerOrProvider) as MarkSystem;
  }
}
