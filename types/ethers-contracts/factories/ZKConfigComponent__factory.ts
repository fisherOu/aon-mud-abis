/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKConfigComponent,
  ZKConfigComponentInterface,
} from "../ZKConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cb238038062001cb2833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b620010291760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b620010291760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611a7080620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b8063108f31e91461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611394565b6102eb565b005b6101586103a6565b604051610165919061144a565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb610486565b604051610165919061158e565b61014e6101d63660046115d2565b6104ba565b61014e6101e93660046115eb565b610502565b6101f66105e0565b6040516101659291906116a9565b61014e6102123660046115eb565b610b99565b61022a6102253660046115eb565b610bcb565b6040519015158152602001610165565b61014e610248366004611844565b610c56565b61018e610ca3565b61014e6102633660046115eb565b610ce8565b61027160025481565b604051908152602001610165565b6101bb61028d36600461188b565b610486565b6102a56102a03660046115d2565b610e11565b60405161016591906118c8565b61014e6102c03660046115eb565b610eb3565b61022a6102d33660046115d2565b610f8e565b61014e6102e63660046115eb565b610fb0565b6103a361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a610100015160405160200161038f99989796959493929190981515895273ffffffffffffffffffffffffffffffffffffffff97881660208a0152958716604089015293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201526101200190565b604051602081830303815290604052610c56565b50565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905290808080808080808061040261060d610e11565b80602001905181019061041591906118db565b60408051610120810182529915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b01529688169689019690965293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c333610bcb565b6104f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a38161104d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610572576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b60608152602001906001900390816105fc575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600481526020017f6f70656e000000000000000000000000000000000000000000000000000000008152508260008151811061067e5761067e61199f565b602002602001018190525060008160008151811061069e5761069e61199f565b602002602001019060218111156106b7576106b761167a565b908160218111156106ca576106ca61167a565b815250506040518060400160405280601181526020017f696e697456657269667941646472657373000000000000000000000000000000815250826001815181106107175761071761199f565b60200260200101819052506010816001815181106107375761073761199f565b602002602001019060218111156107505761075061167a565b908160218111156107635761076361167a565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107b0576107b061199f565b60200260200101819052506010816002815181106107d0576107d061199f565b602002602001019060218111156107e9576107e961167a565b908160218111156107fc576107fc61167a565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106108495761084961199f565b60200260200101819052506010816003815181106108695761086961199f565b602002602001019060218111156108825761088261167a565b908160218111156108955761089561167a565b815250506040518060400160405280601581526020017f7472656173757265566572696679416464726573730000000000000000000000815250826004815181106108e2576108e261199f565b60200260200101819052506010816004815181106109025761090261199f565b6020026020010190602181111561091b5761091b61167a565b9081602181111561092e5761092e61167a565b815250506040518060400160405280601581526020017f7265736f757263655665726966794164647265737300000000000000000000008152508260058151811061097b5761097b61199f565b602002602001018190525060108160058151811061099b5761099b61199f565b602002602001019060218111156109b4576109b461167a565b908160218111156109c7576109c761167a565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600681518110610a1457610a1461199f565b6020026020010181905250601081600681518110610a3457610a3461199f565b60200260200101906021811115610a4d57610a4d61167a565b90816021811115610a6057610a6061167a565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600781518110610aad57610aad61199f565b6020026020010181905250601081600781518110610acd57610acd61199f565b60200260200101906021811115610ae657610ae661167a565b90816021811115610af957610af961167a565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600881518110610b4657610b4661199f565b6020026020010181905250601081600881518110610b6657610b6661199f565b60200260200101906021811115610b7f57610b7f61167a565b90816021811115610b9257610b9261167a565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610c505750610c21610ca3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610c5f33610bcb565b610c95576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c9f82826110bb565b5050565b6000610ce37f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d58576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610e2e906119ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5a906119ce565b8015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f23576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610fa7906119ce565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314611020576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a381611169565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60008181526001602052604081206110649161121d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ddc565b600082815260016020908152604090912082516110da92840190611257565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111339085908590600401611a21565b600060405180830381600087803b15801561114d57600080fd5b505af1158015611161573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103a3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054611229906119ce565b6000825580601f10611239575050565b601f0160209004906000526020600020908101906103a391906112db565b828054611263906119ce565b90600052602060002090601f01602090048101928261128557600085556112cb565b82601f1061129e57805160ff19168380011785556112cb565b828001600101855582156112cb579182015b828111156112cb5782518255916020019190600101906112b0565b506112d79291506112db565b5090565b5b808211156112d757600081556001016112dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611343576113436112f0565b60405290565b80151581146103a357600080fd5b803561136281611349565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103a357600080fd5b803561136281611367565b600061012082840312156113a757600080fd5b6113af61131f565b6113b883611357565b81526113c660208401611389565b60208201526113d760408401611389565b60408201526113e860608401611389565b60608201526113f960808401611389565b608082015261140a60a08401611389565b60a082015261141b60c08401611389565b60c082015261142c60e08401611389565b60e082015261010061143f818501611389565b908201529392505050565b60006101208201905082511515825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015260408301516114a0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516114c8606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516114f0608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161151860a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161154060c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161156860e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101009283015173ffffffffffffffffffffffffffffffffffffffff16919092015290565b6020808252825182820181905260009190848201906040850190845b818110156115c6578351835292840192918401916001016115aa565b50909695505050505050565b6000602082840312156115e457600080fd5b5035919050565b6000602082840312156115fd57600080fd5b813561160881611367565b9392505050565b6000815180845260005b8181101561163557602081850181015186830182015201611619565b81811115611647576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561171e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261170c86835161160f565b955093820193908201906001016116d2565b50508584038187015286518085528782019482019350915060005b8281101561178c5784516022811061177a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611739565b5091979650505050505050565b600082601f8301126117aa57600080fd5b813567ffffffffffffffff808211156117c5576117c56112f0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561180b5761180b6112f0565b8160405283815286602085880101111561182457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561185757600080fd5b82359150602083013567ffffffffffffffff81111561187557600080fd5b61188185828601611799565b9150509250929050565b60006020828403121561189d57600080fd5b813567ffffffffffffffff8111156118b457600080fd5b6118c084828501611799565b949350505050565b602081526000611608602083018461160f565b60008060008060008060008060006101208a8c0312156118fa57600080fd5b895161190581611349565b60208b015190995061191681611367565b60408b015190985061192781611367565b60608b015190975061193881611367565b60808b015190965061194981611367565b60a08b015190955061195a81611367565b60c08b015190945061196b81611367565b60e08b015190935061197c81611367565b6101008b015190925061198e81611367565b809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806119e257607f821691505b602082108103611a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006118c0604083018461160f56fea26469706673582212206890b2ec3378acd7b7799dd3ef1867b0214e677486fb6f5bcd7f1ae91ab6934e64736f6c634300080d0033";

type ZKConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKConfigComponent__factory extends ContractFactory {
  constructor(...args: ZKConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<ZKConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ZKConfigComponent {
    return super.attach(address) as ZKConfigComponent;
  }
  override connect(signer: Signer): ZKConfigComponent__factory {
    return super.connect(signer) as ZKConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConfigComponentInterface {
    return new utils.Interface(_abi) as ZKConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as ZKConfigComponent;
  }
}
