/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKConfigComponent,
  ZKConfigComponentInterface,
} from "../ZKConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dad38038062001dad833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b620010e51760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b620010e51760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611b6b80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b80630c95c26d1461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611450565b6102eb565b005b6101586103b6565b6040516101659190611518565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb6104a9565b6040516101659190611674565b61014e6101d63660046116b8565b6104dd565b61014e6101e93660046116d1565b610525565b6101f6610603565b60405161016592919061178f565b61014e6102123660046116d1565b610c55565b61022a6102253660046116d1565b610c87565b6040519015158152602001610165565b61014e61024836600461192a565b610d12565b61018e610d5f565b61014e6102633660046116d1565b610da4565b61027160025481565b604051908152602001610165565b6101bb61028d366004611971565b6104a9565b6102a56102a03660046116b8565b610ecd565b60405161016591906119ae565b61014e6102c03660046116d1565b610f6f565b61022a6102d33660046116b8565b61104a565b61014e6102e63660046116d1565b61106c565b6103b361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b610120015160405160200161039f9a999897969594939291909915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015296881660408a01529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201526101400190565b604051602081830303815290604052610d12565b50565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290529080808080808080808061041b61060d610ecd565b80602001905181019061042e91906119c1565b60408051610140810182529a15158b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c0152978916978a01979097529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201529b9a5050505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e633610c87565b61051c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611109565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610595576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b606081526020019060019003908161061f575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106106a1576106a1611a9a565b60200260200101819052506000816000815181106106c1576106c1611a9a565b602002602001019060218111156106da576106da611760565b908160218111156106ed576106ed611760565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061073a5761073a611a9a565b602002602001018190525060108160018151811061075a5761075a611a9a565b6020026020010190602181111561077357610773611760565b9081602181111561078657610786611760565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107d3576107d3611a9a565b60200260200101819052506010816002815181106107f3576107f3611a9a565b6020026020010190602181111561080c5761080c611760565b9081602181111561081f5761081f611760565b815250506040518060400160405280601181526020017f6d61726b566572696679416464726573730000000000000000000000000000008152508260038151811061086c5761086c611a9a565b602002602001018190525060108160038151811061088c5761088c611a9a565b602002602001019060218111156108a5576108a5611760565b908160218111156108b8576108b8611760565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061090557610905611a9a565b602002602001018190525060108160048151811061092557610925611a9a565b6020026020010190602181111561093e5761093e611760565b9081602181111561095157610951611760565b815250506040518060400160405280601781526020017f74726561737572655665726966797632416464726573730000000000000000008152508260058151811061099e5761099e611a9a565b60200260200101819052506010816005815181106109be576109be611a9a565b602002602001019060218111156109d7576109d7611760565b908160218111156109ea576109ea611760565b815250506040518060400160405280601581526020017f7265736f7572636556657269667941646472657373000000000000000000000081525082600681518110610a3757610a37611a9a565b6020026020010181905250601081600681518110610a5757610a57611a9a565b60200260200101906021811115610a7057610a70611760565b90816021811115610a8357610a83611760565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600781518110610ad057610ad0611a9a565b6020026020010181905250601081600781518110610af057610af0611a9a565b60200260200101906021811115610b0957610b09611760565b90816021811115610b1c57610b1c611760565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600881518110610b6957610b69611a9a565b6020026020010181905250601081600881518110610b8957610b89611a9a565b60200260200101906021811115610ba257610ba2611760565b90816021811115610bb557610bb5611760565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600981518110610c0257610c02611a9a565b6020026020010181905250601081600981518110610c2257610c22611a9a565b60200260200101906021811115610c3b57610c3b611760565b90816021811115610c4e57610c4e611760565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610d0c5750610cdd610d5f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610d1b33610c87565b610d51576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5b8282611177565b5050565b6000610d9f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e14576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610eb257600080fd5b505af1158015610ec6573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610eea90611ac9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1690611ac9565b8015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610fdf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461106390611ac9565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146110dc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611225565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120611120916112d9565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610e98565b6000828152600160209081526040909120825161119692840190611313565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111ef9085908590600401611b1c565b600060405180830381600087803b15801561120957600080fd5b505af115801561121d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103b3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546112e590611ac9565b6000825580601f106112f5575050565b601f0160209004906000526020600020908101906103b39190611397565b82805461131f90611ac9565b90600052602060002090601f0160209004810192826113415760008555611387565b82601f1061135a57805160ff1916838001178555611387565b82800160010185558215611387579182015b8281111561138757825182559160200191906001019061136c565b50611393929150611397565b5090565b5b808211156113935760008155600101611398565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156113ff576113ff6113ac565b60405290565b80151581146103b357600080fd5b803561141e81611405565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103b357600080fd5b803561141e81611423565b6000610140828403121561146357600080fd5b61146b6113db565b61147483611413565b815261148260208401611445565b602082015261149360408401611445565b60408201526114a460608401611445565b60608201526114b560808401611445565b60808201526114c660a08401611445565b60a08201526114d760c08401611445565b60c08201526114e860e08401611445565b60e08201526101006114fb818501611445565b9082015261012061150d848201611445565b908201529392505050565b8151151581526101408101602083015161154a602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611572604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015161159a606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516115c2608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516115ea60a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161161260c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161163a60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015173ffffffffffffffffffffffffffffffffffffffff908116918401919091526101209384015116929091019190915290565b6020808252825182820181905260009190848201906040850190845b818110156116ac57835183529284019291840191600101611690565b50909695505050505050565b6000602082840312156116ca57600080fd5b5035919050565b6000602082840312156116e357600080fd5b81356116ee81611423565b9392505050565b6000815180845260005b8181101561171b576020818501810151868301820152016116ff565b8181111561172d576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611804577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117f28683516116f5565b955093820193908201906001016117b8565b50508584038187015286518085528782019482019350915060005b8281101561187257845160228110611860577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161181f565b5091979650505050505050565b600082601f83011261189057600080fd5b813567ffffffffffffffff808211156118ab576118ab6113ac565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156118f1576118f16113ac565b8160405283815286602085880101111561190a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561193d57600080fd5b82359150602083013567ffffffffffffffff81111561195b57600080fd5b6119678582860161187f565b9150509250929050565b60006020828403121561198357600080fd5b813567ffffffffffffffff81111561199a57600080fd5b6119a68482850161187f565b949350505050565b6020815260006116ee60208301846116f5565b6000806000806000806000806000806101408b8d0312156119e157600080fd5b8a516119ec81611405565b60208c0151909a506119fd81611423565b60408c0151909950611a0e81611423565b60608c0151909850611a1f81611423565b60808c0151909750611a3081611423565b60a08c0151909650611a4181611423565b60c08c0151909550611a5281611423565b60e08c0151909450611a6381611423565b6101008c0151909350611a7581611423565b6101208c0151909250611a8781611423565b809150509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611add57607f821691505b602082108103611b16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006119a660408301846116f556fea2646970667358221220c2a9bf8eed34fd385c9009e25753127bf49c3e80133a059dd66666920710fd4b64736f6c634300080d0033";

type ZKConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKConfigComponent__factory extends ContractFactory {
  constructor(...args: ZKConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<ZKConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ZKConfigComponent {
    return super.attach(address) as ZKConfigComponent;
  }
  override connect(signer: Signer): ZKConfigComponent__factory {
    return super.connect(signer) as ZKConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConfigComponentInterface {
    return new utils.Interface(_abi) as ZKConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as ZKConfigComponent;
  }
}
