/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKConfigComponent,
  ZKConfigComponentInterface,
} from "../ZKConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordv2VerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyv2Address",
            type: "address",
          },
          {
            internalType: "address",
            name: "attackPathVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "coordv2VerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9e38038062001e9e833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b6200119f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b6200119f1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611c5c80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101f15780637b54900314610204578063861eb9051461021757600080fd5b80634fef6a38146101c85780636b122fe0146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b6040516101509190611466565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a66103f0565b60405161015091906115cf565b6101c66101c1366004611613565b610424565b005b6101c66101d636600461165e565b61046f565b6101e361054d565b60405161015092919061171c565b6101c66101ff36600461165e565b610c38565b6101c661021236600461187e565b610c6a565b61022a61022536600461165e565b610d41565b6040519015158152602001610150565b6101c6610248366004611a03565b610dcc565b610179610e19565b6101c661026336600461165e565b610e5e565b61027160025481565b604051908152602001610150565b6101a661028d366004611a4a565b6103f0565b6102a56102a0366004611613565b610f87565b6040516101509190611a87565b6101c66102c036600461165e565b611029565b61022a6102d3366004611613565b611104565b6101c66102e636600461165e565b611126565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290526101408101829052908080808080808080808061035961060d610f87565b80602001905181019061036c9190611aa5565b60408051610160810182529b15158c5273ffffffffffffffffffffffffffffffffffffffff9a8b1660208d0152988a16988b019890985295881660608a0152938716608089015291861660a0880152851660c0870152841660e086015283166101008501528216610120840152166101408201529c9b505050505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042d33610d41565b610463576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046c816111c3565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104df576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600b8082526101808201909252606091829190816020015b606081526020019060019003908161056957505060408051600b808252610180820190925291935060208201610160803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106105eb576105eb611b8b565b602002602001018190525060008160008151811061060b5761060b611b8b565b60200260200101906021811115610624576106246116ed565b90816021811115610637576106376116ed565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061068457610684611b8b565b60200260200101819052506010816001815181106106a4576106a4611b8b565b602002602001019060218111156106bd576106bd6116ed565b908160218111156106d0576106d06116ed565b815250506040518060400160405280601181526020017f6d6f7665566572696679416464726573730000000000000000000000000000008152508260028151811061071d5761071d611b8b565b602002602001018190525060108160028151811061073d5761073d611b8b565b60200260200101906021811115610756576107566116ed565b90816021811115610769576107696116ed565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106107b6576107b6611b8b565b60200260200101819052506010816003815181106107d6576107d6611b8b565b602002602001019060218111156107ef576107ef6116ed565b90816021811115610802576108026116ed565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061084f5761084f611b8b565b602002602001018190525060108160048151811061086f5761086f611b8b565b60200260200101906021811115610888576108886116ed565b9081602181111561089b5761089b6116ed565b815250506040518060400160405280601781526020017f7472656173757265566572696679763241646472657373000000000000000000815250826005815181106108e8576108e8611b8b565b602002602001018190525060108160058151811061090857610908611b8b565b60200260200101906021811115610921576109216116ed565b90816021811115610934576109346116ed565b815250506040518060400160405280601581526020017f7265736f757263655665726966794164647265737300000000000000000000008152508260068151811061098157610981611b8b565b60200260200101819052506010816006815181106109a1576109a1611b8b565b602002602001019060218111156109ba576109ba6116ed565b908160218111156109cd576109cd6116ed565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600781518110610a1a57610a1a611b8b565b6020026020010181905250601081600781518110610a3a57610a3a611b8b565b60200260200101906021811115610a5357610a536116ed565b90816021811115610a6657610a666116ed565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600881518110610ab357610ab3611b8b565b6020026020010181905250601081600881518110610ad357610ad3611b8b565b60200260200101906021811115610aec57610aec6116ed565b90816021811115610aff57610aff6116ed565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600981518110610b4c57610b4c611b8b565b6020026020010181905250601081600981518110610b6c57610b6c611b8b565b60200260200101906021811115610b8557610b856116ed565b90816021811115610b9857610b986116ed565b815250506040518060400160405280601481526020017f636f6f726476325665726966794164647265737300000000000000000000000081525082600a81518110610be557610be5611b8b565b6020026020010181905250601081600a81518110610c0557610c05611b8b565b60200260200101906021811115610c1e57610c1e6116ed565b90816021811115610c3157610c316116ed565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046c61060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b61012001518c6101400151604051602001610d2d9b9a999897969594939291909a15158b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c015297891660408b015295881660608a0152938716608089015291861660a0880152851660c0870152841660e086015283166101008501528216610120840152166101408201526101600190565b604051602081830303815290604052610dcc565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610dc65750610d97610e19565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610dd533610d41565b610e0b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e158282611231565b5050565b6000610e597f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ece576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610f6c57600080fd5b505af1158015610f80573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610fa490611bba565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd090611bba565b801561101d5780601f10610ff25761010080835404028352916020019161101d565b820191906000526020600020905b81548152906001019060200180831161100057829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314611099576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461111d90611bba565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314611196576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046c816112df565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60008181526001602052604081206111da91611393565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610f52565b60008281526001602090815260409091208251611250928401906113cd565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906112a99085908590600401611c0d565b600060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161046c928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461139f90611bba565b6000825580601f106113af575050565b601f01602090049060005260206000209081019061046c9190611451565b8280546113d990611bba565b90600052602060002090601f0160209004810192826113fb5760008555611441565b82601f1061141457805160ff1916838001178555611441565b82800160010185558215611441579182015b82811115611441578251825591602001919060010190611426565b5061144d929150611451565b5090565b5b8082111561144d5760008155600101611452565b81511515815261016081016020830151611498602084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408301516114c0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516114e8606084018273ffffffffffffffffffffffffffffffffffffffff169052565b506080830151611510608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161153860a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161156060c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161158860e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015173ffffffffffffffffffffffffffffffffffffffff90811691840191909152610120808501518216908401526101409384015116929091019190915290565b6020808252825182820181905260009190848201906040850190845b81811015611607578351835292840192918401916001016115eb565b50909695505050505050565b60006020828403121561162557600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461046c57600080fd5b80356116598161162c565b919050565b60006020828403121561167057600080fd5b813561167b8161162c565b9392505050565b6000815180845260005b818110156116a85760208185018101518683018201520161168c565b818111156116ba576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611791577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261177f868351611682565b95509382019390820190600101611745565b50508584038187015286518085528782019482019350915060005b828110156117ff578451602281106117ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016117ac565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610160810167ffffffffffffffff8111828210171561185f5761185f61180c565b60405290565b801515811461046c57600080fd5b803561165981611865565b6000610160828403121561189157600080fd5b61189961183b565b6118a283611873565b81526118b06020840161164e565b60208201526118c16040840161164e565b60408201526118d26060840161164e565b60608201526118e36080840161164e565b60808201526118f460a0840161164e565b60a082015261190560c0840161164e565b60c082015261191660e0840161164e565b60e082015261010061192981850161164e565b9082015261012061193b84820161164e565b9082015261014061194d84820161164e565b908201529392505050565b600082601f83011261196957600080fd5b813567ffffffffffffffff808211156119845761198461180c565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156119ca576119ca61180c565b816040528381528660208588010111156119e357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611a1657600080fd5b82359150602083013567ffffffffffffffff811115611a3457600080fd5b611a4085828601611958565b9150509250929050565b600060208284031215611a5c57600080fd5b813567ffffffffffffffff811115611a7357600080fd5b611a7f84828501611958565b949350505050565b60208152600061167b6020830184611682565b80516116598161162c565b60008060008060008060008060008060006101608c8e031215611ac757600080fd5b8b51611ad281611865565b60208d0151909b50611ae38161162c565b60408d0151909a50611af48161162c565b60608d0151909950611b058161162c565b60808d0151909850611b168161162c565b60a08d0151909750611b278161162c565b60c08d0151909650611b388161162c565b60e08d0151909550611b498161162c565b6101008d0151909450611b5b8161162c565b9250611b6a6101208d01611a9a565b9150611b796101408d01611a9a565b90509295989b509295989b9093969950565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611bce57607f821691505b602082108103611c07577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000611a7f604083018461168256fea26469706673582212202c755415a773e823b639dc7b22d780fe567b46a4123b4ed5818647ed53b3cfbf64736f6c634300080d0033";

type ZKConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKConfigComponent__factory extends ContractFactory {
  constructor(...args: ZKConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<ZKConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ZKConfigComponent {
    return super.attach(address) as ZKConfigComponent;
  }
  override connect(signer: Signer): ZKConfigComponent__factory {
    return super.connect(signer) as ZKConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConfigComponentInterface {
    return new utils.Interface(_abi) as ZKConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as ZKConfigComponent;
  }
}
