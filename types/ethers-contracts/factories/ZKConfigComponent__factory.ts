/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ZKConfigComponent,
  ZKConfigComponentInterface,
} from "../ZKConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "open",
            type: "bool",
          },
          {
            internalType: "address",
            name: "initVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "moveVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "markVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "treasureVerifyAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "resourceVerifyAddress",
            type: "address",
          },
        ],
        internalType: "struct ZKConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200191638038062001916833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000e5e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000e5e1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6116d480620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e14610315578063f2fde38b14610328578063fc93190f1461033b57600080fd5b8063b8bc073d146102e2578063bf4fe57e1461030257600080fd5b80638da5cb5b1461029d5780639d2c76b4146102a5578063af640d0f146102b8578063b361be46146102cf57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610254578063861eb905146102675780638b2829471461028a57600080fd5b80634fef6a381461022b5780636b122fe01461023e57600080fd5b8063209652551461013b57806330b67baa146101bc57806331b933b9146102015780634cc8221514610216575b600080fd5b61014361034e565b6040516101b39190600060c082019050825115158252602083015173ffffffffffffffffffffffffffffffffffffffff80821660208501528060408601511660408501528060608601511660608501528060808601511660808501528060a08601511660a0850152505092915050565b60405180910390f35b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b3565b6102096103f9565b6040516101b39190611125565b610229610224366004611169565b61042d565b005b6102296102393660046111a4565b610478565b610246610556565b6040516101b3929190611262565b6102296102623660046111a4565b610941565b61027a6102753660046111a4565b610973565b60405190151581526020016101b3565b61022961029836600461142c565b6109fe565b6101dc610a4b565b6102296102b33660046111a4565b610a90565b6102c160025481565b6040519081526020016101b3565b6102096102dd366004611473565b6103f9565b6102f56102f0366004611169565b610bb9565b6040516101b391906114b0565b6102296103103660046111a4565b610c5b565b61027a610323366004611169565b610d36565b6102296103363660046111a4565b610d58565b6102296103493660046114d1565b610dd1565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905290808080808061039061060d610bb9565b8060200190518101906103a3919061157c565b6040805160c081018252961515875273ffffffffffffffffffffffffffffffffffffffff9586166020880152938516938601939093529083166060850152821660808401521660a0820152979650505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043633610973565b61046c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610e82565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104e8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600680825260e08201909252606091829190816020015b606081526020019060019003908161057157505060408051600680825260e082019092529193506020820160c0803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106105f1576105f1611603565b602002602001018190525060008160008151811061061157610611611603565b6020026020010190602181111561062a5761062a611233565b9081602181111561063d5761063d611233565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061068a5761068a611603565b60200260200101819052506010816001815181106106aa576106aa611603565b602002602001019060218111156106c3576106c3611233565b908160218111156106d6576106d6611233565b815250506040518060400160405280601181526020017f6d6f7665566572696679416464726573730000000000000000000000000000008152508260028151811061072357610723611603565b602002602001018190525060108160028151811061074357610743611603565b6020026020010190602181111561075c5761075c611233565b9081602181111561076f5761076f611233565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106107bc576107bc611603565b60200260200101819052506010816003815181106107dc576107dc611603565b602002602001019060218111156107f5576107f5611233565b9081602181111561080857610808611233565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061085557610855611603565b602002602001018190525060108160048151811061087557610875611603565b6020026020010190602181111561088e5761088e611233565b908160218111156108a1576108a1611233565b815250506040518060400160405280601581526020017f7265736f75726365566572696679416464726573730000000000000000000000815250826005815181106108ee576108ee611603565b602002602001018190525060108160058151811061090e5761090e611603565b6020026020010190602181111561092757610927611233565b9081602181111561093a5761093a611233565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806109f857506109c9610a4b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a0733610973565b610a3d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a478282610ef0565b5050565b6000610a8b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b00576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610bd690611632565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0290611632565b8015610c4f5780601f10610c2457610100808354040283529160200191610c4f565b820191906000526020600020905b815481529060010190602001808311610c3257829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ccb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610d4f90611632565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dc8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610f9e565b61047561060d826000015183602001518460400151856060015186608001518760a00151604051602001610e4a96959493929190951515865273ffffffffffffffffffffffffffffffffffffffff948516602087015292841660408601529083166060850152821660808401521660a082015260c00190565b6040516020818303038152906040526109fe565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e9991611052565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b84565b60008281526001602090815260409091208251610f0f9284019061108c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f689085908590600401611685565b600060405180830381600087803b158015610f8257600080fd5b505af1158015610f96573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610475928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461105e90611632565b6000825580601f1061106e575050565b601f0160209004906000526020600020908101906104759190611110565b82805461109890611632565b90600052602060002090601f0160209004810192826110ba5760008555611100565b82601f106110d357805160ff1916838001178555611100565b82800160010185558215611100579182015b828111156111005782518255916020019190600101906110e5565b5061110c929150611110565b5090565b5b8082111561110c5760008155600101611111565b6020808252825182820181905260009190848201906040850190845b8181101561115d57835183529284019291840191600101611141565b50909695505050505050565b60006020828403121561117b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461047557600080fd5b6000602082840312156111b657600080fd5b81356111c181611182565b9392505050565b6000815180845260005b818110156111ee576020818501810151868301820152016111d2565b81811115611200576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526112c58683516111c8565b9550938201939082019060010161128b565b50508584038187015286518085528782019482019350915060005b8281101561134557845160228110611333577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016112f2565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261139257600080fd5b813567ffffffffffffffff808211156113ad576113ad611352565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156113f3576113f3611352565b8160405283815286602085880101111561140c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561143f57600080fd5b82359150602083013567ffffffffffffffff81111561145d57600080fd5b61146985828601611381565b9150509250929050565b60006020828403121561148557600080fd5b813567ffffffffffffffff81111561149c57600080fd5b6114a884828501611381565b949350505050565b6020815260006111c160208301846111c8565b801515811461047557600080fd5b600060c082840312156114e357600080fd5b60405160c0810181811067ffffffffffffffff8211171561150657611506611352565b6040528235611514816114c3565b8152602083013561152481611182565b6020820152604083013561153781611182565b6040820152606083013561154a81611182565b6060820152608083013561155d81611182565b608082015260a083013561157081611182565b60a08201529392505050565b60008060008060008060c0878903121561159557600080fd5b86516115a0816114c3565b60208801519096506115b181611182565b60408801519095506115c281611182565b60608801519094506115d381611182565b60808801519093506115e481611182565b60a08801519092506115f581611182565b809150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061164657607f821691505b60208210810361167f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006114a860408301846111c856fea26469706673582212203912731f25dc25a3c5bc5518c619720ee68b2c8c19c40853448e390d621e26ad64736f6c634300080d0033";

type ZKConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZKConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZKConfigComponent__factory extends ContractFactory {
  constructor(...args: ZKConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ZKConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<ZKConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ZKConfigComponent {
    return super.attach(address) as ZKConfigComponent;
  }
  override connect(signer: Signer): ZKConfigComponent__factory {
    return super.connect(signer) as ZKConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZKConfigComponentInterface {
    return new utils.Interface(_abi) as ZKConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZKConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as ZKConfigComponent;
  }
}
