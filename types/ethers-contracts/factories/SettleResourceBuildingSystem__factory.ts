/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SettleResourceBuildingSystem,
  SettleResourceBuildingSystemInterface,
} from "../SettleResourceBuildingSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourceSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasureSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainPerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourcePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasurePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParamv2[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourceSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasureSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainPerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourcePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasurePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParamv2[]",
            name: "area",
            type: "tuple[]",
          },
        ],
        internalType: "struct SettleInfo",
        name: "settleInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018a4380380620018a483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200078a17901c565b5050505062000292565b600062000126620001ef60201b6200081b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61160280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063b75ecc3f146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610c15565b6100cf565b6040516100719190610cc5565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610efb565b61013e565b6100cd6100c8366004610fae565b61070e565b005b60606000828060200190518101906100e79190611174565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60603361014a8161083f565b6101b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f706c61796572206465616400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546101f99073ffffffffffffffffffffffffffffffffffffffff167fbb88795a9cfff4e57d97716a42955744b268ecdc8d780abe2e54e4bd33c62aa0610904565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610267573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028b91906111f6565b801561032657506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610300573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103249190611218565b115b61038c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6c61636b206f66207265736f75726365206275696c64696e670000000000000060448201526064016101ac565b600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516104479273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa1580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190611231565b7f1e118e68fcea575c9559335cd4c1ae987e9a28083fadecd50f2c5ddbef1d88e0610904565b73ffffffffffffffffffffffffffffffffffffffff1663c420d84c6040518061012001604052807f58d757c1f0ceb456184692172b8f3149454df236ea2b7288bc88b38ff932abdb60001c8152602001600015158152602001858152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105379190611218565b81526020018760000151815260200187602001518152602001600263ffffffff168152602001600163ffffffff168152602001600015158152506040518263ffffffff1660e01b815260040161058d9190611385565b6000604051808303816000875af11580156105ac573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105f29190810190611457565b506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff821690631ab06ee59084906001908490630ff4c91690602401602060405180830381865afa15801561066b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068f9190611218565b61069991906114ce565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b1580156106ef57600080fd5b505af1158015610703573d6000803e3d6000fd5b505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461077e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61078781610a50565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080546108839073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610904565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e836040518263ffffffff1660e01b81526004016108bd91815260200190565b602060405180830381865afa1580156108da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108fe91906111f6565b92915050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610974573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109ba919081019061150c565b90508051600003610a27576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101ac565b610a4881600081518110610a3d57610a3d61159d565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610787928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff81118282101715610b5757610b57610b04565b60405290565b6040805190810167ffffffffffffffff81118282101715610b5757610b57610b04565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610bc757610bc7610b04565b604052919050565b600067ffffffffffffffff821115610be957610be9610b04565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610c2757600080fd5b813567ffffffffffffffff811115610c3e57600080fd5b8201601f81018413610c4f57600080fd5b8035610c62610c5d82610bcf565b610b80565b818152856020838501011115610c7757600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610cb0578181015183820152602001610c98565b83811115610cbf576000848401525b50505050565b6020815260008251806020840152610ce4816040850160208701610c95565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600067ffffffffffffffff821115610d3057610d30610b04565b5060051b60200190565b600082601f830112610d4b57600080fd5b610d53610b5d565b806040840185811115610d6557600080fd5b845b81811015610d7f578035845260209384019301610d67565b509095945050505050565b600082601f830112610d9b57600080fd5b610da3610b5d565b806080840185811115610db557600080fd5b845b81811015610d7f57610dc98782610d3a565b8452602090930192604001610db7565b600082601f830112610dea57600080fd5b81356020610dfa610c5d83610d16565b8281526102609283028501820192828201919087851115610e1a57600080fd5b8387015b85811015610eee5781818a031215610e365760008081fd5b610e3e610b33565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e08083013590820152610100808301359082015261012080830135908201526101408083013590820152610160610eb68b828501610d3a565b908201526101a0610ec98b848301610d8a565b610180830152610edd8b6102208501610d3a565b908201528452928401928101610e1e565b5090979650505050505050565b600060208284031215610f0d57600080fd5b813567ffffffffffffffff80821115610f2557600080fd5b9083019060408286031215610f3957600080fd5b610f41610b5d565b823582811115610f5057600080fd5b610f5c87828601610dd9565b825250602083013582811115610f7157600080fd5b610f7d87828601610dd9565b60208301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461078757600080fd5b600060208284031215610fc057600080fd5b81356100f281610f8c565b600082601f830112610fdc57600080fd5b610fe4610b5d565b806040840185811115610ff657600080fd5b845b81811015610d7f578051845260209384019301610ff8565b600082601f83011261102157600080fd5b611029610b5d565b80608084018581111561103b57600080fd5b845b81811015610d7f5761104f8782610fcb565b845260209093019260400161103d565b600082601f83011261107057600080fd5b81516020611080610c5d83610d16565b82815261026092830285018201928282019190878511156110a057600080fd5b8387015b85811015610eee5781818a0312156110bc5760008081fd5b6110c4610b33565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0808301519082015261010080830151908201526101208083015190820152610140808301519082015261016061113c8b828501610fcb565b908201526101a061114f8b848301611010565b6101808301526111638b6102208501610fcb565b9082015284529284019281016110a4565b60006020828403121561118657600080fd5b815167ffffffffffffffff8082111561119e57600080fd5b90830190604082860312156111b257600080fd5b6111ba610b5d565b8251828111156111c957600080fd5b6111d58782860161105f565b8252506020830151828111156111ea57600080fd5b610f7d8782860161105f565b60006020828403121561120857600080fd5b815180151581146100f257600080fd5b60006020828403121561122a57600080fd5b5051919050565b60006020828403121561124357600080fd5b81516100f281610f8c565b8060005b6002811015610cbf578151845260209384019390910190600101611252565b8060005b6002811015610cbf5761128984835161124e565b6040939093019260209190910190600101611275565b600081518084526020808501945080840160005b8381101561137a57815180518852838101518489015260408082015190890152606080820151908901526080808201519089015260a0808201519089015260c0808201519089015260e0808201519089015261010080820151908901526101208082015190890152610140808201519089015261016080820151611339828b018261124e565b50506101808101516101a0611350818b0183611271565b9190910151905061136561022089018261124e565b506102609690960195908201906001016112b3565b509495945050505050565b6020815281516020820152600060208301516113a5604084018215159052565b50604083015160608301526060830151608083015260808301516101208060a08501526113d661014085018361129f565b915060a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c0860152611411838261129f565b92505060c085015161142b60e086018263ffffffff169052565b5060e08501516101006114458187018363ffffffff169052565b90950151151593019290925250919050565b60006020828403121561146957600080fd5b815167ffffffffffffffff81111561148057600080fd5b8201601f8101841361149157600080fd5b805161149f610c5d82610bcf565b8181528560208385010111156114b457600080fd5b6114c5826020830160208601610c95565b95945050505050565b600082821015611507577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b6000602080838503121561151f57600080fd5b825167ffffffffffffffff81111561153657600080fd5b8301601f8101851361154757600080fd5b8051611555610c5d82610d16565b81815260059190911b8201830190838101908783111561157457600080fd5b928401925b8284101561159257835182529284019290840190611579565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122058bc49914abe1b2a1f5fe03bdb38933524fb1d6afd4dd770003294ecd545043764736f6c634300080d0033";

type SettleResourceBuildingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SettleResourceBuildingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SettleResourceBuildingSystem__factory extends ContractFactory {
  constructor(...args: SettleResourceBuildingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SettleResourceBuildingSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<SettleResourceBuildingSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): SettleResourceBuildingSystem {
    return super.attach(address) as SettleResourceBuildingSystem;
  }
  override connect(signer: Signer): SettleResourceBuildingSystem__factory {
    return super.connect(signer) as SettleResourceBuildingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettleResourceBuildingSystemInterface {
    return new utils.Interface(_abi) as SettleResourceBuildingSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettleResourceBuildingSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SettleResourceBuildingSystem;
  }
}
