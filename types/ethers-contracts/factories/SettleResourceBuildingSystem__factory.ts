/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SettleResourceBuildingSystem,
  SettleResourceBuildingSystemInterface,
} from "../SettleResourceBuildingSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "area",
            type: "tuple[]",
          },
        ],
        internalType: "struct SettleInfo",
        name: "settleInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016573803806200165783398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200070617901c565b5050505062000292565b600062000126620001ef60201b620007971760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6113b580620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe14610051578063563a390e1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610acc565b6100cf565b6040516100719190610b7c565b60405180910390f35b610064610088366004610d70565b6100f9565b610095610645565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610e23565b61068a565b005b60606000828060200190518101906100e79190610fa7565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167fbb88795a9cfff4e57d97716a42955744b268ecdc8d780abe2e54e4bd33c62aa06107bb565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190611029565b801561026f57506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610249573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026d919061104b565b115b6102da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f6c61636b206f66207265736f75726365206275696c64696e670000000000000060448201526064015b60405180910390fd5b600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290516103959273ffffffffffffffffffffffffffffffffffffffff1691630d59332e9160048083019260209291908290030181865afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190611064565b7f1e118e68fcea575c9559335cd4c1ae987e9a28083fadecd50f2c5ddbef1d88e06107bb565b73ffffffffffffffffffffffffffffffffffffffff16637e62c17a6040518060e001604052807f58d757c1f0ceb456184692172b8f3149454df236ea2b7288bc88b38ff932abdb60001c8152602001600015158152602001858152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610460573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610484919061104b565b81526020018760000151815260200187602001518152602001600163ffffffff168152506040518263ffffffff1660e01b81526004016104c4919061116b565b6000604051808303816000875af11580156104e3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610529919081019061120a565b506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff821690631ab06ee59084906001908490630ff4c91690602401602060405180830381865afa1580156105a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c6919061104b565b6105d09190611281565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561062657600080fd5b505af115801561063a573d6000803e3d6000fd5b505050505050919050565b60006106857f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146106fa576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61070381610907565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa15801561082b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261087191908101906112bf565b905080516000036108de576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102d1565b6108ff816000815181106108f4576108f4611350565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610703928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610a0e57610a0e6109bb565b60405290565b6040805190810167ffffffffffffffff81118282101715610a0e57610a0e6109bb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a7e57610a7e6109bb565b604052919050565b600067ffffffffffffffff821115610aa057610aa06109bb565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610ade57600080fd5b813567ffffffffffffffff811115610af557600080fd5b8201601f81018413610b0657600080fd5b8035610b19610b1482610a86565b610a37565b818152856020838501011115610b2e57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610b67578181015183820152602001610b4f565b83811115610b76576000848401525b50505050565b6020815260008251806020840152610b9b816040850160208701610b4c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600067ffffffffffffffff821115610be757610be76109bb565b5060051b60200190565b600082601f830112610c0257600080fd5b610c0a610a14565b806040840185811115610c1c57600080fd5b845b81811015610c36578035845260209384019301610c1e565b509095945050505050565b600082601f830112610c5257600080fd5b610c5a610a14565b806080840185811115610c6c57600080fd5b845b81811015610c3657610c808782610bf1565b8452602090930192604001610c6e565b600082601f830112610ca157600080fd5b81356020610cb1610b1483610bcd565b8281526101a09283028501820192828201919087851115610cd157600080fd5b8387015b85811015610d635781818a031215610ced5760008081fd5b610cf56109ea565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a0610d2d8b828501610bf1565b9082015260e0610d3f8b848301610c41565b60c0830152610d528b6101608501610bf1565b908201528452928401928101610cd5565b5090979650505050505050565b600060208284031215610d8257600080fd5b813567ffffffffffffffff80821115610d9a57600080fd5b9083019060408286031215610dae57600080fd5b610db6610a14565b823582811115610dc557600080fd5b610dd187828601610c90565b825250602083013582811115610de657600080fd5b610df287828601610c90565b60208301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461070357600080fd5b600060208284031215610e3557600080fd5b81356100f281610e01565b600082601f830112610e5157600080fd5b610e59610a14565b806040840185811115610e6b57600080fd5b845b81811015610c36578051845260209384019301610e6d565b600082601f830112610e9657600080fd5b610e9e610a14565b806080840185811115610eb057600080fd5b845b81811015610c3657610ec48782610e40565b8452602090930192604001610eb2565b600082601f830112610ee557600080fd5b81516020610ef5610b1483610bcd565b8281526101a09283028501820192828201919087851115610f1557600080fd5b8387015b85811015610d635781818a031215610f315760008081fd5b610f396109ea565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a0610f718b828501610e40565b9082015260e0610f838b848301610e85565b60c0830152610f968b6101608501610e40565b908201528452928401928101610f19565b600060208284031215610fb957600080fd5b815167ffffffffffffffff80821115610fd157600080fd5b9083019060408286031215610fe557600080fd5b610fed610a14565b825182811115610ffc57600080fd5b61100887828601610ed4565b82525060208301518281111561101d57600080fd5b610df287828601610ed4565b60006020828403121561103b57600080fd5b815180151581146100f257600080fd5b60006020828403121561105d57600080fd5b5051919050565b60006020828403121561107657600080fd5b81516100f281610e01565b8060005b6002811015610b76578151845260209384019390910190600101611085565b60008151808452602080850194508084016000805b8481101561115f5782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a0808301516110ff828d0182611081565b505060c082015160e0808c01865b600281101561113157611121828551611081565b928901929084019060010161110d565b505080840151935050505061114a6101608a0182611081565b506101a09790970196918301916001016110b9565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a08401526111b26101008401826110a4565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c08501526111ed82826110a4565b91505063ffffffff60c08501511660e08401528091505092915050565b60006020828403121561121c57600080fd5b815167ffffffffffffffff81111561123357600080fd5b8201601f8101841361124457600080fd5b8051611252610b1482610a86565b81815285602083850101111561126757600080fd5b611278826020830160208601610b4c565b95945050505050565b6000828210156112ba577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500390565b600060208083850312156112d257600080fd5b825167ffffffffffffffff8111156112e957600080fd5b8301601f810185136112fa57600080fd5b8051611308610b1482610bcd565b81815260059190911b8201830190838101908783111561132757600080fd5b928401925b828410156113455783518252928401929084019061132c565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b76df03d88b0a7639dc350d43e9f16700b424c37bb6a5e7e9df104e2596fae3a64736f6c634300080d0033";

type SettleResourceBuildingSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SettleResourceBuildingSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SettleResourceBuildingSystem__factory extends ContractFactory {
  constructor(...args: SettleResourceBuildingSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SettleResourceBuildingSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<SettleResourceBuildingSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): SettleResourceBuildingSystem {
    return super.attach(address) as SettleResourceBuildingSystem;
  }
  override connect(signer: Signer): SettleResourceBuildingSystem__factory {
    return super.connect(signer) as SettleResourceBuildingSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SettleResourceBuildingSystemInterface {
    return new utils.Interface(_abi) as SettleResourceBuildingSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SettleResourceBuildingSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SettleResourceBuildingSystem;
  }
}
