/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UnboundTreasureSystem,
  UnboundTreasureSystemInterface,
} from "../UnboundTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017cc380380620017cc83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620006ca17901c565b5050505062000292565b600062000126620001ef60201b6200075b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61152a80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610fab565b6100cf565b604051610071919061105b565b60405180910390f35b6100646100883660046110ac565b6100f9565b610095610609565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046110c5565b61064e565b005b60606000828060200190518101906100e791906110fb565b90506100f2816100f9565b9392505050565b6060336101058161077f565b610170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f706c61796572206465616400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546101b49073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610844565b60008054919250906101fc9073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c610844565b60008054919250906102449073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610844565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161027e91815260200190565b600060405180830381865afa15801561029b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526102e1919081019061119b565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561034f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037391906112b9565b801561040d57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101879052849073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa1580156103e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040b91906110fb565b145b610473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c696420747265617375726500000000000000000000000000006044820152606401610167565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa1580156104de573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050291906112b9565b610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f7420626f756e6465642079657400000000000000000000000000000000006044820152606401610167565b806040015160ff166000036105805761058086610990565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b5050505050505050919050565b60006106497f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146106be576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c781610de5565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080546107c39073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610844565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e836040518263ffffffff1660e01b81526004016107fd91815260200190565b602060405180830381865afa15801561081a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083e91906112b9565b92915050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156108b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108fa91908101906112d4565b90508051600003610967576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610167565b6109888160008151811061097d5761097d61137a565b602002602001015190565b949350505050565b600080543391906109d79073ffffffffffffffffffffffffffffffffffffffff167f2d1944d7c92d4cf7892c9f8d3312e879c70e4e7904208d77f458b7bf7c952e19610844565b6000805491925090610a1f9073ffffffffffffffffffffffffffffffffffffffff167f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd0610844565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ad691908101906112d4565b905060005b8151811015610ddd5760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610b1457610b1461137a565b60200260200101516040518263ffffffff1660e01b8152600401610b3a91815260200190565b600060405180830381865afa158015610b57573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b9d91908101906113a9565b6040517f74726561737572650000000000000000000000000000000000000000000000006020820152909150602801604051602081830303815290604052805190602001208160400151604051602001610bf79190611479565b60405160208183030381529060405280519060200120148015610c1d5750868160600151145b15610dca578473ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e848481518110610c5057610c5061137a565b60200260200101516040518263ffffffff1660e01b8152600401610c7691815260200190565b602060405180830381865afa158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb791906112b9565b15610d43578473ffffffffffffffffffffffffffffffffffffffff16634cc82215848481518110610cea57610cea61137a565b60200260200101516040518263ffffffff1660e01b8152600401610d1091815260200190565b600060405180830381600087803b158015610d2a57600080fd5b505af1158015610d3e573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff16634cc82215848481518110610d7157610d7161137a565b60200260200101516040518263ffffffff1660e01b8152600401610d9791815260200190565b600060405180830381600087803b158015610db157600080fd5b505af1158015610dc5573d6000803e3d6000fd5b505050505b5080610dd581611495565b915050610adb565b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516106c7928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610eec57610eec610e99565b60405290565b604051610100810167ffffffffffffffff81118282101715610eec57610eec610e99565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f5d57610f5d610e99565b604052919050565b600067ffffffffffffffff821115610f7f57610f7f610e99565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610fbd57600080fd5b813567ffffffffffffffff811115610fd457600080fd5b8201601f81018413610fe557600080fd5b8035610ff8610ff382610f65565b610f16565b81815285602083850101111561100d57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561104657818101518382015260200161102e565b83811115611055576000848401525b50505050565b602081526000825180602084015261107a81604085016020870161102b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156110be57600080fd5b5035919050565b6000602082840312156110d757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b60006020828403121561110d57600080fd5b5051919050565b600082601f83011261112557600080fd5b8151611133610ff382610f65565b81815284602083860101111561114857600080fd5b61098882602083016020870161102b565b805160ff8116811461116a57600080fd5b919050565b805167ffffffffffffffff8116811461116a57600080fd5b805163ffffffff8116811461116a57600080fd5b6000602082840312156111ad57600080fd5b815167ffffffffffffffff808211156111c557600080fd5b9083019061012082860312156111da57600080fd5b6111e2610ec8565b8251828111156111f157600080fd5b6111fd87828601611114565b82525060208301518281111561121257600080fd5b61121e87828601611114565b60208301525061123060408401611159565b604082015261124160608401611159565b60608201526112526080840161116f565b608082015261126360a0840161116f565b60a082015261127460c08401611187565b60c082015261128560e0840161116f565b60e0820152610100915061129a82840161116f565b91810191909152949350505050565b8051801515811461116a57600080fd5b6000602082840312156112cb57600080fd5b6100f2826112a9565b600060208083850312156112e757600080fd5b825167ffffffffffffffff808211156112ff57600080fd5b818501915085601f83011261131357600080fd5b81518181111561132557611325610e99565b8060051b9150611336848301610f16565b818152918301840191848101908884111561135057600080fd5b938501935b8385101561136e57845182529385019390850190611355565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156113bb57600080fd5b815167ffffffffffffffff808211156113d357600080fd5b9083019061010082860312156113e857600080fd5b6113f0610ef2565b8251815261140060208401611187565b602082015260408301518281111561141757600080fd5b61142387828601611114565b604083015250606083015160608201526080830151608082015261144960a084016112a9565b60a082015261145a60c0840161116f565b60c082015261146b60e0840161116f565b60e082015295945050505050565b6000825161148b81846020870161102b565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212209373b7e13ad88f177e7854bb529815d4cd5e4e47f335a77d8d31eed73bf18bea64736f6c634300080d0033";

type UnboundTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnboundTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnboundTreasureSystem__factory extends ContractFactory {
  constructor(...args: UnboundTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnboundTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UnboundTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UnboundTreasureSystem {
    return super.attach(address) as UnboundTreasureSystem;
  }
  override connect(signer: Signer): UnboundTreasureSystem__factory {
    return super.connect(signer) as UnboundTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnboundTreasureSystemInterface {
    return new utils.Interface(_abi) as UnboundTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnboundTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnboundTreasureSystem;
  }
}
