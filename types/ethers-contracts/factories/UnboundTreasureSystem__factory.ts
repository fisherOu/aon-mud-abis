/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UnboundTreasureSystem,
  UnboundTreasureSystemInterface,
} from "../UnboundTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "prex",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Debug",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017053803806200170583398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620006ca17901c565b5050505062000292565b600062000126620001ef60201b6200075b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61146380620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610eeb565b6100cf565b6040516100719190610fe5565b60405180910390f35b610064610088366004610ff8565b6100f9565b610095610609565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611011565b61064e565b005b60606000828060200190518101906100e79190611047565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf0661077f565b600080549192509061018a9073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c61077f565b60008054919250906101d29073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e116661077f565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161020c91815260200190565b600060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261026f91908101906110e7565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906111ef565b801561039b57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101879052849073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190611047565b145b610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064015b60405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049591906111ef565b6104fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f7420626f756e64656420796574000000000000000000000000000000000060448201526064016103fd565b60408181015181518281526011818401527f74726561737572652e7573654d6f64653a000000000000000000000000000000606082015260ff909116602082015290517f3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d65779181900360800190a1806040015160ff1660000361058057610580866108cb565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b1580156105e857600080fd5b505af11580156105fc573d6000803e3d6000fd5b5050505050505050919050565b60006106497f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146106be576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c781610d49565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156107ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610835919081019061120a565b905080516000036108a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103fd565b6108c3816000815181106108b8576108b86112b0565b602002602001015190565b949350505050565b600080543391906109129073ffffffffffffffffffffffffffffffffffffffff167f2d1944d7c92d4cf7892c9f8d3312e879c70e4e7904208d77f458b7bf7c952e1961077f565b600080549192509061095a9073ffffffffffffffffffffffffffffffffffffffff167f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd061077f565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa1580156109cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a11919081019061120a565b905060005b8151811015610d415760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610a4f57610a4f6112b0565b60200260200101516040518263ffffffff1660e01b8152600401610a7591815260200190565b600060405180830381865afa158015610a92573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ad891908101906112df565b90507f3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d657781604001518260600151604051610b13929190611390565b60405180910390a16040517f74726561737572650000000000000000000000000000000000000000000000006020820152602801604051602081830303815290604052805190602001208160400151604051602001610b7291906113b2565b60405160208183030381529060405280519060200120148015610b985750868160600151145b15610d2e577f3c5ad147104e56be34a9176a6692f7df8d2f4b29a5af06bc6b98970d329d6577838381518110610bd057610bd06112b0565b6020026020010151604051610c1f919060408082526008908201527f72656d6f76696e670000000000000000000000000000000000000000000000006060820152602081019190915260800190565b60405180910390a16040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b158015610c8f57600080fd5b505af1158015610ca3573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634cc82215848481518110610cd557610cd56112b0565b60200260200101516040518263ffffffff1660e01b8152600401610cfb91815260200190565b600060405180830381600087803b158015610d1557600080fd5b505af1158015610d29573d6000803e3d6000fd5b505050505b5080610d39816113ce565b915050610a16565b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516106c7928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e5057610e50610dfd565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e9d57610e9d610dfd565b604052919050565b600067ffffffffffffffff821115610ebf57610ebf610dfd565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610efd57600080fd5b813567ffffffffffffffff811115610f1457600080fd5b8201601f81018413610f2557600080fd5b8035610f38610f3382610ea5565b610e56565b818152856020838501011115610f4d57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610f86578181015183820152602001610f6e565b83811115610f95576000848401525b50505050565b60008151808452610fb3816020860160208601610f6b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610f9b565b60006020828403121561100a57600080fd5b5035919050565b60006020828403121561102357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b60006020828403121561105957600080fd5b5051919050565b600082601f83011261107157600080fd5b815161107f610f3382610ea5565b81815284602083860101111561109457600080fd5b6108c3826020830160208701610f6b565b805160ff811681146110b657600080fd5b919050565b805167ffffffffffffffff811681146110b657600080fd5b805163ffffffff811681146110b657600080fd5b6000602082840312156110f957600080fd5b815167ffffffffffffffff8082111561111157600080fd5b90830190610100828603121561112657600080fd5b61112e610e2c565b82518281111561113d57600080fd5b61114987828601611060565b82525060208301518281111561115e57600080fd5b61116a87828601611060565b60208301525061117c604084016110a5565b604082015261118d606084016110a5565b606082015261119e608084016110bb565b60808201526111af60a084016110bb565b60a08201526111c060c084016110d3565b60c08201526111d160e084016110bb565b60e082015295945050505050565b805180151581146110b657600080fd5b60006020828403121561120157600080fd5b6100f2826111df565b6000602080838503121561121d57600080fd5b825167ffffffffffffffff8082111561123557600080fd5b818501915085601f83011261124957600080fd5b81518181111561125b5761125b610dfd565b8060051b915061126c848301610e56565b818152918301840191848101908884111561128657600080fd5b938501935b838510156112a45784518252938501939085019061128b565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156112f157600080fd5b815167ffffffffffffffff8082111561130957600080fd5b90830190610100828603121561131e57600080fd5b611326610e2c565b82518152611336602084016110d3565b602082015260408301518281111561134d57600080fd5b61135987828601611060565b604083015250606083015160608201526080830151608082015261137f60a084016111df565b60a08201526111c060c084016110bb565b6040815260006113a36040830185610f9b565b90508260208301529392505050565b600082516113c4818460208701610f6b565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611426577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220031b6e723bacda9ad68a12758d02d1beb0ebd70a090c09274084cac6512800fc64736f6c634300080d0033";

type UnboundTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnboundTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnboundTreasureSystem__factory extends ContractFactory {
  constructor(...args: UnboundTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnboundTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UnboundTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UnboundTreasureSystem {
    return super.attach(address) as UnboundTreasureSystem;
  }
  override connect(signer: Signer): UnboundTreasureSystem__factory {
    return super.connect(signer) as UnboundTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnboundTreasureSystemInterface {
    return new utils.Interface(_abi) as UnboundTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnboundTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnboundTreasureSystem;
  }
}
