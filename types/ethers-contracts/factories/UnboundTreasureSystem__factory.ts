/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  UnboundTreasureSystem,
  UnboundTreasureSystemInterface,
} from "../UnboundTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200169a3803806200169a83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200065d17901c565b5050505062000292565b600062000126620001ef60201b620006ee1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6113f880620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610e79565b6100cf565b6040516100719190610f29565b60405180910390f35b610064610088366004610f7a565b6100f9565b61009561059c565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610f93565b6105e1565b005b60606000828060200190518101906100e79190610fc9565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610712565b600080549192509061018a9073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c610712565b60008054919250906101d29073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610712565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916876040518263ffffffff1660e01b815260040161020c91815260200190565b600060405180830381865afa158015610229573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261026f9190810190611069565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190611187565b801561039b57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101879052849073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401602060405180830381865afa158015610375573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103999190610fc9565b145b610406576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064015b60405180910390fd5b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610471573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104959190611187565b6104fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f7420626f756e64656420796574000000000000000000000000000000000060448201526064016103fd565b806040015160ff16600003610513576105138661085e565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b5050505050505050919050565b60006105dc7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610651576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61065a81610cb3565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610782573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107c891908101906111a2565b90508051600003610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103fd565b6108568160008151811061084b5761084b611248565b602002602001015190565b949350505050565b600080543391906108a59073ffffffffffffffffffffffffffffffffffffffff167f2d1944d7c92d4cf7892c9f8d3312e879c70e4e7904208d77f458b7bf7c952e19610712565b60008054919250906108ed9073ffffffffffffffffffffffffffffffffffffffff167f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd0610712565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa15801561095e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109a491908101906111a2565b905060005b8151811015610cab5760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c9168484815181106109e2576109e2611248565b60200260200101516040518263ffffffff1660e01b8152600401610a0891815260200190565b600060405180830381865afa158015610a25573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a6b9190810190611277565b6040517f74726561737572650000000000000000000000000000000000000000000000006020820152909150602801604051602081830303815290604052805190602001208160400151604051602001610ac59190611347565b60405160208183030381529060405280519060200120148015610aeb5750868160600151145b15610c98578473ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e848481518110610b1e57610b1e611248565b60200260200101516040518263ffffffff1660e01b8152600401610b4491815260200190565b602060405180830381865afa158015610b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b859190611187565b15610c11578473ffffffffffffffffffffffffffffffffffffffff16634cc82215848481518110610bb857610bb8611248565b60200260200101516040518263ffffffff1660e01b8152600401610bde91815260200190565b600060405180830381600087803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff16634cc82215848481518110610c3f57610c3f611248565b60200260200101516040518263ffffffff1660e01b8152600401610c6591815260200190565b600060405180830381600087803b158015610c7f57600080fd5b505af1158015610c93573d6000803e3d6000fd5b505050505b5080610ca381611363565b9150506109a9565b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161065a928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610dba57610dba610d67565b60405290565b604051610100810167ffffffffffffffff81118282101715610dba57610dba610d67565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e2b57610e2b610d67565b604052919050565b600067ffffffffffffffff821115610e4d57610e4d610d67565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610e8b57600080fd5b813567ffffffffffffffff811115610ea257600080fd5b8201601f81018413610eb357600080fd5b8035610ec6610ec182610e33565b610de4565b818152856020838501011115610edb57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610f14578181015183820152602001610efc565b83811115610f23576000848401525b50505050565b6020815260008251806020840152610f48816040850160208701610ef9565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060208284031215610f8c57600080fd5b5035919050565b600060208284031215610fa557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600060208284031215610fdb57600080fd5b5051919050565b600082601f830112610ff357600080fd5b8151611001610ec182610e33565b81815284602083860101111561101657600080fd5b610856826020830160208701610ef9565b805160ff8116811461103857600080fd5b919050565b805167ffffffffffffffff8116811461103857600080fd5b805163ffffffff8116811461103857600080fd5b60006020828403121561107b57600080fd5b815167ffffffffffffffff8082111561109357600080fd5b9083019061012082860312156110a857600080fd5b6110b0610d96565b8251828111156110bf57600080fd5b6110cb87828601610fe2565b8252506020830151828111156110e057600080fd5b6110ec87828601610fe2565b6020830152506110fe60408401611027565b604082015261110f60608401611027565b60608201526111206080840161103d565b608082015261113160a0840161103d565b60a082015261114260c08401611055565b60c082015261115360e0840161103d565b60e0820152610100915061116882840161103d565b91810191909152949350505050565b8051801515811461103857600080fd5b60006020828403121561119957600080fd5b6100f282611177565b600060208083850312156111b557600080fd5b825167ffffffffffffffff808211156111cd57600080fd5b818501915085601f8301126111e157600080fd5b8151818111156111f3576111f3610d67565b8060051b9150611204848301610de4565b818152918301840191848101908884111561121e57600080fd5b938501935b8385101561123c57845182529385019390850190611223565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561128957600080fd5b815167ffffffffffffffff808211156112a157600080fd5b9083019061010082860312156112b657600080fd5b6112be610dc0565b825181526112ce60208401611055565b60208201526040830151828111156112e557600080fd5b6112f187828601610fe2565b604083015250606083015160608201526080830151608082015261131760a08401611177565b60a082015261132860c0840161103d565b60c082015261133960e0840161103d565b60e082015295945050505050565b60008251611359818460208701610ef9565b9190910192915050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212207151a3f0d00012785aa1d799aadaa03f634b453df4f84e41241b9a6164a6ca3f64736f6c634300080d0033";

type UnboundTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UnboundTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UnboundTreasureSystem__factory extends ContractFactory {
  constructor(...args: UnboundTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UnboundTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<UnboundTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): UnboundTreasureSystem {
    return super.attach(address) as UnboundTreasureSystem;
  }
  override connect(signer: Signer): UnboundTreasureSystem__factory {
    return super.connect(signer) as UnboundTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UnboundTreasureSystemInterface {
    return new utils.Interface(_abi) as UnboundTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UnboundTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as UnboundTreasureSystem;
  }
}
