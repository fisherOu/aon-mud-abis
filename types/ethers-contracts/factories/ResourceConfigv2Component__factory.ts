/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ResourceConfigv2Component,
  ResourceConfigv2ComponentInterface,
} from "../ResourceConfigv2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "valueMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueMin",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "difficultMax",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "difficultMin",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMax",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMin",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "maxBatch",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "valueMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueMin",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "difficultMax",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "difficultMin",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMax",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMin",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "maxBatch",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceConfig",
        name: "resourceConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019b3380380620019b3833981016040819052620000349162000200565b807f449046c6526dd477102b464b5eeec34aaf8161a18f2ba1757f71638ac037f72f62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000efa1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000efa1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61177180620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e14610311578063cccf7a8e14610324578063f2fde38b1461033757600080fd5b8063b361be46146102de578063b8bc073d146102f157600080fd5b80638da5cb5b146102995780639d2c76b4146102a1578063ad5244d5146102b4578063af640d0f146102c757600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610250578063861eb905146102635780638b2829471461028657600080fd5b80634fef6a38146102275780636b122fe01461023a57600080fd5b8063209652551461013b57806330b67baa146101b857806331b933b9146101fd5780634cc8221514610212575b600080fd5b61014361034a565b6040516101af9190600060e082019050825182526020830151602083015260ff604084015116604083015260ff6060840151166060830152608083015167ffffffffffffffff80821660808501528060a08601511660a0850152505060c083015160c083015292915050565b60405180910390f35b6000546101d89073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101af565b6102056103f9565b6040516101af91906111c1565b610225610220366004611205565b61042d565b005b61022561023536600461121e565b610478565b610242610556565b6040516101af9291906112f5565b61022561025e36600461121e565b6109dc565b61027661027136600461121e565b610a0e565b60405190151581526020016101af565b6102256102943660046114bf565b610a99565b6101d8610ae6565b6102256102af36600461121e565b610b2b565b6102256102c236600461152b565b610c54565b6102d060025481565b6040519081526020016101af565b6102056102ec3660046115d2565b6103f9565b6103046102ff366004611205565b610ce2565b6040516101af919061160f565b61022561031f36600461121e565b610d84565b610276610332366004611205565b610e5f565b61022561034536600461121e565b610e81565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529080808080808061039461060d610ce2565b8060200190518101906103a79190611622565b6040805160e081018252978852602088019690965260ff9485169587019590955292909116606085015267ffffffffffffffff90811660808501521660a083015260c082015298975050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043633610a0e565b61046c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610f1e565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104e8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160078082526101008201909252606091829190816020015b606081526020019060019003908161057257505060408051600780825261010082019092529193506020820160e0803683370190505090506040518060400160405280600881526020017f76616c75654d6178000000000000000000000000000000000000000000000000815250826000815181106105f3576105f36116a0565b6020026020010181905250600d81600081518110610613576106136116a0565b6020026020010190602181111561062c5761062c6112c6565b9081602181111561063f5761063f6112c6565b815250506040518060400160405280600881526020017f76616c75654d696e0000000000000000000000000000000000000000000000008152508260018151811061068c5761068c6116a0565b6020026020010181905250600d816001815181106106ac576106ac6116a0565b602002602001019060218111156106c5576106c56112c6565b908160218111156106d8576106d86112c6565b815250506040518060400160405280600c81526020017f646966666963756c744d6178000000000000000000000000000000000000000081525082600281518110610725576107256116a0565b6020026020010181905250600881600281518110610745576107456116a0565b6020026020010190602181111561075e5761075e6112c6565b90816021811115610771576107716112c6565b815250506040518060400160405280600c81526020017f646966666963756c744d696e0000000000000000000000000000000000000000815250826003815181106107be576107be6116a0565b60200260200101819052506008816003815181106107de576107de6116a0565b602002602001019060218111156107f7576107f76112c6565b9081602181111561080a5761080a6112c6565b815250506040518060400160405280600d81526020017f72656375697454696d654d61780000000000000000000000000000000000000081525082600481518110610857576108576116a0565b6020026020010181905250600b81600481518110610877576108776116a0565b60200260200101906021811115610890576108906112c6565b908160218111156108a3576108a36112c6565b815250506040518060400160405280600d81526020017f72656375697454696d654d696e00000000000000000000000000000000000000815250826005815181106108f0576108f06116a0565b6020026020010181905250600b81600581518110610910576109106116a0565b60200260200101906021811115610929576109296112c6565b9081602181111561093c5761093c6112c6565b815250506040518060400160405280600881526020017f6d6178426174636800000000000000000000000000000000000000000000000081525082600681518110610989576109896116a0565b6020026020010181905250600d816006815181106109a9576109a96116a0565b602002602001019060218111156109c2576109c26112c6565b908160218111156109d5576109d56112c6565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a935750610a64610ae6565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610aa233610a0e565b610ad8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ae28282610f8c565b5050565b6000610b267f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b9b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b5050505050565b61047561060d826000015183602001518460400151856060015186608001518760a001518860c00151604051602001610cce9796959493929190968752602087019590955260ff938416604087015291909216606085015267ffffffffffffffff91821660808501521660a083015260c082015260e00190565b604051602081830303815290604052610a99565b6000818152600160205260409020805460609190610cff906116cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2b906116cf565b8015610d785780601f10610d4d57610100808354040283529160200191610d78565b820191906000526020600020905b815481529060010190602001808311610d5b57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610df4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610e78906116cf565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ef1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104758161103a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f35916110ee565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610c1f565b60008281526001602090815260409091208251610fab92840190611128565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110049085908590600401611722565b600060405180830381600087803b15801561101e57600080fd5b505af1158015611032573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610475928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546110fa906116cf565b6000825580601f1061110a575050565b601f01602090049060005260206000209081019061047591906111ac565b828054611134906116cf565b90600052602060002090601f016020900481019282611156576000855561119c565b82601f1061116f57805160ff191683800117855561119c565b8280016001018555821561119c579182015b8281111561119c578251825591602001919060010190611181565b506111a89291506111ac565b5090565b5b808211156111a857600081556001016111ad565b6020808252825182820181905260009190848201906040850190845b818110156111f9578351835292840192918401916001016111dd565b50909695505050505050565b60006020828403121561121757600080fd5b5035919050565b60006020828403121561123057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461125457600080fd5b9392505050565b6000815180845260005b8181101561128157602081850181015186830182015201611265565b81811115611293576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561136a577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261135886835161125b565b9550938201939082019060010161131e565b50508584038187015286518085528782019482019350915060005b828110156113d8578451602281106113c6577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611385565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261142557600080fd5b813567ffffffffffffffff80821115611440576114406113e5565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611486576114866113e5565b8160405283815286602085880101111561149f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156114d257600080fd5b82359150602083013567ffffffffffffffff8111156114f057600080fd5b6114fc85828601611414565b9150509250929050565b60ff8116811461047557600080fd5b67ffffffffffffffff8116811461047557600080fd5b600060e0828403121561153d57600080fd5b60405160e0810181811067ffffffffffffffff82111715611560576115606113e5565b80604052508235815260208301356020820152604083013561158181611506565b6040820152606083013561159481611506565b606082015260808301356115a781611515565b608082015260a08301356115ba81611515565b60a082015260c0928301359281019290925250919050565b6000602082840312156115e457600080fd5b813567ffffffffffffffff8111156115fb57600080fd5b61160784828501611414565b949350505050565b602081526000611254602083018461125b565b600080600080600080600060e0888a03121561163d57600080fd5b8751965060208801519550604088015161165681611506565b606089015190955061166781611506565b608089015190945061167881611515565b60a089015190935061168981611515565b8092505060c0880151905092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806116e357607f821691505b60208210810361171c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000611607604083018461125b56fea26469706673582212206b845ab561352a87734569349ad260854614544dacc8b95391aa5d82de546e3064736f6c634300080d0033";

type ResourceConfigv2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResourceConfigv2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResourceConfigv2Component__factory extends ContractFactory {
  constructor(...args: ResourceConfigv2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResourceConfigv2Component> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<ResourceConfigv2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ResourceConfigv2Component {
    return super.attach(address) as ResourceConfigv2Component;
  }
  override connect(signer: Signer): ResourceConfigv2Component__factory {
    return super.connect(signer) as ResourceConfigv2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceConfigv2ComponentInterface {
    return new utils.Interface(_abi) as ResourceConfigv2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceConfigv2Component {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ResourceConfigv2Component;
  }
}
