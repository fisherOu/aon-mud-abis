/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ResourceConfigv2Component,
  ResourceConfigv2ComponentInterface,
} from "../ResourceConfigv2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "valueMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueMin",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "difficultMax",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "difficultMin",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMax",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMin",
            type: "uint64",
          },
        ],
        internalType: "struct ResourceConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "valueMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "valueMin",
            type: "uint256",
          },
          {
            internalType: "uint8",
            name: "difficultMax",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "difficultMin",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMax",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "recuitTimeMin",
            type: "uint64",
          },
        ],
        internalType: "struct ResourceConfig",
        name: "resourceConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018da380380620018da833981016040819052620000349162000200565b807f449046c6526dd477102b464b5eeec34aaf8161a18f2ba1757f71638ac037f72f62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000e381760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000e381760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61169880620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e14610307578063cccf7a8e1461031a578063f2fde38b1461032d57600080fd5b8063b361be46146102d4578063b8bc073d146102e757600080fd5b80638b2829471461028f5780638da5cb5b146102a25780639d2c76b4146102aa578063af640d0f146102bd57600080fd5b80634fef6a38116101095780636b122fe0116100ee5780636b122fe01461024357806375c0669c14610259578063861eb9051461026c57600080fd5b80634fef6a381461021d5780636a0c3cbd1461023057600080fd5b8063209652551461013b57806330b67baa146101ae57806331b933b9146101f35780634cc8221514610208575b600080fd5b610143610340565b6040516101a59190600060c082019050825182526020830151602083015260ff604084015116604083015260ff6060840151166060830152608083015167ffffffffffffffff80821660808501528060a08601511660a0850152505092915050565b60405180910390f35b6000546101ce9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a5565b6101fb6103df565b6040516101a591906110ff565b61021b610216366004611143565b610413565b005b61021b61022b36600461115c565b61045e565b61021b61023e3660046111ed565b61053c565b61024b6105bd565b6040516101a5929190611322565b61021b61026736600461115c565b6109a8565b61027f61027a36600461115c565b6109da565b60405190151581526020016101a5565b61021b61029d3660046114bd565b610a65565b6101ce610ab2565b61021b6102b836600461115c565b610af7565b6102c660025481565b6040519081526020016101a5565b6101fb6102e2366004611504565b6103df565b6102fa6102f5366004611143565b610c20565b6040516101a59190611541565b61021b61031536600461115c565b610cc2565b61027f610328366004611143565b610d9d565b61021b61033b36600461115c565b610dbf565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905290808080808061038261060d610c20565b8060200190518101906103959190611554565b6040805160c081018252968752602087019590955260ff938416948601949094529116606084015267ffffffffffffffff90811660808401521660a0820152979650505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041c336109da565b610452576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045b81610e5c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104ce576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61045b61060d826000015183602001518460400151856060015186608001518760a001516040516020016105a996959493929190958652602086019490945260ff92831660408601529116606084015267ffffffffffffffff90811660808401521660a082015260c00190565b604051602081830303815290604052610a65565b60408051600680825260e08201909252606091829190816020015b60608152602001906001900390816105d857505060408051600680825260e082019092529193506020820160c0803683370190505090506040518060400160405280600881526020017f76616c75654d617800000000000000000000000000000000000000000000000081525082600081518110610658576106586115c7565b6020026020010181905250600d81600081518110610678576106786115c7565b60200260200101906021811115610691576106916112f3565b908160218111156106a4576106a46112f3565b815250506040518060400160405280600881526020017f76616c75654d696e000000000000000000000000000000000000000000000000815250826001815181106106f1576106f16115c7565b6020026020010181905250600d81600181518110610711576107116115c7565b6020026020010190602181111561072a5761072a6112f3565b9081602181111561073d5761073d6112f3565b815250506040518060400160405280600c81526020017f646966666963756c744d617800000000000000000000000000000000000000008152508260028151811061078a5761078a6115c7565b60200260200101819052506008816002815181106107aa576107aa6115c7565b602002602001019060218111156107c3576107c36112f3565b908160218111156107d6576107d66112f3565b815250506040518060400160405280600c81526020017f646966666963756c744d696e000000000000000000000000000000000000000081525082600381518110610823576108236115c7565b6020026020010181905250600881600381518110610843576108436115c7565b6020026020010190602181111561085c5761085c6112f3565b9081602181111561086f5761086f6112f3565b815250506040518060400160405280600d81526020017f72656375697454696d654d617800000000000000000000000000000000000000815250826004815181106108bc576108bc6115c7565b6020026020010181905250600b816004815181106108dc576108dc6115c7565b602002602001019060218111156108f5576108f56112f3565b90816021811115610908576109086112f3565b815250506040518060400160405280600d81526020017f72656375697454696d654d696e0000000000000000000000000000000000000081525082600581518110610955576109556115c7565b6020026020010181905250600b81600581518110610975576109756115c7565b6020026020010190602181111561098e5761098e6112f3565b908160218111156109a1576109a16112f3565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a5f5750610a30610ab2565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a6e336109da565b610aa4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aae8282610eca565b5050565b6000610af27f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b67576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610c3d906115f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610c69906115f6565b8015610cb65780601f10610c8b57610100808354040283529160200191610cb6565b820191906000526020600020905b815481529060010190602001808311610c9957829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d32576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610db6906115f6565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e2f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045b81610f78565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e739161102c565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610beb565b60008281526001602090815260409091208251610ee992840190611066565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f429085908590600401611649565b600060405180830381600087803b158015610f5c57600080fd5b505af1158015610f70573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161045b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054611038906115f6565b6000825580601f10611048575050565b601f01602090049060005260206000209081019061045b91906110ea565b828054611072906115f6565b90600052602060002090601f01602090048101928261109457600085556110da565b82601f106110ad57805160ff19168380011785556110da565b828001600101855582156110da579182015b828111156110da5782518255916020019190600101906110bf565b506110e69291506110ea565b5090565b5b808211156110e657600081556001016110eb565b6020808252825182820181905260009190848201906040850190845b818110156111375783518352928401929184019160010161111b565b50909695505050505050565b60006020828403121561115557600080fd5b5035919050565b60006020828403121561116e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461119257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60ff8116811461045b57600080fd5b67ffffffffffffffff8116811461045b57600080fd5b600060c082840312156111ff57600080fd5b60405160c0810181811067ffffffffffffffff8211171561122257611222611199565b806040525082358152602083013560208201526040830135611243816111c8565b60408201526060830135611256816111c8565b60608201526080830135611269816111d7565b608082015260a083013561127c816111d7565b60a08201529392505050565b6000815180845260005b818110156112ae57602081850181015186830182015201611292565b818111156112c0576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611397577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611385868351611288565b9550938201939082019060010161134b565b50508584038187015286518085528782019482019350915060005b82811015611405578451602281106113f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016113b2565b5091979650505050505050565b600082601f83011261142357600080fd5b813567ffffffffffffffff8082111561143e5761143e611199565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561148457611484611199565b8160405283815286602085880101111561149d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156114d057600080fd5b82359150602083013567ffffffffffffffff8111156114ee57600080fd5b6114fa85828601611412565b9150509250929050565b60006020828403121561151657600080fd5b813567ffffffffffffffff81111561152d57600080fd5b61153984828501611412565b949350505050565b6020815260006111926020830184611288565b60008060008060008060c0878903121561156d57600080fd5b86519550602087015194506040870151611586816111c8565b6060880151909450611597816111c8565b60808801519093506115a8816111d7565b60a08801519092506115b9816111d7565b809150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061160a57607f821691505b602082108103611643577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000611539604083018461128856fea26469706673582212209940481797e4c6e4c9ebe4ae39507a8cdbae5fd60e5ee79dbd3034035819e96f64736f6c634300080d0033";

type ResourceConfigv2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResourceConfigv2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResourceConfigv2Component__factory extends ContractFactory {
  constructor(...args: ResourceConfigv2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResourceConfigv2Component> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<ResourceConfigv2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ResourceConfigv2Component {
    return super.attach(address) as ResourceConfigv2Component;
  }
  override connect(signer: Signer): ResourceConfigv2Component__factory {
    return super.connect(signer) as ResourceConfigv2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceConfigv2ComponentInterface {
    return new utils.Interface(_abi) as ResourceConfigv2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceConfigv2Component {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ResourceConfigv2Component;
  }
}
