/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SetStatusSystem,
  SetStatusSystemInterface,
} from "../SetStatusSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "status",
            type: "uint32",
          },
        ],
        internalType: "struct Status",
        name: "statusInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012053803806200120583398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200071e17901c565b5050505062000292565b600062000126620001ef60201b620007af1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610f6380620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a5780639b9ea327146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610a7a565b6100cf565b6040516100719190610b2d565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610bb2565b61013e565b6100cd6100c8366004610c02565b6106a2565b005b60606000828060200190518101906100e79190610c1f565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b80516060906000336001546040517f4f27da180000000000000000000000000000000000000000000000000000000081527f96b5cf7019465e93c7e5108d84c24e70f0d4aa63ab16b75f307df929278baad9600482015291925060009173ffffffffffffffffffffffffffffffffffffffff90911690634f27da1890602401602060405180830381865afa1580156101da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fe9190610c44565b90508263ffffffff1660010361060e57600080546102529073ffffffffffffffffffffffffffffffffffffffff167f189eafd1a01543209399086ef2e12962fca648be4826ce2b3eb2e53ed14bf1416107d3565b600080549192509061029a9073ffffffffffffffffffffffffffffffffffffffff167f3c3102d48c6d31b1a70ddf8b23d300c759379d6506f2ef221cf3056d7c54dca76107d3565b6040517f720354530000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff831690637203545390602401602060405180830381865afa15801561030b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032f9190610c61565b60008054919250906103779073ffffffffffffffffffffffffffffffffffffffff167fdc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f76107d3565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160a060405180830381865afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190610ca1565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c916906024016040805180830381865afa158015610455573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104799190610d2b565b602083015181519192506000916104909042610db5565b61049a9190610dde565b82602001516104a99190610e2c565b905063ffffffff841667ffffffffffffffff821611156104cc575063ffffffff83165b60018167ffffffffffffffff161015610546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6c61636b206f6620616374696f6e20706f696e7473000000000000000000000060448201526064015b60405180910390fd5b610551600182610db5565b60408051808201825267ffffffffffffffff42811682528381166020830190815292517f4e6641a9000000000000000000000000000000000000000000000000000000008152600481018d90529151811660248301529151909116604482015290915073ffffffffffffffffffffffffffffffffffffffff871690634e6641a990606401600060405180830381600087803b1580156105ef57600080fd5b505af1158015610603573d6000803e3d6000fd5b505050505050505050505b6040517fd923c3c40000000000000000000000000000000000000000000000000000000081526004810183905263ffffffff8416602482015273ffffffffffffffffffffffffffffffffffffffff82169063d923c3c490604401600060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b50505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610712576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61071b8161091f565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610843573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108899190810190610e58565b905080516000036108f6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161053d565b6109178160008151811061090c5761090c610efe565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161071b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610a2557610a256109d3565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a7257610a726109d3565b604052919050565b60006020808385031215610a8d57600080fd5b823567ffffffffffffffff80821115610aa557600080fd5b818501915085601f830112610ab957600080fd5b813581811115610acb57610acb6109d3565b610afb847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a2b565b91508082528684828501011115610b1157600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610b5a57858101830151858201604001528201610b3e565b81811115610b6c576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b63ffffffff8116811461071b57600080fd5b600060208284031215610bc457600080fd5b610bcc610a02565b8235610bd781610ba0565b81529392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461071b57600080fd5b600060208284031215610c1457600080fd5b81356100f281610be0565b600060208284031215610c3157600080fd5b610c39610a02565b8251610bd781610ba0565b600060208284031215610c5657600080fd5b81516100f281610be0565b600060208284031215610c7357600080fd5b81518060030b81146100f257600080fd5b805167ffffffffffffffff81168114610c9c57600080fd5b919050565b600060a08284031215610cb357600080fd5b60405160a0810181811067ffffffffffffffff82111715610cd657610cd66109d3565b604052610ce283610c84565b8152610cf060208401610c84565b6020820152610d0160408401610c84565b6040820152610d1260608401610c84565b6060820152608083015160808201528091505092915050565b600060408284031215610d3d57600080fd5b6040516040810181811067ffffffffffffffff82111715610d6057610d606109d3565b604052610d6c83610c84565b8152610d7a60208401610c84565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff83811690831681811015610dd657610dd6610d86565b039392505050565b600067ffffffffffffffff80841680610e20577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff808316818516808303821115610e4f57610e4f610d86565b01949350505050565b60006020808385031215610e6b57600080fd5b825167ffffffffffffffff80821115610e8357600080fd5b818501915085601f830112610e9757600080fd5b815181811115610ea957610ea96109d3565b8060051b9150610eba848301610a2b565b8181529183018401918481019088841115610ed457600080fd5b938501935b83851015610ef257845182529385019390850190610ed9565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220298882a997a8a93b45d569dd7a1201d25965e0c7a471f4449f95481cedaf570b64736f6c634300080d0033";

type SetStatusSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SetStatusSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SetStatusSystem__factory extends ContractFactory {
  constructor(...args: SetStatusSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SetStatusSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<SetStatusSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): SetStatusSystem {
    return super.attach(address) as SetStatusSystem;
  }
  override connect(signer: Signer): SetStatusSystem__factory {
    return super.connect(signer) as SetStatusSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SetStatusSystemInterface {
    return new utils.Interface(_abi) as SetStatusSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SetStatusSystem {
    return new Contract(address, _abi, signerOrProvider) as SetStatusSystem;
  }
}
