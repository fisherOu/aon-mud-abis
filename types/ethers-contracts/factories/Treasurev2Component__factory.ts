/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  Treasurev2Component,
  Treasurev2ComponentInterface,
} from "../Treasurev2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "cooldownTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "range",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "usageTimes",
            type: "uint32",
          },
        ],
        internalType: "struct Treasure",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "cooldownTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "range",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "usageTimes",
            type: "uint32",
          },
        ],
        internalType: "struct Treasure",
        name: "treasure",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200188638038062001886833981016040819052620000349162000200565b807f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e116662000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000d951760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000d951760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61164480620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e1461030e578063cccf7a8e14610321578063f2fde38b1461033457600080fd5b8063b361be46146102db578063b8bc073d146102ee57600080fd5b80638b282947146102965780638da5cb5b146102a95780639d2c76b4146102b1578063af640d0f146102c457600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe01461024a57806375c0669c14610260578063861eb9051461027357600080fd5b80634cc82215146102245780634fef6a381461023757600080fd5b80630ff4c9161461013b57806326863f77146101b557806330b67baa146101ca57806331b933b91461020f575b600080fd5b61014e61014936600461105c565b610347565b6040516101ac9190600060a08201905060ff835116825260ff6020840151166020830152604083015167ffffffffffffffff8082166040850152806060860151166060850152505063ffffffff608084015116608083015292915050565b60405180910390f35b6101c86101c33660046110db565b6103db565b005b6000546101ea9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101ac565b61021761045a565b6040516101ac91906111b1565b6101c861023236600461105c565b61048e565b6101c86102453660046111f5565b6104d9565b6102526105b7565b6040516101ac9291906112cc565b6101c861026e3660046111f5565b610909565b6102866102813660046111f5565b61093b565b60405190151581526020016101ac565b6101c86102a4366004611467565b6109c6565b6101ea610a0f565b6101c86102bf3660046111f5565b610a54565b6102cd60025481565b6040519081526020016101ac565b6102176102e93660046114ae565b61045a565b6103016102fc36600461105c565b610b7d565b6040516101ac91906114eb565b6101c861031c3660046111f5565b610c1f565b61028661032f36600461105c565b610cfa565b6101c86103423660046111f5565b610d1c565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052908080808061037f87610b7d565b80602001905181019061039291906114fe565b6040805160a08101825260ff968716815295909416602086015267ffffffffffffffff9283169385019390935216606083015263ffffffff166080820152979650505050505050565b610456828260000151836020015184604001518560600151866080015160405160200161044295949392919060ff958616815293909416602084015267ffffffffffffffff918216604084015216606082015263ffffffff91909116608082015260a00190565b6040516020818303038152906040526109c6565b5050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104973361093b565b6104cd576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d681610db9565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610549576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600580825260c08201909252606091829190816020015b60608152602001906001900390816105d257505060408051600580825260c082019092529193506020820160a0803683370190505090506040518060400160405280600781526020017f7573654d6f6465000000000000000000000000000000000000000000000000008152508260008151811061065257610652611573565b602002602001018190525060088160008151811061067257610672611573565b6020026020010190602181111561068b5761068b61129d565b9081602181111561069e5761069e61129d565b815250506040518060400160405280600781526020017f6869744d6f646500000000000000000000000000000000000000000000000000815250826001815181106106eb576106eb611573565b602002602001018190525060088160018151811061070b5761070b611573565b602002602001019060218111156107245761072461129d565b908160218111156107375761073761129d565b815250506040518060400160405280600c81526020017f636f6f6c646f776e54696d6500000000000000000000000000000000000000008152508260028151811061078457610784611573565b6020026020010181905250600b816002815181106107a4576107a4611573565b602002602001019060218111156107bd576107bd61129d565b908160218111156107d0576107d061129d565b815250506040518060400160405280600581526020017f72616e67650000000000000000000000000000000000000000000000000000008152508260038151811061081d5761081d611573565b6020026020010181905250600b8160038151811061083d5761083d611573565b602002602001019060218111156108565761085661129d565b908160218111156108695761086961129d565b815250506040518060400160405280600a81526020017f757361676554696d657300000000000000000000000000000000000000000000815250826004815181106108b6576108b6611573565b6020026020010181905250600a816004815181106108d6576108d6611573565b602002602001019060218111156108ef576108ef61129d565b908160218111156109025761090261129d565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806109c05750610991610a0f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6109cf3361093b565b610a05576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104568282610e27565b6000610a4f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ac4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610b6257600080fd5b505af1158015610b76573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610b9a906115a2565b80601f0160208091040260200160405190810160405280929190818152602001828054610bc6906115a2565b8015610c135780601f10610be857610100808354040283529160200191610c13565b820191906000526020600020905b815481529060010190602001808311610bf657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c8f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610d13906115a2565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d8c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104d681610ed5565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610dd091610f89565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b48565b60008281526001602090815260409091208251610e4692840190610fc3565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610e9f90859085906004016115f5565b600060405180830381600087803b158015610eb957600080fd5b505af1158015610ecd573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516104d6928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610f95906115a2565b6000825580601f10610fa5575050565b601f0160209004906000526020600020908101906104d69190611047565b828054610fcf906115a2565b90600052602060002090601f016020900481019282610ff15760008555611037565b82601f1061100a57805160ff1916838001178555611037565b82800160010185558215611037579182015b8281111561103757825182559160200191906001019061101c565b50611043929150611047565b5090565b5b808211156110435760008155600101611048565b60006020828403121561106e57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60ff811681146104d657600080fd5b67ffffffffffffffff811681146104d657600080fd5b63ffffffff811681146104d657600080fd5b60008082840360c08112156110ef57600080fd5b8335925060a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561112357600080fd5b5060405160a0810181811067ffffffffffffffff8211171561114757611147611075565b6040526020840135611158816110a4565b81526040840135611168816110a4565b6020820152606084013561117b816110b3565b6040820152608084013561118e816110b3565b606082015260a08401356111a1816110c9565b6080820152919491935090915050565b6020808252825182820181905260009190848201906040850190845b818110156111e9578351835292840192918401916001016111cd565b50909695505050505050565b60006020828403121561120757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461122b57600080fd5b9392505050565b6000815180845260005b818110156112585760208185018101518683018201520161123c565b8181111561126a576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611341577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261132f868351611232565b955093820193908201906001016112f5565b50508584038187015286518085528782019482019350915060005b828110156113af5784516022811061139d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161135c565b5091979650505050505050565b600082601f8301126113cd57600080fd5b813567ffffffffffffffff808211156113e8576113e8611075565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561142e5761142e611075565b8160405283815286602085880101111561144757600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561147a57600080fd5b82359150602083013567ffffffffffffffff81111561149857600080fd5b6114a4858286016113bc565b9150509250929050565b6000602082840312156114c057600080fd5b813567ffffffffffffffff8111156114d757600080fd5b6114e3848285016113bc565b949350505050565b60208152600061122b6020830184611232565b600080600080600060a0868803121561151657600080fd5b8551611521816110a4565b6020870151909550611532816110a4565b6040870151909450611543816110b3565b6060870151909350611554816110b3565b6080870151909250611565816110c9565b809150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806115b657607f821691505b6020821081036115ef577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006114e3604083018461123256fea2646970667358221220aca1a1a1cc6731a2cefd29b30b5483b63e4fff054de0f2b27674c8a43caec8f864736f6c634300080d0033";

type Treasurev2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Treasurev2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasurev2Component__factory extends ContractFactory {
  constructor(...args: Treasurev2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Treasurev2Component> {
    return super.deploy(world, overrides || {}) as Promise<Treasurev2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): Treasurev2Component {
    return super.attach(address) as Treasurev2Component;
  }
  override connect(signer: Signer): Treasurev2Component__factory {
    return super.connect(signer) as Treasurev2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Treasurev2ComponentInterface {
    return new utils.Interface(_abi) as Treasurev2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasurev2Component {
    return new Contract(address, _abi, signerOrProvider) as Treasurev2Component;
  }
}
