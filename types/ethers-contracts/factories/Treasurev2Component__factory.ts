/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  Treasurev2Component,
  Treasurev2ComponentInterface,
} from "../Treasurev2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "cooldownTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "range",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "usageTimes",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "energy",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "APCost",
            type: "uint64",
          },
        ],
        internalType: "struct Treasure",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "cooldownTime",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "range",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "usageTimes",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "energy",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "APCost",
            type: "uint64",
          },
        ],
        internalType: "struct Treasure",
        name: "treasure",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ddb38038062001ddb833981016040819052620000349162000200565b807f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e116662000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000fd41760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000fd41760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611b9980620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638b282947146102455780638da5cb5b146102585780639d2c76b414610260578063af640d0f1461027357600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101f957806375c0669c1461020f578063861eb9051461022257600080fd5b80634cc82215146101d35780634fef6a38146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a957806334ff82df146101be575b600080fd5b61014e61014936600461129b565b6102f6565b60405161015b919061132e565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103d0565b60405161015b9190611424565b6101d16101cc366004611609565b610404565b005b6101d16101e136600461129b565b610466565b6101d16101f4366004611721565b6104b1565b61020161058f565b60405161015b92919061178d565b6101d161021d366004611721565b610b48565b610235610230366004611721565b610b7a565b604051901515815260200161015b565b6101d161025336600461187d565b610c05565b610184610c4e565b6101d161026e366004611721565b610c93565b61027c60025481565b60405190815260200161015b565b6101b16102983660046118c4565b6103d0565b6102b06102ab36600461129b565b610dbc565b60405161015b9190611901565b6101d16102cb366004611721565b610e5e565b6102356102de36600461129b565b610f39565b6101d16102f1366004611721565b610f5b565b6040805161012081018252606080825260208201819052600092820183905281018290526080810182905260a0810182905260c0810182905260e0810182905261010081018290529080808080808080806103508b610dbc565b806020019051810190610363919061196f565b6040805161012081018252998a5260208a019890985260ff9687169789019790975293909416606087015267ffffffffffffffff9182166080870152811660a086015263ffffffff90921660c0850152811660e0840152166101008201529b9a5050505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046282826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a610100015160405160200161044e99989796959493929190611a4d565b604051602081830303815290604052610c05565b5050565b61046f33610b7a565b6104a5576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ae81610ff8565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610521576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b60608152602001906001900390816105ab575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600481526020017f6e616d65000000000000000000000000000000000000000000000000000000008152508260008151811061062d5761062d611ac8565b6020026020010181905250600f8160008151811061064d5761064d611ac8565b602002602001019060218111156106665761066661175e565b908160218111156106795761067961175e565b815250506040518060400160405280600581526020017f6173736574000000000000000000000000000000000000000000000000000000815250826001815181106106c6576106c6611ac8565b6020026020010181905250600f816001815181106106e6576106e6611ac8565b602002602001019060218111156106ff576106ff61175e565b908160218111156107125761071261175e565b815250506040518060400160405280600781526020017f7573654d6f6465000000000000000000000000000000000000000000000000008152508260028151811061075f5761075f611ac8565b602002602001018190525060088160028151811061077f5761077f611ac8565b602002602001019060218111156107985761079861175e565b908160218111156107ab576107ab61175e565b815250506040518060400160405280600781526020017f6869744d6f646500000000000000000000000000000000000000000000000000815250826003815181106107f8576107f8611ac8565b602002602001018190525060088160038151811061081857610818611ac8565b602002602001019060218111156108315761083161175e565b908160218111156108445761084461175e565b815250506040518060400160405280600c81526020017f636f6f6c646f776e54696d6500000000000000000000000000000000000000008152508260048151811061089157610891611ac8565b6020026020010181905250600b816004815181106108b1576108b1611ac8565b602002602001019060218111156108ca576108ca61175e565b908160218111156108dd576108dd61175e565b815250506040518060400160405280600581526020017f72616e67650000000000000000000000000000000000000000000000000000008152508260058151811061092a5761092a611ac8565b6020026020010181905250600b8160058151811061094a5761094a611ac8565b602002602001019060218111156109635761096361175e565b908160218111156109765761097661175e565b815250506040518060400160405280600a81526020017f757361676554696d657300000000000000000000000000000000000000000000815250826006815181106109c3576109c3611ac8565b6020026020010181905250600a816006815181106109e3576109e3611ac8565b602002602001019060218111156109fc576109fc61175e565b90816021811115610a0f57610a0f61175e565b815250506040518060400160405280600681526020017f656e65726779000000000000000000000000000000000000000000000000000081525082600781518110610a5c57610a5c611ac8565b6020026020010181905250600b81600781518110610a7c57610a7c611ac8565b60200260200101906021811115610a9557610a9561175e565b90816021811115610aa857610aa861175e565b815250506040518060400160405280600681526020017f4150436f7374000000000000000000000000000000000000000000000000000081525082600881518110610af557610af5611ac8565b6020026020010181905250600b81600881518110610b1557610b15611ac8565b60200260200101906021811115610b2e57610b2e61175e565b90816021811115610b4157610b4161175e565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610bff5750610bd0610c4e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610c0e33610b7a565b610c44576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104628282611066565b6000610c8e7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d03576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610dd990611af7565b80601f0160208091040260200160405190810160405280929190818152602001828054610e0590611af7565b8015610e525780601f10610e2757610100808354040283529160200191610e52565b820191906000526020600020905b815481529060010190602001808311610e3557829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ece576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610f5290611af7565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610fcb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104ae81611114565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600081815260016020526040812061100f916111c8565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610d87565b6000828152600160209081526040909120825161108592840190611202565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110de9085908590600401611b4a565b600060405180830381600087803b1580156110f857600080fd5b505af115801561110c573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516104ae928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546111d490611af7565b6000825580601f106111e4575050565b601f0160209004906000526020600020908101906104ae9190611286565b82805461120e90611af7565b90600052602060002090601f0160209004810192826112305760008555611276565b82601f1061124957805160ff1916838001178555611276565b82800160010185558215611276579182015b8281111561127657825182559160200191906001019061125b565b50611282929150611286565b5090565b5b808211156112825760008155600101611287565b6000602082840312156112ad57600080fd5b5035919050565b60005b838110156112cf5781810151838201526020016112b7565b838111156112de576000848401525b50505050565b600081518084526112fc8160208601602086016112b4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000825161012080602085015261134d6101408501836112e4565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe085840301604086015261138883826112e4565b925050604085015161139f606086018260ff169052565b50606085015160ff8116608086015250608085015167ffffffffffffffff811660a08601525060a085015167ffffffffffffffff811660c08601525060c085015163ffffffff811660e08601525060e085015161010061140a8187018367ffffffffffffffff169052565b9095015167ffffffffffffffff1693019290925250919050565b6020808252825182820181905260009190848201906040850190845b8181101561145c57835183529284019291840191600101611440565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156114bb576114bb611468565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561150857611508611468565b604052919050565b600067ffffffffffffffff82111561152a5761152a611468565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261156757600080fd5b813561157a61157582611510565b6114c1565b81815284602083860101111561158f57600080fd5b816020850160208301376000918101602001919091529392505050565b60ff811681146104ae57600080fd5b80356115c6816115ac565b919050565b67ffffffffffffffff811681146104ae57600080fd5b80356115c6816115cb565b63ffffffff811681146104ae57600080fd5b80356115c6816115ec565b6000806040838503121561161c57600080fd5b82359150602083013567ffffffffffffffff8082111561163b57600080fd5b90840190610120828703121561165057600080fd5b611658611497565b82358281111561166757600080fd5b61167388828601611556565b82525060208301358281111561168857600080fd5b61169488828601611556565b6020830152506116a6604084016115bb565b60408201526116b7606084016115bb565b60608201526116c8608084016115e1565b60808201526116d960a084016115e1565b60a08201526116ea60c084016115fe565b60c08201526116fb60e084016115e1565b60e082015261010091506117108284016115e1565b828201528093505050509250929050565b60006020828403121561173357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461175757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611802577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117f08683516112e4565b955093820193908201906001016117b6565b50508584038187015286518085528782019482019350915060005b828110156118705784516022811061185e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161181d565b5091979650505050505050565b6000806040838503121561189057600080fd5b82359150602083013567ffffffffffffffff8111156118ae57600080fd5b6118ba85828601611556565b9150509250929050565b6000602082840312156118d657600080fd5b813567ffffffffffffffff8111156118ed57600080fd5b6118f984828501611556565b949350505050565b60208152600061175760208301846112e4565b600082601f83011261192557600080fd5b815161193361157582611510565b81815284602083860101111561194857600080fd5b6118f98260208301602087016112b4565b80516115c6816115cb565b80516115c6816115ec565b60008060008060008060008060006101208a8c03121561198e57600080fd5b895167ffffffffffffffff808211156119a657600080fd5b6119b28d838e01611914565b9a5060208c01519150808211156119c857600080fd5b506119d58c828d01611914565b98505060408a01516119e6816115ac565b60608b01519097506119f7816115ac565b9550611a0560808b01611959565b9450611a1360a08b01611959565b9350611a2160c08b01611964565b9250611a2f60e08b01611959565b9150611a3e6101008b01611959565b90509295985092959850929598565b6000610120808352611a618184018d6112e4565b90508281036020840152611a75818c6112e4565b60ff9a8b1660408501529890991660608301525067ffffffffffffffff958616608082015293851660a085015263ffffffff9290921660c0840152831660e0830152909116610100909101529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611b0b57607f821691505b602082108103611b44577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006118f960408301846112e456fea26469706673582212202a2892770a7f6a4ecd7534edf98c9f06d6b5f2271fb9ba28ec1b2a1caad1e58b64736f6c634300080d0033";

type Treasurev2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Treasurev2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Treasurev2Component__factory extends ContractFactory {
  constructor(...args: Treasurev2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Treasurev2Component> {
    return super.deploy(world, overrides || {}) as Promise<Treasurev2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): Treasurev2Component {
    return super.attach(address) as Treasurev2Component;
  }
  override connect(signer: Signer): Treasurev2Component__factory {
    return super.connect(signer) as Treasurev2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Treasurev2ComponentInterface {
    return new utils.Interface(_abi) as Treasurev2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Treasurev2Component {
    return new Contract(address, _abi, signerOrProvider) as Treasurev2Component;
  }
}
