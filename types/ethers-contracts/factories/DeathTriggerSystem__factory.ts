/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DeathTriggerSystem,
  DeathTriggerSystemInterface,
} from "../DeathTriggerSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "component",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entity",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "lastValue",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "newValue",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSet",
            type: "bool",
          },
        ],
        internalType: "struct TriggerInfo",
        name: "triggerInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "component",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "entity",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "lastValue",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "newValue",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isSet",
            type: "bool",
          },
        ],
        internalType: "struct TriggerInfo",
        name: "triggerInfo",
        type: "tuple",
      },
    ],
    name: "solveLogic",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620025d0380380620025d0833981016040819052620000349162000230565b81818181620000433362000113565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200026f565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000107919062000187602090811b620006af17901c565b50505050505062000296565b60006200012a620001f360201b620007401760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022d57600080fd5b50565b600080604083850312156200024457600080fd5b8251620002518162000217565b6020840151909250620002648162000217565b809150509250929050565b6000602082840312156200028257600080fd5b81516200028f8162000217565b9392505050565b61232a80620002a66000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638da5cb5b116100505780638da5cb5b146100a8578063f2fde38b146100d5578063ffc56da8146100ea57600080fd5b806309c5eabe1461006c57806382781c5114610095575b600080fd5b61007f61007a366004611e32565b6100fd565b60405161008c9190611ee1565b60405180910390f35b61007f6100a3366004611f02565b610127565b6100b0610138565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008c565b6100e86100e3366004611fbe565b61017d565b005b61007f6100f8366004611f02565b6101f9565b60606000828060200190518101906101159190612039565b905061012081610127565b9392505050565b6060610132826101f9565b92915050565b60006101787f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101ed576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101f681610764565b50565b60208101518151606091907f6c062316985e8e531501d3a588aed06abfad54c545ae238fe2d6f51a6ab9bee814610291576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f696e76616c696420736f7572636500000000000000000000000000000000000060448201526064015b60405180910390fd5b600061029c8261076d565b60008054919250906102e49073ffffffffffffffffffffffffffffffffffffffff167f0f2f1f89defcb2e35e7a49b75f5a0777c977a6210b31a42137e9620ef524f0dc610b05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610352573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037691906120e5565b156103fc576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b1580156103e357600080fd5b505af11580156103f7573d6000803e3d6000fd5b505050505b60006104088484610c51565b9050600083600381111561041e5761041e612102565b148061043b5750600183600381111561043957610439612102565b145b1561065d576000546104839073ffffffffffffffffffffffffffffffffffffffff167f0fd0c4340ea6c23174503a3e744a0c8882692af1d558bb4c6011a6c4cc305e38610b05565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018690526024810183905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156104f457600080fd5b505af1158015610508573d6000803e3d6000fd5b5060019250610515915050565b83600381111561052757610527612102565b036105e05760005461056f9073ffffffffffffffffffffffffffffffffffffffff167fe4af7d078f0416d6a9c8ce349a9162a49906513a833c27b4042ca87d9640cd68610b05565b73ffffffffffffffffffffffffffffffffffffffff166360fe47b1856040518263ffffffff1660e01b81526004016105a991815260200190565b600060405180830381600087803b1580156105c357600080fd5b505af11580156105d7573d6000803e3d6000fd5b505050506106a6565b6000546106239073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610b05565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215856040518263ffffffff1660e01b81526004016105a991815260200190565b600283600381111561067157610671612102565b036106845761067f84610f57565b6106a6565b600383600381111561069857610698612102565b036106a6576106a68461167c565b50505050919050565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6101f681611c43565b6000805481906107b39073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610b05565b60008054919250906107fb9073ffffffffffffffffffffffffffffffffffffffff167f47847aa6dad6656997b23b837b7a178fcf6ee815ad8065af73bc07856277a776610b05565b60008054919250906108439073ffffffffffffffffffffffffffffffffffffffff167f84597150db3a8cb31c3f847642911238944cee9a3b5f1ab47777bca06e6660e3610b05565b600080549192509061088b9073ffffffffffffffffffffffffffffffffffffffff167f3a491e792f21d1dfbaf5fe3e6a9453e90f9d0e1e3bab4ac6e371ac1ed485393f610b05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff85169063cccf7a8e90602401602060405180830381865afa1580156108f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061091d91906120e5565b1561092b57600094506106a6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610996573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ba91906120e5565b156109c857600194506106a6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5791906120e5565b15610a6557600294506106a6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610ad0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af491906120e5565b156106a65750600395945050505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610b75573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bbb9190810190612131565b90508051600003610c28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610288565b610c4981600081518110610c3e57610c3e6121d7565b602002602001015190565b949350505050565b600080548190610c979073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e427610b05565b6000805491925090610cdf9073ffffffffffffffffffffffffffffffffffffffff167fe84ae06d0531147bba573e3e5c6876c59c1ba9645cd7e87eb5141ca18dcfd284610b05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa158015610d4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7191906120e5565b15610f4f576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610de1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e059190612206565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905290935073ffffffffffffffffffffffffffffffffffffffff831690634cc8221590602401600060405180830381600087803b158015610e7057600080fd5b505af1158015610e84573d6000803e3d6000fd5b50506040805160808101825260049181019182527f6465616400000000000000000000000000000000000000000000000000000000606082015290815273ffffffffffffffffffffffffffffffffffffffff84169250639a8536609150859060208101610ef242600a61224e565b67ffffffffffffffff168152506040518363ffffffff1660e01b8152600401610f1c92919061227a565b600060405180830381600087803b158015610f3657600080fd5b505af1158015610f4a573d6000803e3d6000fd5b505050505b505092915050565b60008054610f9b9073ffffffffffffffffffffffffffffffffffffffff167f4cf8575af513e85e971e8168543790c67a13325a2b9e58a3f87c5e536c104555610b05565b6000805491925090610fe39073ffffffffffffffffffffffffffffffffffffffff167fd9e2f71f1c0fd7743790b23350e1eeb0e1f215b8c9cca3840f01714025e512ab610b05565b600080549192509061102b9073ffffffffffffffffffffffffffffffffffffffff167fb2f4b867fdd5a4cac8059e8bc8d57112bd34bdb7a3ba070121dac5abc83cdf3b610b05565b60008054919250906110739073ffffffffffffffffffffffffffffffffffffffff167f56a4848d3af309f22949f76908807d066074a6d477ee656c4054ee542fd08475610b05565b60008054919250906110bb9073ffffffffffffffffffffffffffffffffffffffff167f84597150db3a8cb31c3f847642911238944cee9a3b5f1ab47777bca06e6660e3610b05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa158015611129573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061114d91906120e5565b156111d3576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b1580156111ba57600080fd5b505af11580156111ce573d6000803e3d6000fd5b505050505b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b15801561123b57600080fd5b505af115801561124f573d6000803e3d6000fd5b50506040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff8716925063cccf7a8e9150602401602060405180830381865afa1580156112be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e291906120e5565b15611368576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff851690634cc8221590602401600060405180830381600087803b15801561134f57600080fd5b505af1158015611363573d6000803e3d6000fd5b505050505b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810187905260009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa1580156113d6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261141c9190810190612131565b905060005b815181101561167257600082828151811061143e5761143e6121d7565b602002602001015190508573ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b815260040161148391815260200190565b602060405180830381865afa1580156114a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114c491906120e5565b1561154a576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff871690634cc8221590602401600060405180830381600087803b15801561153157600080fd5b505af1158015611545573d6000803e3d6000fd5b505050505b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa1580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d991906120e5565b1561165f576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b15801561164657600080fd5b505af115801561165a573d6000803e3d6000fd5b505050505b508061166a816122bc565b915050611421565b5050505050505050565b600080546116c09073ffffffffffffffffffffffffffffffffffffffff167f3a491e792f21d1dfbaf5fe3e6a9453e90f9d0e1e3bab4ac6e371ac1ed485393f610b05565b60008054919250906117089073ffffffffffffffffffffffffffffffffffffffff167f4c72609ffe767189426b756bdb4b34d206c9d4f7f58880d1cb7b77186b764765610b05565b60008054919250906117509073ffffffffffffffffffffffffffffffffffffffff167fa25d1e63f0e4f319cc626350346fd351279a4087ff185698c3e632cef078c7f9610b05565b60008054919250906117989073ffffffffffffffffffffffffffffffffffffffff167fb88588d8fec752d1ccdaad27c5bbc03a1851f8687c806717617134354a8a7cd6610b05565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff851690634cc8221590602401600060405180830381600087803b15801561180357600080fd5b505af1158015611817573d6000803e3d6000fd5b50506040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff8416925063cccf7a8e9150602401602060405180830381865afa158015611886573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118aa91906120e5565b15611930576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b15801561191757600080fd5b505af115801561192b573d6000803e3d6000fd5b505050505b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa15801561199e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526119e49190810190612131565b905060005b8151811015611c3a576000828281518110611a0657611a066121d7565b602002602001015190508573ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b8152600401611a4b91815260200190565b602060405180830381865afa158015611a68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a8c91906120e5565b15611b12576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff871690634cc8221590602401600060405180830381600087803b158015611af957600080fd5b505af1158015611b0d573d6000803e3d6000fd5b505050505b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa158015611b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ba191906120e5565b15611c27576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b158015611c0e57600080fd5b505af1158015611c22573d6000803e3d6000fd5b505050505b5080611c32816122bc565b9150506119e9565b50505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715611d4157611d41611cef565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611d8e57611d8e611cef565b604052919050565b600067ffffffffffffffff821115611db057611db0611cef565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f830112611ded57600080fd5b8135611e00611dfb82611d96565b611d47565b818152846020838601011115611e1557600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215611e4457600080fd5b813567ffffffffffffffff811115611e5b57600080fd5b610c4984828501611ddc565b60005b83811015611e82578181015183820152602001611e6a565b83811115611e91576000848401525b50505050565b60008151808452611eaf816020860160208601611e67565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006101206020830184611e97565b80151581146101f657600080fd5b600060208284031215611f1457600080fd5b813567ffffffffffffffff80821115611f2c57600080fd5b9083019060a08286031215611f4057600080fd5b611f48611d1e565b8235815260208301356020820152604083013582811115611f6857600080fd5b611f7487828601611ddc565b604083015250606083013582811115611f8c57600080fd5b611f9887828601611ddc565b60608301525060808301359250611fae83611ef4565b6080810192909252509392505050565b600060208284031215611fd057600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461012057600080fd5b600082601f83011261200557600080fd5b8151612013611dfb82611d96565b81815284602083860101111561202857600080fd5b610c49826020830160208701611e67565b60006020828403121561204b57600080fd5b815167ffffffffffffffff8082111561206357600080fd5b9083019060a0828603121561207757600080fd5b61207f611d1e565b825181526020830151602082015260408301518281111561209f57600080fd5b6120ab87828601611ff4565b6040830152506060830151828111156120c357600080fd5b6120cf87828601611ff4565b60608301525060808301519250611fae83611ef4565b6000602082840312156120f757600080fd5b815161012081611ef4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000602080838503121561214457600080fd5b825167ffffffffffffffff8082111561215c57600080fd5b818501915085601f83011261217057600080fd5b81518181111561218257612182611cef565b8060051b9150612193848301611d47565b81815291830184019184810190888411156121ad57600080fd5b938501935b838510156121cb578451825293850193908501906121b2565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561221857600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8083168185168083038211156122715761227161221f565b01949350505050565b828152604060208201526000825160408084015261229b6080840182611e97565b905067ffffffffffffffff6020850151166060840152809150509392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122ed576122ed61221f565b506001019056fea2646970667358221220fd0c2b93581e1f42627acab628e738e457b4e39f79eda97161c647d69ba605da64736f6c634300080d0033";

type DeathTriggerSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeathTriggerSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeathTriggerSystem__factory extends ContractFactory {
  constructor(...args: DeathTriggerSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeathTriggerSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DeathTriggerSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DeathTriggerSystem {
    return super.attach(address) as DeathTriggerSystem;
  }
  override connect(signer: Signer): DeathTriggerSystem__factory {
    return super.connect(signer) as DeathTriggerSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeathTriggerSystemInterface {
    return new utils.Interface(_abi) as DeathTriggerSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeathTriggerSystem {
    return new Contract(address, _abi, signerOrProvider) as DeathTriggerSystem;
  }
}
