/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ChargeAirdropTreasureSystem,
  ChargeAirdropTreasureSystemInterface,
} from "../ChargeAirdropTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "target",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
        ],
        internalType: "struct ChargeTreasureInfo",
        name: "chargeTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f1838038062001f1883398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000d2e17901c565b5050505062000292565b600062000126620001ef60201b62000dbf1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611c7680620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063087581451461005157806309c5eabe1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046113b9565b6100cf565b6040516100719190611448565b60405180910390f35b6100646100883660046114df565b610c43565b610095610c6d565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611581565b610cb2565b005b60005460609033906101179073ffffffffffffffffffffffffffffffffffffffff167f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610de3565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b815260040161015191815260200190565b602060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019291906115b3565b156101fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4368617267696e6700000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6020830151600054610226919073ffffffffffffffffffffffffffffffffffffffff16610f31565b61028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f706f736974696f6e20696e76616c69640000000000000000000000000000000060448201526064016101f5565b60408301516000546102b4919073ffffffffffffffffffffffffffffffffffffffff16610f31565b61031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f74617267657420696e76616c696400000000000000000000000000000000000060448201526064016101f5565b6000805461035e9073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610de3565b60008054919250906103a69073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610de3565b85516040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff84169163cccf7a8e916103ff9160040190815260200190565b602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044091906115b3565b80156104e2575084516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152849173ffffffffffffffffffffffffffffffffffffffff851691630ff4c9169161049f9160040190815260200190565b602060405180830381865afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e091906115ce565b145b801561057b575084516040517fcccf7a8e000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906115b3565b6105e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064016101f5565b84516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff841691630ff4c9169161063a9160040190815260200190565b600060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261069d9190810190611668565b9050806040015160ff1660011480156106bd5750806060015160ff166001145b610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064016101f5565b600080546107679073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610de3565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611760565b90504267ffffffffffffffff16816000015167ffffffffffffffff1610801561083e57504267ffffffffffffffff16816020015167ffffffffffffffff16105b6108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016101f5565b600080546108e89073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610de3565b89516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098091906117bb565b6000549091506109c69073ffffffffffffffffffffffffffffffffffffffff167f915b9013cb57c89a9ed47dbf9cd774d6adef7fa66a81e809a6631176d4a23768610de3565b8a51604080518082018252818e015151815260208581015163ffffffff169082015290517fdf49b42100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263df49b42192610a3b929091600401611824565b600060405180830381600087803b158015610a5557600080fd5b505af1158015610a69573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634e6641a98b600001516040518060400160405280896080015142610aa9919061184c565b67ffffffffffffffff168152602001896080015142610ac8919061184c565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b158015610b3d57600080fd5b505af1158015610b51573d6000803e3d6000fd5b5050600054610b99925073ffffffffffffffffffffffffffffffffffffffff1690507f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610de3565b73ffffffffffffffffffffffffffffffffffffffff1663df49b4218960405180604001604052808e600001518152602001896080015142610bda919061184c565b67ffffffffffffffff168152506040518363ffffffff1660e01b8152600401610c04929190611824565b600060405180830381600087803b158015610c1e57600080fd5b505af1158015610c32573d6000803e3d6000fd5b505050505050505050505050919050565b6060600082806020019051810190610c5b919061199e565b9050610c66816100cf565b9392505050565b6000610cad7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d22576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d2b816110c7565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e53573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e9991908101906119f1565b90508051600003610f06576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101f5565b610f2781600081518110610f1c57610f1c611a97565b602002602001015190565b9150505b92915050565b600080610f5e837fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610de3565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161014060405180830381865afa158015610fa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcd9190611ad1565b8051909150156110c0576040805160a080820183528651825260208088015190830152868301518284015260608088015190830152608080880151908301526101208401519087015160c088015160e089015194517f34baeab9000000000000000000000000000000000000000000000000000000008152939473ffffffffffffffffffffffffffffffffffffffff909316936334baeab9936110769392918790600401611bbc565b602060405180830381865afa158015611093573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b791906115b3565b92505050610f2b565b5092915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610d2b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156111ce576111ce61117b565b60405290565b6040516080810167ffffffffffffffff811182821017156111ce576111ce61117b565b604051610140810167ffffffffffffffff811182821017156111ce576111ce61117b565b6040805190810167ffffffffffffffff811182821017156111ce576111ce61117b565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112855761128561117b565b604052919050565b600082601f83011261129e57600080fd5b6112a661121b565b8060408401858111156112b857600080fd5b845b818110156112d25780358452602093840193016112ba565b509095945050505050565b60006101a082840312156112f057600080fd5b6112f86111aa565b905081358152602080830135818301526040808401358184015260608401356060840152608084013560808401526113338560a0860161128d565b60a08401528460ff85011261134757600080fd5b61134f61121b565b8061016086018781111561136257600080fd5b60e087015b8181101561138657611379898261128d565b8452928501928401611367565b508160c0870152611397888261128d565b60e0870152505050505092915050565b63ffffffff81168114610d2b57600080fd5b600061038082840312156113cc57600080fd5b6113d46111d4565b823581526113e584602085016112dd565b60208201526113f8846101c085016112dd565b604082015261036083013561140c816113a7565b60608201529392505050565b60005b8381101561143357818101518382015260200161141b565b83811115611442576000848401525b50505050565b6020815260008251806020840152611467816040850160208701611418565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600067ffffffffffffffff8211156114b3576114b361117b565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156114f157600080fd5b813567ffffffffffffffff81111561150857600080fd5b8201601f8101841361151957600080fd5b803561152c61152782611499565b61123e565b81815285602083850101111561154157600080fd5b81602084016020830137600091810160200191909152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d2b57600080fd5b60006020828403121561159357600080fd5b8135610c668161155f565b805180151581146115ae57600080fd5b919050565b6000602082840312156115c557600080fd5b610c668261159e565b6000602082840312156115e057600080fd5b5051919050565b600082601f8301126115f857600080fd5b815161160661152782611499565b81815284602083860101111561161b57600080fd5b61162c826020830160208701611418565b949350505050565b805160ff811681146115ae57600080fd5b805167ffffffffffffffff811681146115ae57600080fd5b80516115ae816113a7565b60006020828403121561167a57600080fd5b815167ffffffffffffffff8082111561169257600080fd5b9083019061010082860312156116a757600080fd5b6116af6111aa565b8251828111156116be57600080fd5b6116ca878286016115e7565b8252506020830151828111156116df57600080fd5b6116eb878286016115e7565b6020830152506116fd60408401611634565b604082015261170e60608401611634565b606082015261171f60808401611645565b608082015261173060a08401611645565b60a082015261174160c0840161165d565b60c082015261175260e08401611645565b60e082015295945050505050565b60006040828403121561177257600080fd5b6040516040810181811067ffffffffffffffff821117156117955761179561117b565b6040526117a183611645565b81526117af60208401611645565b60208201529392505050565b6000606082840312156117cd57600080fd5b6040516060810181811067ffffffffffffffff821117156117f0576117f061117b565b604052825181526020830151611805816113a7565b60208201526040830151611818816113a7565b60408201529392505050565b82815260608101610c6660208301848051825260209081015167ffffffffffffffff16910152565b600067ffffffffffffffff808316818516808303821115611896577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01949350505050565b600082601f8301126118b057600080fd5b6118b861121b565b8060408401858111156118ca57600080fd5b845b818110156112d25780518452602093840193016118cc565b60006101a082840312156118f757600080fd5b6118ff6111aa565b9050815181526020808301518183015260408084015181840152606084015160608401526080840151608084015261193a8560a0860161189f565b60a08401528460ff85011261194e57600080fd5b61195661121b565b8061016086018781111561196957600080fd5b60e087015b8181101561198d57611980898261189f565b845292850192840161196e565b508160c0870152611397888261189f565b600061038082840312156119b157600080fd5b6119b96111d4565b825181526119ca84602085016118e4565b60208201526119dd846101c085016118e4565b604082015261036083015161140c816113a7565b60006020808385031215611a0457600080fd5b825167ffffffffffffffff80821115611a1c57600080fd5b818501915085601f830112611a3057600080fd5b815181811115611a4257611a4261117b565b8060051b9150611a5384830161123e565b8181529183018401918481019088841115611a6d57600080fd5b938501935b83851015611a8b57845182529385019390850190611a72565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80516115ae8161155f565b60006101408284031215611ae457600080fd5b611aec6111f7565b611af58361159e565b8152611b0360208401611ac6565b6020820152611b1460408401611ac6565b6040820152611b2560608401611ac6565b6060820152611b3660808401611ac6565b6080820152611b4760a08401611ac6565b60a0820152611b5860c08401611ac6565b60c0820152611b6960e08401611ac6565b60e0820152610100611b7c818501611ac6565b90820152610120611b8e848201611ac6565b908201529392505050565b8060005b6002811015611442578151845260209384019390910190600101611b9d565b6101a08101611bcb8287611b99565b60408083018660005b6002811015611bfb57611be8838351611b99565b9183019160209190910190600101611bd4565b50505050611c0c60c0830185611b99565b61010082018360005b6005811015611c34578151835260209283019290910190600101611c15565b5050509594505050505056fea264697066735822122075a598f0d6bf9f9c30afc89910f34ecfa2f931fb9b9ac307c8d809319c1667be64736f6c634300080d0033";

type ChargeAirdropTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeAirdropTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeAirdropTreasureSystem__factory extends ContractFactory {
  constructor(...args: ChargeAirdropTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeAirdropTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ChargeAirdropTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ChargeAirdropTreasureSystem {
    return super.attach(address) as ChargeAirdropTreasureSystem;
  }
  override connect(signer: Signer): ChargeAirdropTreasureSystem__factory {
    return super.connect(signer) as ChargeAirdropTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeAirdropTreasureSystemInterface {
    return new utils.Interface(_abi) as ChargeAirdropTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeAirdropTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChargeAirdropTreasureSystem;
  }
}
