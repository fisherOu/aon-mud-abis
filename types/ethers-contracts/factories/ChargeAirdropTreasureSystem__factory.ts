/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ChargeAirdropTreasureSystem,
  ChargeAirdropTreasureSystemInterface,
} from "../ChargeAirdropTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "position",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "target",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
        ],
        internalType: "struct ChargeTreasureInfo",
        name: "chargeTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f1038038062001f1083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000d2617901c565b5050505062000292565b600062000126620001ef60201b62000db71760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611c6e80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063087581451461005157806309c5eabe1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046113b1565b6100cf565b6040516100719190611440565b60405180910390f35b6100646100883660046114d7565b610c3b565b610095610c65565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611579565b610caa565b005b60005460609033906101179073ffffffffffffffffffffffffffffffffffffffff167f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610ddb565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b815260040161015191815260200190565b602060405180830381865afa15801561016e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019291906115ab565b156101fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4368617267696e6700000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6020830151600054610226919073ffffffffffffffffffffffffffffffffffffffff16610f29565b61028c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f706f736974696f6e20696e76616c69640000000000000000000000000000000060448201526064016101f5565b60408301516000546102b4919073ffffffffffffffffffffffffffffffffffffffff16610f29565b61031a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f74617267657420696e76616c696400000000000000000000000000000000000060448201526064016101f5565b6000805461035e9073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610ddb565b60008054919250906103a69073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610ddb565b85516040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff84169163cccf7a8e916103ff9160040190815260200190565b602060405180830381865afa15801561041c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044091906115ab565b80156104e2575084516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152849173ffffffffffffffffffffffffffffffffffffffff851691630ff4c9169161049f9160040190815260200190565b602060405180830381865afa1580156104bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e091906115c6565b145b801561057b575084516040517fcccf7a8e000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610557573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057b91906115ab565b6105e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064016101f5565b84516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff841691630ff4c9169161063a9160040190815260200190565b600060405180830381865afa158015610657573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261069d9190810190611660565b9050806040015160ff1660011480156106bd5750806060015160ff166001145b610723576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064016101f5565b600080546107679073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610ddb565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156107da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fe9190611758565b90504267ffffffffffffffff16816000015167ffffffffffffffff1610801561083e57504267ffffffffffffffff16816020015167ffffffffffffffff16105b6108a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016101f5565b600080546108e89073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610ddb565b89516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098091906117b3565b6000549091506109c69073ffffffffffffffffffffffffffffffffffffffff167f915b9013cb57c89a9ed47dbf9cd774d6adef7fa66a81e809a6631176d4a23768610ddb565b8a51604080518082018252818e015151815260208581015163ffffffff169082015290517fdf49b42100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263df49b42192610a3b92909160040161181c565b600060405180830381600087803b158015610a5557600080fd5b505af1158015610a69573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634e6641a98b600001516040518060400160405280896080015142610aa99190611844565b67ffffffffffffffff168152602001610ac342600a611844565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b158015610b3857600080fd5b505af1158015610b4c573d6000803e3d6000fd5b5050600054610b94925073ffffffffffffffffffffffffffffffffffffffff1690507f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610ddb565b73ffffffffffffffffffffffffffffffffffffffff1663df49b4218960405180604001604052808e60000151815260200142600a610bd29190611844565b67ffffffffffffffff168152506040518363ffffffff1660e01b8152600401610bfc92919061181c565b600060405180830381600087803b158015610c1657600080fd5b505af1158015610c2a573d6000803e3d6000fd5b505050505050505050505050919050565b6060600082806020019051810190610c539190611996565b9050610c5e816100cf565b9392505050565b6000610ca57f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d1a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d23816110bf565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e4b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e9191908101906119e9565b90508051600003610efe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101f5565b610f1f81600081518110610f1457610f14611a8f565b602002602001015190565b9150505b92915050565b600080610f56837fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610ddb565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161014060405180830381865afa158015610fa1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fc59190611ac9565b8051909150156110b8576040805160a080820183528651825260208088015190830152868301518284015260608088015190830152608080880151908301526101208401519087015160c088015160e089015194517f34baeab9000000000000000000000000000000000000000000000000000000008152939473ffffffffffffffffffffffffffffffffffffffff909316936334baeab99361106e9392918790600401611bb4565b602060405180830381865afa15801561108b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110af91906115ab565b92505050610f23565b5092915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610d23928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156111c6576111c6611173565b60405290565b6040516080810167ffffffffffffffff811182821017156111c6576111c6611173565b604051610140810167ffffffffffffffff811182821017156111c6576111c6611173565b6040805190810167ffffffffffffffff811182821017156111c6576111c6611173565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561127d5761127d611173565b604052919050565b600082601f83011261129657600080fd5b61129e611213565b8060408401858111156112b057600080fd5b845b818110156112ca5780358452602093840193016112b2565b509095945050505050565b60006101a082840312156112e857600080fd5b6112f06111a2565b9050813581526020808301358183015260408084013581840152606084013560608401526080840135608084015261132b8560a08601611285565b60a08401528460ff85011261133f57600080fd5b611347611213565b8061016086018781111561135a57600080fd5b60e087015b8181101561137e576113718982611285565b845292850192840161135f565b508160c087015261138f8882611285565b60e0870152505050505092915050565b63ffffffff81168114610d2357600080fd5b600061038082840312156113c457600080fd5b6113cc6111cc565b823581526113dd84602085016112d5565b60208201526113f0846101c085016112d5565b60408201526103608301356114048161139f565b60608201529392505050565b60005b8381101561142b578181015183820152602001611413565b8381111561143a576000848401525b50505050565b602081526000825180602084015261145f816040850160208701611410565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600067ffffffffffffffff8211156114ab576114ab611173565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156114e957600080fd5b813567ffffffffffffffff81111561150057600080fd5b8201601f8101841361151157600080fd5b803561152461151f82611491565b611236565b81815285602083850101111561153957600080fd5b81602084016020830137600091810160200191909152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d2357600080fd5b60006020828403121561158b57600080fd5b8135610c5e81611557565b805180151581146115a657600080fd5b919050565b6000602082840312156115bd57600080fd5b610c5e82611596565b6000602082840312156115d857600080fd5b5051919050565b600082601f8301126115f057600080fd5b81516115fe61151f82611491565b81815284602083860101111561161357600080fd5b611624826020830160208701611410565b949350505050565b805160ff811681146115a657600080fd5b805167ffffffffffffffff811681146115a657600080fd5b80516115a68161139f565b60006020828403121561167257600080fd5b815167ffffffffffffffff8082111561168a57600080fd5b90830190610100828603121561169f57600080fd5b6116a76111a2565b8251828111156116b657600080fd5b6116c2878286016115df565b8252506020830151828111156116d757600080fd5b6116e3878286016115df565b6020830152506116f56040840161162c565b60408201526117066060840161162c565b60608201526117176080840161163d565b608082015261172860a0840161163d565b60a082015261173960c08401611655565b60c082015261174a60e0840161163d565b60e082015295945050505050565b60006040828403121561176a57600080fd5b6040516040810181811067ffffffffffffffff8211171561178d5761178d611173565b6040526117998361163d565b81526117a76020840161163d565b60208201529392505050565b6000606082840312156117c557600080fd5b6040516060810181811067ffffffffffffffff821117156117e8576117e8611173565b6040528251815260208301516117fd8161139f565b602082015260408301516118108161139f565b60408201529392505050565b82815260608101610c5e60208301848051825260209081015167ffffffffffffffff16910152565b600067ffffffffffffffff80831681851680830382111561188e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01949350505050565b600082601f8301126118a857600080fd5b6118b0611213565b8060408401858111156118c257600080fd5b845b818110156112ca5780518452602093840193016118c4565b60006101a082840312156118ef57600080fd5b6118f76111a2565b905081518152602080830151818301526040808401518184015260608401516060840152608084015160808401526119328560a08601611897565b60a08401528460ff85011261194657600080fd5b61194e611213565b8061016086018781111561196157600080fd5b60e087015b81811015611985576119788982611897565b8452928501928401611966565b508160c087015261138f8882611897565b600061038082840312156119a957600080fd5b6119b16111cc565b825181526119c284602085016118dc565b60208201526119d5846101c085016118dc565b60408201526103608301516114048161139f565b600060208083850312156119fc57600080fd5b825167ffffffffffffffff80821115611a1457600080fd5b818501915085601f830112611a2857600080fd5b815181811115611a3a57611a3a611173565b8060051b9150611a4b848301611236565b8181529183018401918481019088841115611a6557600080fd5b938501935b83851015611a8357845182529385019390850190611a6a565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80516115a681611557565b60006101408284031215611adc57600080fd5b611ae46111ef565b611aed83611596565b8152611afb60208401611abe565b6020820152611b0c60408401611abe565b6040820152611b1d60608401611abe565b6060820152611b2e60808401611abe565b6080820152611b3f60a08401611abe565b60a0820152611b5060c08401611abe565b60c0820152611b6160e08401611abe565b60e0820152610100611b74818501611abe565b90820152610120611b86848201611abe565b908201529392505050565b8060005b600281101561143a578151845260209384019390910190600101611b95565b6101a08101611bc38287611b91565b60408083018660005b6002811015611bf357611be0838351611b91565b9183019160209190910190600101611bcc565b50505050611c0460c0830185611b91565b61010082018360005b6005811015611c2c578151835260209283019290910190600101611c0d565b5050509594505050505056fea264697066735822122003d4587c7c3019ced1f087c1c83bc0317242421c41914b932833e42b4ced678364736f6c634300080d0033";

type ChargeAirdropTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeAirdropTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeAirdropTreasureSystem__factory extends ContractFactory {
  constructor(...args: ChargeAirdropTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeAirdropTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ChargeAirdropTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ChargeAirdropTreasureSystem {
    return super.attach(address) as ChargeAirdropTreasureSystem;
  }
  override connect(signer: Signer): ChargeAirdropTreasureSystem__factory {
    return super.connect(signer) as ChargeAirdropTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeAirdropTreasureSystemInterface {
    return new utils.Interface(_abi) as ChargeAirdropTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeAirdropTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChargeAirdropTreasureSystem;
  }
}
