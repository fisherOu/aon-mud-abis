/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ReleaseLinearTreasureSystem,
  ReleaseLinearTreasureSystemInterface,
} from "../ReleaseLinearTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "area",
            type: "tuple[]",
          },
        ],
        internalType: "struct ReleaseTreasureInfo",
        name: "releaseTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020053803806200200583398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000df917901c565b5050505062000292565b600062000126620001ef60201b62000e8a1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611d6380620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780634370063e1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004611205565b6100cf565b60405161007191906112b5565b60405180910390f35b6100646100883660046114a9565b6100f9565b610095610d38565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611566565b610d7d565b005b60606000828060200190518101906100e791906116ea565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610eae565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190611776565b801561026e575083516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906117b5565b51145b801561030857506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101839052429073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030591906117b5565b51105b610373576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f74204368617267696e67000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546103b79073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610eae565b85516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c9169060240160c060405180830381865afa15801561042b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044f919061182e565b9050806000015160ff16600114801561046d5750602081015160ff16155b6104d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f64650000000000000000000000604482015260640161036a565b600080546105179073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610eae565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa15801561058b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105af91906118cd565b6000549091506105f59073ffffffffffffffffffffffffffffffffffffffff167fdc70892ae22810336b1b3e3970e52ce30e6bd067541740d764e72825b722b06c610eae565b88516040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691634cc822159161064d9160040190815260200190565b600060405180830381600087803b15801561066757600080fd5b505af115801561067b573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff88169250634cc822159150602401600060405180830381600087803b1580156106e757600080fd5b505af11580156106fb573d6000803e3d6000fd5b50505050610897600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561076f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107939190611932565b6000546107d69073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e381610eae565b83516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691630ff4c9169161082e9160040190815260200190565b600060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610891919081019061197f565b51610eae565b6040805160e0810182527f09a35426a75b1906dfdc8773646443045a37ca29da26e856b2460c19aa5195c7815260006020808301919091528183018a90528b5160608301528b015160808201528a82015160a08201528382015163ffffffff1660c082015290517f7e62c17a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691637e62c17a9161094d91600401611b39565b6000604051808303816000875af115801561096c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109b29190810190611bd8565b50826080015163ffffffff16600103610c2957600054610a089073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610eae565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215876040518263ffffffff1660e01b8152600401610a4291815260200190565b600060405180830381600087803b158015610a5c57600080fd5b505af1158015610a70573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b5050600054610b38925073ffffffffffffffffffffffffffffffffffffffff1690507f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610eae565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215876040518263ffffffff1660e01b8152600401610b7291815260200190565b600060405180830381600087803b158015610b8c57600080fd5b505af1158015610ba0573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff85169250634cc822159150602401600060405180830381600087803b158015610c0c57600080fd5b505af1158015610c20573d6000803e3d6000fd5b50505050610d2d565b6001836080015163ffffffff161115610d2d5760018360800151610c4d9190611c21565b63ffffffff908116608085019081528951604080517fa363c56f0000000000000000000000000000000000000000000000000000000081526004810192909252865160ff9081166024840152602088015116604483015286015167ffffffffffffffff9081166064830152606087015181166084830152915190921660a483015260a08501511660c482015273ffffffffffffffffffffffffffffffffffffffff85169063a363c56f9060e401600060405180830381600087803b158015610d1457600080fd5b505af1158015610d28573d6000803e3d6000fd5b505050505b505050505050919050565b6000610d787f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ded576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610df681610ffa565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610f1e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f649190810190611c6d565b90508051600003610fd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161036a565b610ff281600081518110610fe757610fe7611cfe565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610df6928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715611101576111016110ae565b60405290565b6040516060810167ffffffffffffffff81118282101715611101576111016110ae565b60405160c0810167ffffffffffffffff81118282101715611101576111016110ae565b6040805190810167ffffffffffffffff81118282101715611101576111016110ae565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111b7576111b76110ae565b604052919050565b600067ffffffffffffffff8211156111d9576111d96110ae565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561121757600080fd5b813567ffffffffffffffff81111561122e57600080fd5b8201601f8101841361123f57600080fd5b803561125261124d826111bf565b611170565b81815285602083850101111561126757600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156112a0578181015183820152602001611288565b838111156112af576000848401525b50505050565b60208152600082518060208401526112d4816040850160208701611285565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600067ffffffffffffffff821115611320576113206110ae565b5060051b60200190565b600082601f83011261133b57600080fd5b61134361114d565b80604084018581111561135557600080fd5b845b8181101561136f578035845260209384019301611357565b509095945050505050565b600082601f83011261138b57600080fd5b61139361114d565b8060808401858111156113a557600080fd5b845b8181101561136f576113b9878261132a565b84526020909301926040016113a7565b600082601f8301126113da57600080fd5b813560206113ea61124d83611306565b8281526101a0928302850182019282820191908785111561140a57600080fd5b8387015b8581101561149c5781818a0312156114265760008081fd5b61142e6110dd565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a06114668b82850161132a565b9082015260e06114788b84830161137a565b60c083015261148b8b610160850161132a565b90820152845292840192810161140e565b5090979650505050505050565b6000602082840312156114bb57600080fd5b813567ffffffffffffffff808211156114d357600080fd5b90830190606082860312156114e757600080fd5b6114ef611107565b8235815260208301358281111561150557600080fd5b611511878286016113c9565b60208301525060408301358281111561152957600080fd5b611535878286016113c9565b60408301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610df657600080fd5b60006020828403121561157857600080fd5b81356100f281611544565b600082601f83011261159457600080fd5b61159c61114d565b8060408401858111156115ae57600080fd5b845b8181101561136f5780518452602093840193016115b0565b600082601f8301126115d957600080fd5b6115e161114d565b8060808401858111156115f357600080fd5b845b8181101561136f576116078782611583565b84526020909301926040016115f5565b600082601f83011261162857600080fd5b8151602061163861124d83611306565b8281526101a0928302850182019282820191908785111561165857600080fd5b8387015b8581101561149c5781818a0312156116745760008081fd5b61167c6110dd565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a06116b48b828501611583565b9082015260e06116c68b8483016115c8565b60c08301526116d98b6101608501611583565b90820152845292840192810161165c565b6000602082840312156116fc57600080fd5b815167ffffffffffffffff8082111561171457600080fd5b908301906060828603121561172857600080fd5b611730611107565b8251815260208301518281111561174657600080fd5b61175287828601611617565b60208301525060408301518281111561176a57600080fd5b61153587828601611617565b60006020828403121561178857600080fd5b815180151581146100f257600080fd5b805167ffffffffffffffff811681146117b057600080fd5b919050565b6000604082840312156117c757600080fd5b6040516040810181811067ffffffffffffffff821117156117ea576117ea6110ae565b604052825181526117fd60208401611798565b60208201529392505050565b805160ff811681146117b057600080fd5b805163ffffffff811681146117b057600080fd5b600060c0828403121561184057600080fd5b60405160c0810181811067ffffffffffffffff82111715611863576118636110ae565b60405261186f83611809565b815261187d60208401611809565b602082015261188e60408401611798565b604082015261189f60608401611798565b60608201526118b06080840161181a565b60808201526118c160a08401611798565b60a08201529392505050565b6000606082840312156118df57600080fd5b6040516060810181811067ffffffffffffffff82111715611902576119026110ae565b604052825181526119156020840161181a565b60208201526119266040840161181a565b60408201529392505050565b60006020828403121561194457600080fd5b81516100f281611544565b600061195d61124d846111bf565b905082815283838301111561197157600080fd5b6100f2836020830184611285565b60006020828403121561199157600080fd5b815167ffffffffffffffff808211156119a957600080fd5b9083019060c082860312156119bd57600080fd5b6119c561112a565b825181526020830151828111156119db57600080fd5b83019150601f820186136119ee57600080fd5b6119fd8683516020850161194f565b6020820152611a0e6040840161181a565b6040820152611a1f60608401611798565b6060820152611a3060808401611809565b6080820152611a4160a08401611809565b60a082015295945050505050565b8060005b60028110156112af578151845260209384019390910190600101611a53565b60008151808452602080850194508084016000805b84811015611b2d5782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a080830151611acd828d0182611a4f565b505060c082015160e0808c01865b6002811015611aff57611aef828551611a4f565b9289019290840190600101611adb565b5050808401519350505050611b186101608a0182611a4f565b506101a0979097019691830191600101611a87565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a0840152611b80610100840182611a72565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c0850152611bbb8282611a72565b91505063ffffffff60c08501511660e08401528091505092915050565b600060208284031215611bea57600080fd5b815167ffffffffffffffff811115611c0157600080fd5b8201601f81018413611c1257600080fd5b610ff28482516020840161194f565b600063ffffffff83811690831681811015611c65577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b039392505050565b60006020808385031215611c8057600080fd5b825167ffffffffffffffff811115611c9757600080fd5b8301601f81018513611ca857600080fd5b8051611cb661124d82611306565b81815260059190911b82018301908381019087831115611cd557600080fd5b928401925b82841015611cf357835182529284019290840190611cda565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220e5c6a6592dc281d07b08b8b062dce63ed41892cb5b861f1cf56517434f67e85764736f6c634300080d0033";

type ReleaseLinearTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReleaseLinearTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReleaseLinearTreasureSystem__factory extends ContractFactory {
  constructor(...args: ReleaseLinearTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReleaseLinearTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ReleaseLinearTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ReleaseLinearTreasureSystem {
    return super.attach(address) as ReleaseLinearTreasureSystem;
  }
  override connect(signer: Signer): ReleaseLinearTreasureSystem__factory {
    return super.connect(signer) as ReleaseLinearTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReleaseLinearTreasureSystemInterface {
    return new utils.Interface(_abi) as ReleaseLinearTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReleaseLinearTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReleaseLinearTreasureSystem;
  }
}
