/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ReleaseLinearTreasureSystem,
  ReleaseLinearTreasureSystemInterface,
} from "../ReleaseLinearTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "area",
            type: "tuple[]",
          },
        ],
        internalType: "struct ReleaseTreasureInfo",
        name: "releaseTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200215d3803806200215d83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000ddb17901c565b5050505062000292565b600062000126620001ef60201b62000e6c1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611ebb80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780634370063e1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f3660046111e7565b6100cf565b60405161007191906112e1565b60405180910390f35b610064610088366004611497565b6100f9565b610095610d1a565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611554565b610d5f565b005b60606000828060200190518101906100e791906116d8565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610e90565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190611764565b801561026e575083516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610247573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026b91906117a3565b51145b801561031557506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101839052429073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156102e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030591906117a3565b6020015167ffffffffffffffff16105b610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f74204368617267696e67000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546103c49073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610e90565b85516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261047e919081019061186c565b9050806040015160ff16600114801561049c5750606081015160ff16155b610502576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f646500000000000000000000006044820152606401610377565b600080546105469073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610e90565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa1580156105ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105de9190611964565b6000549091506106249073ffffffffffffffffffffffffffffffffffffffff167fdc70892ae22810336b1b3e3970e52ce30e6bd067541740d764e72825b722b06c610e90565b88516040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691634cc822159161067c9160040190815260200190565b600060405180830381600087803b15801561069657600080fd5b505af11580156106aa573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff88169250634cc822159150602401600060405180830381600087803b15801561071657600080fd5b505af115801561072a573d6000803e3d6000fd5b505050506108c6600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c291906119c9565b6000546108059073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e381610e90565b83516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691630ff4c9169161085d9160040190815260200190565b600060405180830381865afa15801561087a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108c091908101906119e6565b51610e90565b6040805160e0810182527f09a35426a75b1906dfdc8773646443045a37ca29da26e856b2460c19aa5195c7815260006020808301919091528183018a90528b5160608301528b015160808201528a82015160a08201528382015163ffffffff1660c082015290517f7e62c17a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691637e62c17a9161097c91600401611baf565b6000604051808303816000875af115801561099b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109e19190810190611c4e565b508260c0015163ffffffff16600103610c5857600054610a379073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610e90565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215876040518263ffffffff1660e01b8152600401610a7191815260200190565b600060405180830381600087803b158015610a8b57600080fd5b505af1158015610a9f573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b158015610b0b57600080fd5b505af1158015610b1f573d6000803e3d6000fd5b5050600054610b67925073ffffffffffffffffffffffffffffffffffffffff1690507f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610e90565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215876040518263ffffffff1660e01b8152600401610ba191815260200190565b600060405180830381600087803b158015610bbb57600080fd5b505af1158015610bcf573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff85169250634cc822159150602401600060405180830381600087803b158015610c3b57600080fd5b505af1158015610c4f573d6000803e3d6000fd5b50505050610d0f565b60018360c0015163ffffffff161115610d0f5760018360c00151610c7c9190611c97565b63ffffffff1660c084015287516040517fdee86d4f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169163dee86d4f91610cdc91908790600401611ce3565b600060405180830381600087803b158015610cf657600080fd5b505af1158015610d0a573d6000803e3d6000fd5b505050505b505050505050919050565b6000610d5a7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dcf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610dd881610fdc565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610f00573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f469190810190611dc5565b90508051600003610fb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610377565b610fd481600081518110610fc957610fc9611e56565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610dd8928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156110e3576110e3611090565b60405290565b6040516060810167ffffffffffffffff811182821017156110e3576110e3611090565b60405160e0810167ffffffffffffffff811182821017156110e3576110e3611090565b6040805190810167ffffffffffffffff811182821017156110e3576110e3611090565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561119957611199611090565b604052919050565b600067ffffffffffffffff8211156111bb576111bb611090565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000602082840312156111f957600080fd5b813567ffffffffffffffff81111561121057600080fd5b8201601f8101841361122157600080fd5b803561123461122f826111a1565b611152565b81815285602083850101111561124957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561128257818101518382015260200161126a565b83811115611291576000848401525b50505050565b600081518084526112af816020860160208601611267565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611297565b600067ffffffffffffffff82111561130e5761130e611090565b5060051b60200190565b600082601f83011261132957600080fd5b61133161112f565b80604084018581111561134357600080fd5b845b8181101561135d578035845260209384019301611345565b509095945050505050565b600082601f83011261137957600080fd5b61138161112f565b80608084018581111561139357600080fd5b845b8181101561135d576113a78782611318565b8452602090930192604001611395565b600082601f8301126113c857600080fd5b813560206113d861122f836112f4565b8281526101a092830285018201928282019190878511156113f857600080fd5b8387015b8581101561148a5781818a0312156114145760008081fd5b61141c6110bf565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a06114548b828501611318565b9082015260e06114668b848301611368565b60c08301526114798b6101608501611318565b9082015284529284019281016113fc565b5090979650505050505050565b6000602082840312156114a957600080fd5b813567ffffffffffffffff808211156114c157600080fd5b90830190606082860312156114d557600080fd5b6114dd6110e9565b823581526020830135828111156114f357600080fd5b6114ff878286016113b7565b60208301525060408301358281111561151757600080fd5b611523878286016113b7565b60408301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610dd857600080fd5b60006020828403121561156657600080fd5b81356100f281611532565b600082601f83011261158257600080fd5b61158a61112f565b80604084018581111561159c57600080fd5b845b8181101561135d57805184526020938401930161159e565b600082601f8301126115c757600080fd5b6115cf61112f565b8060808401858111156115e157600080fd5b845b8181101561135d576115f58782611571565b84526020909301926040016115e3565b600082601f83011261161657600080fd5b8151602061162661122f836112f4565b8281526101a0928302850182019282820191908785111561164657600080fd5b8387015b8581101561148a5781818a0312156116625760008081fd5b61166a6110bf565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a06116a28b828501611571565b9082015260e06116b48b8483016115b6565b60c08301526116c78b6101608501611571565b90820152845292840192810161164a565b6000602082840312156116ea57600080fd5b815167ffffffffffffffff8082111561170257600080fd5b908301906060828603121561171657600080fd5b61171e6110e9565b8251815260208301518281111561173457600080fd5b61174087828601611605565b60208301525060408301518281111561175857600080fd5b61152387828601611605565b60006020828403121561177657600080fd5b815180151581146100f257600080fd5b805167ffffffffffffffff8116811461179e57600080fd5b919050565b6000604082840312156117b557600080fd5b6040516040810181811067ffffffffffffffff821117156117d8576117d8611090565b604052825181526117eb60208401611786565b60208201529392505050565b600061180561122f846111a1565b905082815283838301111561181957600080fd5b6100f2836020830184611267565b600082601f83011261183857600080fd5b6100f2838351602085016117f7565b805160ff8116811461179e57600080fd5b805163ffffffff8116811461179e57600080fd5b60006020828403121561187e57600080fd5b815167ffffffffffffffff8082111561189657600080fd5b9083019061010082860312156118ab57600080fd5b6118b36110bf565b8251828111156118c257600080fd5b6118ce87828601611827565b8252506020830151828111156118e357600080fd5b6118ef87828601611827565b60208301525061190160408401611847565b604082015261191260608401611847565b606082015261192360808401611786565b608082015261193460a08401611786565b60a082015261194560c08401611858565b60c082015261195660e08401611786565b60e082015295945050505050565b60006060828403121561197657600080fd5b6040516060810181811067ffffffffffffffff8211171561199957611999611090565b604052825181526119ac60208401611858565b60208201526119bd60408401611858565b60408201529392505050565b6000602082840312156119db57600080fd5b81516100f281611532565b6000602082840312156119f857600080fd5b815167ffffffffffffffff80821115611a1057600080fd5b9083019060e08286031215611a2457600080fd5b611a2c61110c565b82518152602083015182811115611a4257600080fd5b611a4e87828601611827565b602083015250604083015182811115611a6657600080fd5b611a7287828601611827565b604083015250611a8460608401611858565b6060820152611a9560808401611786565b6080820152611aa660a08401611847565b60a0820152611ab760c08401611847565b60c082015295945050505050565b8060005b6002811015611291578151845260209384019390910190600101611ac9565b60008151808452602080850194508084016000805b84811015611ba35782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a080830151611b43828d0182611ac5565b505060c082015160e0808c01865b6002811015611b7557611b65828551611ac5565b9289019290840190600101611b51565b5050808401519350505050611b8e6101608a0182611ac5565b506101a0979097019691830191600101611afd565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a0840152611bf6610100840182611ae8565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c0850152611c318282611ae8565b91505063ffffffff60c08501511660e08401528091505092915050565b600060208284031215611c6057600080fd5b815167ffffffffffffffff811115611c7757600080fd5b8201601f81018413611c8857600080fd5b610fd4848251602084016117f7565b600063ffffffff83811690831681811015611cdb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b039392505050565b8281526040602082015260008251610100806040850152611d08610140850183611297565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016060860152611d438382611297565b92505060ff60408601511660808501526060850151611d6760a086018260ff169052565b50608085015167ffffffffffffffff811660c08601525060a085015167ffffffffffffffff811660e08601525060c085015163ffffffff811685830152505060e084015167ffffffffffffffff811661012085015250949350505050565b60006020808385031215611dd857600080fd5b825167ffffffffffffffff811115611def57600080fd5b8301601f81018513611e0057600080fd5b8051611e0e61122f826112f4565b81815260059190911b82018301908381019087831115611e2d57600080fd5b928401925b82841015611e4b57835182529284019290840190611e32565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220b7952772ee01186a8a547f4ca4de5b4e6f07e1f17be5d50a7f1a37155807231a64736f6c634300080d0033";

type ReleaseLinearTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReleaseLinearTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReleaseLinearTreasureSystem__factory extends ContractFactory {
  constructor(...args: ReleaseLinearTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReleaseLinearTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ReleaseLinearTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ReleaseLinearTreasureSystem {
    return super.attach(address) as ReleaseLinearTreasureSystem;
  }
  override connect(signer: Signer): ReleaseLinearTreasureSystem__factory {
    return super.connect(signer) as ReleaseLinearTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReleaseLinearTreasureSystemInterface {
    return new utils.Interface(_abi) as ReleaseLinearTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReleaseLinearTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReleaseLinearTreasureSystem;
  }
}
