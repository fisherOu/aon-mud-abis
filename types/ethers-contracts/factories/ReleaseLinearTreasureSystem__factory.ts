/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ReleaseLinearTreasureSystem,
  ReleaseLinearTreasureSystemInterface,
} from "../ReleaseLinearTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "area",
            type: "tuple[]",
          },
        ],
        internalType: "struct ReleaseTreasureInfo",
        name: "releaseTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ea038038062001ea083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000b4617901c565b5050505062000292565b600062000126620001ef60201b62000bd71760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611bfe80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780634370063e1461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610f52565b6100cf565b604051610071919061104c565b60405180910390f35b610064610088366004611202565b6100f9565b610095610a85565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046112bf565b610aca565b005b60606000828060200190518101906100e79190611443565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610bfb565b84516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa1580156101b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526101fc9190810190611561565b9050806040015160ff16600114801561021a5750606081015160ff16155b610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064015b60405180910390fd5b600080546102c99073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610bfb565b86516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa15801561033d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103619190611659565b6000549091506103a79073ffffffffffffffffffffffffffffffffffffffff167fdc70892ae22810336b1b3e3970e52ce30e6bd067541740d764e72825b722b06c610bfb565b87516040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691634cc82215916103ff9160040190815260200190565b600060405180830381600087803b15801561041957600080fd5b505af115801561042d573d6000803e3d6000fd5b505050506105c9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630d59332e6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c591906116be565b6000546105089073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e381610bfb565b83516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691630ff4c916916105609160040190815260200190565b600060405180830381865afa15801561057d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105c391908101906116db565b51610bfb565b60408051610100810182527f09a35426a75b1906dfdc8773646443045a37ca29da26e856b2460c19aa5195c7815260006020808301919091528183018990528a5160608301528a81015160808301528a83015160a083015284015163ffffffff90811660c0830152848301511660e082015290517fe57eaec700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff929092169163e57eaec79161068c916004016118a4565b6000604051808303816000875af11580156106ab573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106f1919081019061195d565b508260c0015163ffffffff166001036108b8576000546107479073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610bfb565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215866040518263ffffffff1660e01b815260040161078191815260200190565b600060405180830381600087803b15801561079b57600080fd5b505af11580156107af573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b15801561081b57600080fd5b505af115801561082f573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff85169250634cc822159150602401600060405180830381600087803b15801561089b57600080fd5b505af11580156108af573d6000803e3d6000fd5b50505050610a7b565b60018360c0015163ffffffff161115610a7b5760018360c001516108dc91906119d5565b63ffffffff1660c084015286516040517fdee86d4f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff86169163dee86d4f9161093c919087906004016119fa565b600060405180830381600087803b15801561095657600080fd5b505af115801561096a573d6000803e3d6000fd5b50506000546109b2925073ffffffffffffffffffffffffffffffffffffffff1690507f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610bfb565b73ffffffffffffffffffffffffffffffffffffffff16634e6641a98660405180604001604052808760800151426109e99190611adc565b67ffffffffffffffff9081168252600060209283015260405160e086901b7fffffffff000000000000000000000000000000000000000000000000000000001681526004810194909452825181166024850152910151166044820152606401600060405180830381600087803b158015610a6257600080fd5b505af1158015610a76573d6000803e3d6000fd5b505050505b5050505050919050565b6000610ac57f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b3a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b4381610d47565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610c6b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cb19190810190611b08565b90508051600003610d1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161027c565b610d3f81600081518110610d3457610d34611b99565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610b43928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e4e57610e4e610dfb565b60405290565b6040516060810167ffffffffffffffff81118282101715610e4e57610e4e610dfb565b60405160e0810167ffffffffffffffff81118282101715610e4e57610e4e610dfb565b6040805190810167ffffffffffffffff81118282101715610e4e57610e4e610dfb565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f0457610f04610dfb565b604052919050565b600067ffffffffffffffff821115610f2657610f26610dfb565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610f6457600080fd5b813567ffffffffffffffff811115610f7b57600080fd5b8201601f81018413610f8c57600080fd5b8035610f9f610f9a82610f0c565b610ebd565b818152856020838501011115610fb457600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610fed578181015183820152602001610fd5565b83811115610ffc576000848401525b50505050565b6000815180845261101a816020860160208601610fd2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611002565b600067ffffffffffffffff82111561107957611079610dfb565b5060051b60200190565b600082601f83011261109457600080fd5b61109c610e9a565b8060408401858111156110ae57600080fd5b845b818110156110c85780358452602093840193016110b0565b509095945050505050565b600082601f8301126110e457600080fd5b6110ec610e9a565b8060808401858111156110fe57600080fd5b845b818110156110c8576111128782611083565b8452602090930192604001611100565b600082601f83011261113357600080fd5b81356020611143610f9a8361105f565b8281526101a0928302850182019282820191908785111561116357600080fd5b8387015b858110156111f55781818a03121561117f5760008081fd5b611187610e2a565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a06111bf8b828501611083565b9082015260e06111d18b8483016110d3565b60c08301526111e48b6101608501611083565b908201528452928401928101611167565b5090979650505050505050565b60006020828403121561121457600080fd5b813567ffffffffffffffff8082111561122c57600080fd5b908301906060828603121561124057600080fd5b611248610e54565b8235815260208301358281111561125e57600080fd5b61126a87828601611122565b60208301525060408301358281111561128257600080fd5b61128e87828601611122565b60408301525095945050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b4357600080fd5b6000602082840312156112d157600080fd5b81356100f28161129d565b600082601f8301126112ed57600080fd5b6112f5610e9a565b80604084018581111561130757600080fd5b845b818110156110c8578051845260209384019301611309565b600082601f83011261133257600080fd5b61133a610e9a565b80608084018581111561134c57600080fd5b845b818110156110c85761136087826112dc565b845260209093019260400161134e565b600082601f83011261138157600080fd5b81516020611391610f9a8361105f565b8281526101a092830285018201928282019190878511156113b157600080fd5b8387015b858110156111f55781818a0312156113cd5760008081fd5b6113d5610e2a565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a061140d8b8285016112dc565b9082015260e061141f8b848301611321565b60c08301526114328b61016085016112dc565b9082015284529284019281016113b5565b60006020828403121561145557600080fd5b815167ffffffffffffffff8082111561146d57600080fd5b908301906060828603121561148157600080fd5b611489610e54565b8251815260208301518281111561149f57600080fd5b6114ab87828601611370565b6020830152506040830151828111156114c357600080fd5b61128e87828601611370565b60006114dd610f9a84610f0c565b90508281528383830111156114f157600080fd5b6100f2836020830184610fd2565b600082601f83011261151057600080fd5b6100f2838351602085016114cf565b805160ff8116811461153057600080fd5b919050565b805167ffffffffffffffff8116811461153057600080fd5b805163ffffffff8116811461153057600080fd5b60006020828403121561157357600080fd5b815167ffffffffffffffff8082111561158b57600080fd5b9083019061010082860312156115a057600080fd5b6115a8610e2a565b8251828111156115b757600080fd5b6115c3878286016114ff565b8252506020830151828111156115d857600080fd5b6115e4878286016114ff565b6020830152506115f66040840161151f565b60408201526116076060840161151f565b606082015261161860808401611535565b608082015261162960a08401611535565b60a082015261163a60c0840161154d565b60c082015261164b60e08401611535565b60e082015295945050505050565b60006060828403121561166b57600080fd5b6040516060810181811067ffffffffffffffff8211171561168e5761168e610dfb565b604052825181526116a16020840161154d565b60208201526116b26040840161154d565b60408201529392505050565b6000602082840312156116d057600080fd5b81516100f28161129d565b6000602082840312156116ed57600080fd5b815167ffffffffffffffff8082111561170557600080fd5b9083019060e0828603121561171957600080fd5b611721610e77565b8251815260208301518281111561173757600080fd5b611743878286016114ff565b60208301525060408301518281111561175b57600080fd5b611767878286016114ff565b6040830152506117796060840161154d565b606082015261178a60808401611535565b608082015261179b60a0840161151f565b60a08201526117ac60c0840161151f565b60c082015295945050505050565b8060005b6002811015610ffc5781518452602093840193909101906001016117be565b60008151808452602080850194508084016000805b848110156118985782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a080830151611838828d01826117ba565b505060c082015160e0808c01865b600281101561186a5761185a8285516117ba565b9289019290840190600101611846565b50508084015193505050506118836101608a01826117ba565b506101a09790970196918301916001016117f2565b50959695505050505050565b60208152815160208201526020820151151560408201526040820151606082015260608201516080820152600060808301516101008060a08501526118ed6101208501836117dd565b915060a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c086015261192883826117dd565b92505060c085015161194260e086018263ffffffff169052565b5060e085015163ffffffff8116858301525090949350505050565b60006020828403121561196f57600080fd5b815167ffffffffffffffff81111561198657600080fd5b8201601f8101841361199757600080fd5b610d3f848251602084016114cf565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600063ffffffff838116908316818110156119f2576119f26119a6565b039392505050565b8281526040602082015260008251610100806040850152611a1f610140850183611002565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016060860152611a5a8382611002565b92505060ff60408601511660808501526060850151611a7e60a086018260ff169052565b50608085015167ffffffffffffffff811660c08601525060a085015167ffffffffffffffff811660e08601525060c085015163ffffffff811685830152505060e084015167ffffffffffffffff811661012085015250949350505050565b600067ffffffffffffffff808316818516808303821115611aff57611aff6119a6565b01949350505050565b60006020808385031215611b1b57600080fd5b825167ffffffffffffffff811115611b3257600080fd5b8301601f81018513611b4357600080fd5b8051611b51610f9a8261105f565b81815260059190911b82018301908381019087831115611b7057600080fd5b928401925b82841015611b8e57835182529284019290840190611b75565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122021d4a8adb2a10297733677f96df5b1d82f5489f1d2eab1f860ff64b758bf730464736f6c634300080d0033";

type ReleaseLinearTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReleaseLinearTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReleaseLinearTreasureSystem__factory extends ContractFactory {
  constructor(...args: ReleaseLinearTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ReleaseLinearTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ReleaseLinearTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ReleaseLinearTreasureSystem {
    return super.attach(address) as ReleaseLinearTreasureSystem;
  }
  override connect(signer: Signer): ReleaseLinearTreasureSystem__factory {
    return super.connect(signer) as ReleaseLinearTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReleaseLinearTreasureSystemInterface {
    return new utils.Interface(_abi) as ReleaseLinearTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReleaseLinearTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ReleaseLinearTreasureSystem;
  }
}
