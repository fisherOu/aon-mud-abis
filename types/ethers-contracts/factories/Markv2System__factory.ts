/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Markv2System, Markv2SystemInterface } from "../Markv2System";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct MarkInfo",
        name: "markInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c7738038062000c7783398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200024417901c565b5050505062000292565b600062000126620001ef60201b620002d51760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6109d580620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806377bde9531461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610428565b6100cf565b6040516100719190610562565b60405180910390f35b6100646100883660046105c5565b6100f9565b610095610183565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c836600461067b565b6101c8565b005b60606000828060200190518101906100e791906106f6565b90506100f2816100f9565b9392505050565b8051602080830151604080850151606086810151608088015160a08901519451929760009761012d979196919594016107f1565b6040516020818303038152906040529061017d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101749190610562565b60405180910390fd5b50919050565b60006101c37f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610238576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610241816102f9565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610241928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156103ff576103ff6103ad565b60405290565b6040805190810167ffffffffffffffff811182821017156103ff576103ff6103ad565b60006020828403121561043a57600080fd5b813567ffffffffffffffff8082111561045257600080fd5b818401915084601f83011261046657600080fd5b813581811115610478576104786103ad565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156104be576104be6103ad565b816040528281528760208487010111156104d757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000815180845260005b8181101561051d57602081850181015186830182015201610501565b8181111561052f576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f260208301846104f7565b600082601f83011261058657600080fd5b61058e610405565b8060408401858111156105a057600080fd5b845b818110156105ba5780358452602093840193016105a2565b509095945050505050565b600061016082840312156105d857600080fd5b6105e06103dc565b8235815260208084013581830152604080850135818401526106058660608701610575565b60608401528560bf86011261061957600080fd5b610621610405565b8061012087018881111561063457600080fd5b60a088015b818110156106585761064b8a82610575565b8452928501928401610639565b508160808701526106698982610575565b60a08701525093979650505050505050565b60006020828403121561068d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600082601f8301126106c257600080fd5b6106ca610405565b8060408401858111156106dc57600080fd5b845b818110156105ba5780518452602093840193016106de565b6000610160828403121561070957600080fd5b6107116103dc565b82518152602080840151818301526040808501518184015261073686606087016106b1565b60608401528560bf86011261074a57600080fd5b610752610405565b8061012087018881111561076557600080fd5b60a088015b818110156107895761077c8a826106b1565b845292850192840161076a565b5081608087015261066989826106b1565b8060005b60028110156107bd57815184526020938401939091019060010161079e565b50505050565b8060005b60028110156107bd576107db84835161079a565b60409390930192602091909101906001016107c7565b600061022080835261082f818401600b81527f636f6f7264486173683a20000000000000000000000000000000000000000000602082015260400190565b9050886020840152828103604084015261087381600881527f2077696474683a20000000000000000000000000000000000000000000000000602082015260400190565b905087606084015282810360808401526108b781600981527f206865696768743a200000000000000000000000000000000000000000000000602082015260400190565b90508660a084015282810360c08401526108fb81600481527f20613a2000000000000000000000000000000000000000000000000000000000602082015260400190565b905061090a60e084018761079a565b828103610120840152600481527f20623a2000000000000000000000000000000000000000000000000000000000602082015260400161094e6101408401866107c3565b8281036101c0840152600481527f20633a2000000000000000000000000000000000000000000000000000000000602082015260400190506109946101e083018461079a565b97965050505050505056fea264697066735822122056f07836c53b9943f2e1afeaf89931281bb7f8f55b03076d6abaf232939660e064736f6c634300080d0033";

type Markv2SystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Markv2SystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Markv2System__factory extends ContractFactory {
  constructor(...args: Markv2SystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Markv2System> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<Markv2System>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): Markv2System {
    return super.attach(address) as Markv2System;
  }
  override connect(signer: Signer): Markv2System__factory {
    return super.connect(signer) as Markv2System__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Markv2SystemInterface {
    return new utils.Interface(_abi) as Markv2SystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Markv2System {
    return new Contract(address, _abi, signerOrProvider) as Markv2System;
  }
}
