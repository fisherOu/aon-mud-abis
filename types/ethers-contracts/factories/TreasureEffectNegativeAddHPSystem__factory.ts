/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureEffectNegativeAddHPSystem,
  TreasureEffectNegativeAddHPSystemInterface,
} from "../TreasureEffectNegativeAddHPSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isComponent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "entity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureID",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourceSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasureSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainPerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourcePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasurePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParamv2[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourceSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasureSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "terrainPerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "resourcePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "treasurePerlin",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParamv2[]",
            name: "area",
            type: "tuple[]",
          },
          {
            internalType: "uint32",
            name: "areaAmount",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "fromGuild",
            type: "bool",
          },
        ],
        internalType: "struct TreasureEffectInfo",
        name: "effectInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200160c3803806200160c833981016040819052620000349162000230565b81818181620000433362000113565b6001600160a01b038116156200005a5780620000bf565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf91906200026f565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000107919062000187602090811b620001cb17901c565b50505050505062000296565b60006200012a620001f360201b6200025c1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022d57600080fd5b50565b600080604083850312156200024457600080fd5b8251620002518162000217565b6020840151909250620002648162000217565b809150509250929050565b6000602082840312156200028257600080fd5b81516200028f8162000217565b9392505050565b61136680620002a66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063c420d84c146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610a4e565b6100cf565b6040516100719190610b6c565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610da4565b61013e565b6100cd6100c8366004610e9d565b61014f565b005b60606000828060200190518101906100e79190611092565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b606061014982610280565b92915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101bf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101c88161075a565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60408082015160015482517f614bfa6e000000000000000000000000000000000000000000000000000000008152925160609360009273ffffffffffffffffffffffffffffffffffffffff169163614bfa6e916004808201926020929091908290030181865afa1580156102f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031c919061117c565b60408051808201909152600881527f747265617375726500000000000000000000000000000000000000000000000060208201526101008601519192509015610395575060408051808201909152600e81527f6775696c6420747265617375726500000000000000000000000000000000000060208201525b6000546103d89073ffffffffffffffffffffffffffffffffffffffff167f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd0610763565b73ffffffffffffffffffffffffffffffffffffffff16633b630ba68360405180610100016040528060008152602001600163ffffffff168152602001858152602001896060015181526020017f0f2f1f89defcb2e35e7a49b75f5a0777c977a6210b31a42137e9620ef524f0dc60001c81526020016001151581526020018960e0015163ffffffff1667ffffffffffffffff1681526020014261a8c061047e9190611195565b67ffffffffffffffff168152506040518363ffffffff1660e01b81526004016104a89291906111d4565b600060405180830381600087803b1580156104c257600080fd5b505af11580156104d6573d6000803e3d6000fd5b505060005461051e925073ffffffffffffffffffffffffffffffffffffffff1690507f2d1944d7c92d4cf7892c9f8d3312e879c70e4e7904208d77f458b7bf7c952e19610763565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018490526024810185905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561058f57600080fd5b505af11580156105a3573d6000803e3d6000fd5b50506000546105eb925073ffffffffffffffffffffffffffffffffffffffff1690507f6c062316985e8e531501d3a588aed06abfad54c545ae238fe2d6f51a6ab9bee8610763565b73ffffffffffffffffffffffffffffffffffffffff16631ab06ee5848760e0015163ffffffff1661065f60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff167f6c062316985e8e531501d3a588aed06abfad54c545ae238fe2d6f51a6ab9bee860001c610763565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916886040518263ffffffff1660e01b815260040161069991815260200190565b602060405180830381865afa1580156106b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106da919061117c565b6106e49190611195565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b15801561073a57600080fd5b505af115801561074e573d6000803e3d6000fd5b50505050505050919050565b6101c8816108b3565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156107d3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108199190810190611270565b9050805160000361088a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b6108ab816000815181106108a0576108a0611301565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516101c0810167ffffffffffffffff811182821017156109b2576109b261095f565b60405290565b604051610120810167ffffffffffffffff811182821017156109b2576109b261095f565b6040805190810167ffffffffffffffff811182821017156109b2576109b261095f565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a4657610a4661095f565b604052919050565b60006020808385031215610a6157600080fd5b823567ffffffffffffffff80821115610a7957600080fd5b818501915085601f830112610a8d57600080fd5b813581811115610a9f57610a9f61095f565b610acf847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016109ff565b91508082528684828501011115610ae557600080fd5b8084840185840137600090820190930192909252509392505050565b6000815180845260005b81811015610b2757602081850181015186830182015201610b0b565b81811115610b39576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610b01565b80151581146101c857600080fd5b8035610b9881610b7f565b919050565b600067ffffffffffffffff821115610bb757610bb761095f565b5060051b60200190565b600082601f830112610bd257600080fd5b610bda6109dc565b806040840185811115610bec57600080fd5b845b81811015610c06578035845260209384019301610bee565b509095945050505050565b600082601f830112610c2257600080fd5b610c2a6109dc565b806080840185811115610c3c57600080fd5b845b81811015610c0657610c508782610bc1565b8452602090930192604001610c3e565b600082601f830112610c7157600080fd5b81356020610c86610c8183610b9d565b6109ff565b8281526102609283028501820192828201919087851115610ca657600080fd5b8387015b85811015610d7a5781818a031215610cc25760008081fd5b610cca61098e565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a0808301359082015260c0808301359082015260e08083013590820152610100808301359082015261012080830135908201526101408083013590820152610160610d428b828501610bc1565b908201526101a0610d558b848301610c11565b610180830152610d698b6102208501610bc1565b908201528452928401928101610caa565b5090979650505050505050565b63ffffffff811681146101c857600080fd5b8035610b9881610d87565b600060208284031215610db657600080fd5b813567ffffffffffffffff80821115610dce57600080fd5b908301906101208286031215610de357600080fd5b610deb6109b8565b82358152610dfb60208401610b8d565b60208201526040830135604082015260608301356060820152608083013582811115610e2657600080fd5b610e3287828601610c60565b60808301525060a083013582811115610e4a57600080fd5b610e5687828601610c60565b60a083015250610e6860c08401610d99565b60c0820152610e7960e08401610d99565b60e08201526101009150610e8e828401610b8d565b91810191909152949350505050565b600060208284031215610eaf57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b8051610b9881610b7f565b600082601f830112610eef57600080fd5b610ef76109dc565b806040840185811115610f0957600080fd5b845b81811015610c06578051845260209384019301610f0b565b600082601f830112610f3457600080fd5b610f3c6109dc565b806080840185811115610f4e57600080fd5b845b81811015610c0657610f628782610ede565b8452602090930192604001610f50565b600082601f830112610f8357600080fd5b81516020610f93610c8183610b9d565b8281526102609283028501820192828201919087851115610fb357600080fd5b8387015b85811015610d7a5781818a031215610fcf5760008081fd5b610fd761098e565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a0808301519082015260c0808301519082015260e0808301519082015261010080830151908201526101208083015190820152610140808301519082015261016061104f8b828501610ede565b908201526101a06110628b848301610f23565b6101808301526110768b6102208501610ede565b908201528452928401928101610fb7565b8051610b9881610d87565b6000602082840312156110a457600080fd5b815167ffffffffffffffff808211156110bc57600080fd5b9083019061012082860312156110d157600080fd5b6110d96109b8565b825181526110e960208401610ed3565b6020820152604083015160408201526060830151606082015260808301518281111561111457600080fd5b61112087828601610f72565b60808301525060a08301518281111561113857600080fd5b61114487828601610f72565b60a08301525061115660c08401611087565b60c082015261116760e08401611087565b60e08201526101009150610e8e828401610ed3565b60006020828403121561118e57600080fd5b5051919050565b600082198211156111cf577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b828152604060208201528151604082015263ffffffff602083015116606082015260006040830151610100806080850152611213610140850183610b01565b9150606085015160a0850152608085015160c085015260a0850151151560e085015260c085015161124f8286018267ffffffffffffffff169052565b505060e084015167ffffffffffffffff811661012085015250949350505050565b6000602080838503121561128357600080fd5b825167ffffffffffffffff81111561129a57600080fd5b8301601f810185136112ab57600080fd5b80516112b9610c8182610b9d565b81815260059190911b820183019083810190878311156112d857600080fd5b928401925b828410156112f6578351825292840192908401906112dd565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212206b212cf3efcb54a8470dbb190edfec280c544717dd39e953543679ac8d06d7ec64736f6c634300080d0033";

type TreasureEffectNegativeAddHPSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureEffectNegativeAddHPSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureEffectNegativeAddHPSystem__factory extends ContractFactory {
  constructor(...args: TreasureEffectNegativeAddHPSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureEffectNegativeAddHPSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TreasureEffectNegativeAddHPSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): TreasureEffectNegativeAddHPSystem {
    return super.attach(address) as TreasureEffectNegativeAddHPSystem;
  }
  override connect(signer: Signer): TreasureEffectNegativeAddHPSystem__factory {
    return super.connect(signer) as TreasureEffectNegativeAddHPSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureEffectNegativeAddHPSystemInterface {
    return new utils.Interface(
      _abi
    ) as TreasureEffectNegativeAddHPSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureEffectNegativeAddHPSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureEffectNegativeAddHPSystem;
  }
}
