/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureEffectv2Component,
  TreasureEffectv2ComponentInterface,
} from "../TreasureEffectv2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "effectType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
        ],
        internalType: "struct TreasureEffect",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "effectType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
        ],
        internalType: "struct TreasureEffect",
        name: "treasureEffect",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200164138038062001641833981016040819052620000349162000200565b807fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000bd61760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000bd61760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6113ff80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102dc578063cccf7a8e146102ef578063f2fde38b1461030257600080fd5b8063b361be46146102a9578063b8bc073d146102bc57600080fd5b80638b282947146102645780638da5cb5b146102775780639d2c76b41461027f578063af640d0f1461029257600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe01461021857806375c0669c1461022e578063861eb9051461024157600080fd5b80634cc82215146101f25780634fef6a381461020557600080fd5b80630ff4c9161461013b57806330b67baa1461018357806331b933b9146101c857806336e33477146101dd575b600080fd5b61014e610149366004610e9d565b610315565b604080518251815260208084015163ffffffff9081169183019190915292820151909216908201526060015b60405180910390f35b6000546101a39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017a565b6101d0610379565b60405161017a9190610eb6565b6101f06101eb366004610f3b565b6103ad565b005b6101f0610200366004610e9d565b610401565b6101f0610213366004610fe2565b61044c565b61022061052a565b60405161017a9291906110b9565b6101f061023c366004610fe2565b61074a565b61025461024f366004610fe2565b61077c565b604051901515815260200161017a565b6101f0610272366004611254565b610807565b6101a3610850565b6101f061028d366004610fe2565b610895565b61029b60025481565b60405190815260200161017a565b6101d06102b736600461129b565b610379565b6102cf6102ca366004610e9d565b6109be565b60405161017a91906112d8565b6101f06102ea366004610fe2565b610a60565b6102546102fd366004610e9d565b610b3b565b6101f0610310366004610fe2565b610b5d565b6040805160608101825260008082526020820181905291810182905290808061033d856109be565b80602001905181019061035091906112eb565b6040805160608101825293845263ffffffff928316602085015291169082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fd828260000151836020015184604001516040516020016103e99392919092835263ffffffff918216602084015216604082015260600190565b604051602081830303815290604052610807565b5050565b61040a3361077c565b610440576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61044981610bfa565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104bc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161054557505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600a81526020017f6566666563745479706500000000000000000000000000000000000000000000815250826000815181106105c5576105c561132e565b6020026020010181905250600d816000815181106105e5576105e561132e565b602002602001019060218111156105fe576105fe61108a565b908160218111156106115761061161108a565b815250506040518060400160405280600481526020017f61726561000000000000000000000000000000000000000000000000000000008152508260018151811061065e5761065e61132e565b6020026020010181905250600a8160018151811061067e5761067e61132e565b602002602001019060218111156106975761069761108a565b908160218111156106aa576106aa61108a565b815250506040518060400160405280600581526020017f76616c7565000000000000000000000000000000000000000000000000000000815250826002815181106106f7576106f761132e565b6020026020010181905250600a816002815181106107175761071761132e565b602002602001019060218111156107305761073061108a565b908160218111156107435761074361108a565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061080157506107d2610850565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6108103361077c565b610846576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fd8282610c68565b60006108907f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610905576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109a357600080fd5b505af11580156109b7573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906109db9061135d565b80601f0160208091040260200160405190810160405280929190818152602001828054610a079061135d565b8015610a545780601f10610a2957610100808354040283529160200191610a54565b820191906000526020600020905b815481529060010190602001808311610a3757829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ad0576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b549061135d565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bcd576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61044981610d16565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c1191610dca565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610989565b60008281526001602090815260409091208251610c8792840190610e04565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610ce090859085906004016113b0565b600060405180830381600087803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610449928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610dd69061135d565b6000825580601f10610de6575050565b601f0160209004906000526020600020908101906104499190610e88565b828054610e109061135d565b90600052602060002090601f016020900481019282610e325760008555610e78565b82601f10610e4b57805160ff1916838001178555610e78565b82800160010185558215610e78579182015b82811115610e78578251825591602001919060010190610e5d565b50610e84929150610e88565b5090565b5b80821115610e845760008155600101610e89565b600060208284031215610eaf57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610eee57835183529284019291840191600101610ed2565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b63ffffffff8116811461044957600080fd5b6000808284036080811215610f4f57600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215610f8357600080fd5b506040516060810181811067ffffffffffffffff82111715610fa757610fa7610efa565b604090815260208501358252840135610fbf81610f29565b60208201526060840135610fd281610f29565b6040820152919491935090915050565b600060208284031215610ff457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461101857600080fd5b9392505050565b6000815180845260005b8181101561104557602081850181015186830182015201611029565b81811115611057576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561112e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261111c86835161101f565b955093820193908201906001016110e2565b50508584038187015286518085528782019482019350915060005b8281101561119c5784516022811061118a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611149565b5091979650505050505050565b600082601f8301126111ba57600080fd5b813567ffffffffffffffff808211156111d5576111d5610efa565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561121b5761121b610efa565b8160405283815286602085880101111561123457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561126757600080fd5b82359150602083013567ffffffffffffffff81111561128557600080fd5b611291858286016111a9565b9150509250929050565b6000602082840312156112ad57600080fd5b813567ffffffffffffffff8111156112c457600080fd5b6112d0848285016111a9565b949350505050565b602081526000611018602083018461101f565b60008060006060848603121561130057600080fd5b83519250602084015161131281610f29565b604085015190925061132381610f29565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061137157607f821691505b6020821081036113aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006112d0604083018461101f56fea26469706673582212202b1bf26b95adcc6d17f928d5009b0b786146a62035fe62907ffa6a4573e4d56e64736f6c634300080d0033";

type TreasureEffectv2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureEffectv2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureEffectv2Component__factory extends ContractFactory {
  constructor(...args: TreasureEffectv2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureEffectv2Component> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureEffectv2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureEffectv2Component {
    return super.attach(address) as TreasureEffectv2Component;
  }
  override connect(signer: Signer): TreasureEffectv2Component__factory {
    return super.connect(signer) as TreasureEffectv2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureEffectv2ComponentInterface {
    return new utils.Interface(_abi) as TreasureEffectv2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureEffectv2Component {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureEffectv2Component;
  }
}
