/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TransferGuildLeaderSystem,
  TransferGuildLeaderSystemInterface,
} from "../TransferGuildLeaderSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "guildCrestId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200153b3803806200153b83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200063e17901c565b5050505062000292565b600062000126620001ef60201b620006cf1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61129980620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610e2c565b6100cf565b6040516100719190610f26565b60405180910390f35b610064610088366004610f39565b6100f9565b61009561057d565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610f52565b6105c2565b005b60606000828060200190518101906100e79190610f88565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab6106f3565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d49190610fa1565b61023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f637265737420696e76616c69640000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102839073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe06106f3565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156102f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103189190610f88565b90506000806103268361083f565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018b9052919350915060009073ffffffffffffffffffffffffffffffffffffffff871690630ff4c91690602401600060405180830381865afa158015610399573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103df9190810190610fe0565b6040805160a081018252855163ffffffff1681526020808701519082015281830151818301526060808401519082015260808084015167ffffffffffffffff169082015290517fa829044000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff88169163a829044091610478918d91906004016110c8565b600060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b50506040805160a081018252845163ffffffff1681526020808601519082015286820151818301526060808801519082015260808088015167ffffffffffffffff169082015290517fa829044000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16935063a8290440925061053f9186916004016110c8565b600060405180830381600087803b15801561055957600080fd5b505af115801561056d573d6000803e3d6000fd5b5050505050505050505050919050565b60006105bd7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610632576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063b81610c8b565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610763573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107a9919081019061112f565b90508051600003610816576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610236565b6108378160008151811061082c5761082c6111d5565b602002602001015190565b949350505050565b6108816040518060a00160405280600063ffffffff168152602001606081526020016000815260200160008152602001600067ffffffffffffffff1681525090565b60008054339082906108c99073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f26106f3565b60008054919250906109119073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe06106f3565b60008054919250906109599073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab6106f3565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156109ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a10919081019061112f565b905060005b8151811015610c2557888473ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610a4d57610a4d6111d5565b60200260200101516040518263ffffffff1660e01b8152600401610a7391815260200190565b602060405180830381865afa158015610a90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab49190610f88565b03610c135760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610ae957610ae96111d5565b60200260200101516040518263ffffffff1660e01b8152600401610b0f91815260200190565b600060405180830381865afa158015610b2c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b729190810190610fe0565b9050806000015163ffffffff16600414610be8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f7420746865206c65616465720000000000000000000000000000000000006044820152606401610236565b80838381518110610bfb57610bfb6111d5565b60200260200101519850985050505050505050915091565b80610c1d81611204565b915050610a15565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6f70657261746f72206e6f7420696e206775696c6400000000000000000000006044820152600090606401610236565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161063b928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610d9157610d91610d3f565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610dde57610dde610d3f565b604052919050565b600067ffffffffffffffff821115610e0057610e00610d3f565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610e3e57600080fd5b813567ffffffffffffffff811115610e5557600080fd5b8201601f81018413610e6657600080fd5b8035610e79610e7482610de6565b610d97565b818152856020838501011115610e8e57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610ec7578181015183820152602001610eaf565b83811115610ed6576000848401525b50505050565b60008151808452610ef4816020860160208601610eac565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610edc565b600060208284031215610f4b57600080fd5b5035919050565b600060208284031215610f6457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600060208284031215610f9a57600080fd5b5051919050565b600060208284031215610fb357600080fd5b815180151581146100f257600080fd5b805167ffffffffffffffff81168114610fdb57600080fd5b919050565b60006020808385031215610ff357600080fd5b825167ffffffffffffffff8082111561100b57600080fd5b9084019060a0828703121561101f57600080fd5b611027610d6e565b825163ffffffff8116811461103b57600080fd5b8152828401518281111561104e57600080fd5b83019150601f8201871361106157600080fd5b815161106f610e7482610de6565b818152888683860101111561108357600080fd5b61109282878301888701610eac565b8086840152505060408301516040820152606083015160608201526110b960808401610fc3565b60808201529695505050505050565b8281526040602082015263ffffffff82511660408201526000602083015160a060608401526110fa60e0840182610edc565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b6000602080838503121561114257600080fd5b825167ffffffffffffffff8082111561115a57600080fd5b818501915085601f83011261116e57600080fd5b81518181111561118057611180610d3f565b8060051b9150611191848301610d97565b81815291830184019184810190888411156111ab57600080fd5b938501935b838510156111c9578451825293850193908501906111b0565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361125c577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220277072605c54b7c1462c28155e96aad2153ac9b63f288b62eef1117a72babfce64736f6c634300080d0033";

type TransferGuildLeaderSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferGuildLeaderSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferGuildLeaderSystem__factory extends ContractFactory {
  constructor(...args: TransferGuildLeaderSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferGuildLeaderSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TransferGuildLeaderSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): TransferGuildLeaderSystem {
    return super.attach(address) as TransferGuildLeaderSystem;
  }
  override connect(signer: Signer): TransferGuildLeaderSystem__factory {
    return super.connect(signer) as TransferGuildLeaderSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferGuildLeaderSystemInterface {
    return new utils.Interface(_abi) as TransferGuildLeaderSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferGuildLeaderSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferGuildLeaderSystem;
  }
}
