/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TransferGuildLeaderSystem,
  TransferGuildLeaderSystemInterface,
} from "../TransferGuildLeaderSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildCrestId",
            type: "uint256",
          },
        ],
        internalType: "struct Info",
        name: "info",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015913803806200159183398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200064217901c565b5050505062000292565b600062000126620001ef60201b620006d31760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6112ef80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a85bbf29146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610e53565b6100cf565b6040516100719190610f4d565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610f60565b61013e565b6100cd6100c8366004610f84565b6105c6565b005b60606000828060200190518101906100e79190610fba565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b80516000805460609291339161018a9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab6106f7565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c9190610fde565b610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f637265737420696e76616c69640000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102cb9073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe06106f7565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190611000565b905060008061036e83610843565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018a9052919350915060009073ffffffffffffffffffffffffffffffffffffffff871690630ff4c91690602401600060405180830381865afa1580156103e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104279190810190611036565b6040805160a081018252855163ffffffff1681526020808701519082015281830151818301526060808401519082015260808084015167ffffffffffffffff169082015290517fa829044000000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff88169163a8290440916104c0918c919060040161111e565b600060405180830381600087803b1580156104da57600080fd5b505af11580156104ee573d6000803e3d6000fd5b50506040805160a081018252845163ffffffff1681526020808601519082015286820151818301526060808801519082015260808088015167ffffffffffffffff169082015290517fa829044000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a16935063a8290440925061058791869160040161111e565b600060405180830381600087803b1580156105a157600080fd5b505af11580156105b5573d6000803e3d6000fd5b505050505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610636576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063f81610c8f565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610767573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107ad9190810190611185565b9050805160000361081a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161027e565b61083b816000815181106108305761083061122b565b602002602001015190565b949350505050565b6108856040518060a00160405280600063ffffffff168152602001606081526020016000815260200160008152602001600067ffffffffffffffff1681525090565b60008054339082906108cd9073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f26106f7565b60008054919250906109159073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe06106f7565b600080549192509061095d9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab6106f7565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156109ce573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a149190810190611185565b905060005b8151811015610c2957888473ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610a5157610a5161122b565b60200260200101516040518263ffffffff1660e01b8152600401610a7791815260200190565b602060405180830381865afa158015610a94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab89190611000565b03610c175760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610aed57610aed61122b565b60200260200101516040518263ffffffff1660e01b8152600401610b1391815260200190565b600060405180830381865afa158015610b30573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b769190810190611036565b9050806000015163ffffffff16600414610bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f7420746865206c6561646572000000000000000000000000000000000000604482015260640161027e565b80838381518110610bff57610bff61122b565b60200260200101519850985050505050505050915091565b80610c218161125a565b915050610a19565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6f70657261746f72206e6f7420696e206775696c640000000000000000000000604482015260009060640161027e565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161063f928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610d9557610d95610d43565b60405290565b60405160a0810167ffffffffffffffff81118282101715610d9557610d95610d43565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e0557610e05610d43565b604052919050565b600067ffffffffffffffff821115610e2757610e27610d43565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610e6557600080fd5b813567ffffffffffffffff811115610e7c57600080fd5b8201601f81018413610e8d57600080fd5b8035610ea0610e9b82610e0d565b610dbe565b818152856020838501011115610eb557600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610eee578181015183820152602001610ed6565b83811115610efd576000848401525b50505050565b60008151808452610f1b816020860160208601610ed3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610f03565b600060208284031215610f7257600080fd5b610f7a610d72565b9135825250919050565b600060208284031215610f9657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600060208284031215610fcc57600080fd5b610fd4610d72565b9151825250919050565b600060208284031215610ff057600080fd5b815180151581146100f257600080fd5b60006020828403121561101257600080fd5b5051919050565b805167ffffffffffffffff8116811461103157600080fd5b919050565b6000602080838503121561104957600080fd5b825167ffffffffffffffff8082111561106157600080fd5b9084019060a0828703121561107557600080fd5b61107d610d9b565b825163ffffffff8116811461109157600080fd5b815282840151828111156110a457600080fd5b83019150601f820187136110b757600080fd5b81516110c5610e9b82610e0d565b81815288868386010111156110d957600080fd5b6110e882878301888701610ed3565b80868401525050604083015160408201526060830151606082015261110f60808401611019565b60808201529695505050505050565b8281526040602082015263ffffffff82511660408201526000602083015160a0606084015261115060e0840182610f03565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b6000602080838503121561119857600080fd5b825167ffffffffffffffff808211156111b057600080fd5b818501915085601f8301126111c457600080fd5b8151818111156111d6576111d6610d43565b8060051b91506111e7848301610dbe565b818152918301840191848101908884111561120157600080fd5b938501935b8385101561121f57845182529385019390850190611206565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220a1ed8e0e951856ce5e5739e4eadc958729d288922c4d40a4c58019cff1232fe364736f6c634300080d0033";

type TransferGuildLeaderSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferGuildLeaderSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferGuildLeaderSystem__factory extends ContractFactory {
  constructor(...args: TransferGuildLeaderSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferGuildLeaderSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TransferGuildLeaderSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): TransferGuildLeaderSystem {
    return super.attach(address) as TransferGuildLeaderSystem;
  }
  override connect(signer: Signer): TransferGuildLeaderSystem__factory {
    return super.connect(signer) as TransferGuildLeaderSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferGuildLeaderSystemInterface {
    return new utils.Interface(_abi) as TransferGuildLeaderSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferGuildLeaderSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferGuildLeaderSystem;
  }
}
