/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  JoinGuildSystem,
  JoinGuildSystemInterface,
} from "../JoinGuildSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildId",
            type: "uint256",
          },
        ],
        internalType: "struct JoinInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016c3380380620016c383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620005e317901c565b5050505062000292565b600062000126620001ef60201b620006741760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61142180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a85bbf29146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610ed2565b6100cf565b6040516100719190610fc8565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610fdb565b61013e565b6100cd6100c8366004610fff565b610567565b005b60606000828060200190518101906100e79190611035565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b80516060903361014d82610698565b600080546101919073ffffffffffffffffffffffffffffffffffffffff167ff899011875ecdd0cff874cbbf66c1a2682791e10ae993d0a0ef3d2530849a7de610a4e565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101db573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261022191908101906110cf565b9050610231838260400151610b9a565b600154604080517f614bfa6e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163614bfa6e9160048083019260209291908290030181865afa1580156102a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c59190611237565b60005490915061030b9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610a4e565b6040805160a0810182526000808252606080870151602084015282840182905282015267ffffffffffffffff4216608082015290517fa829044000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff929092169163a82904409161039291859190600401611250565b600060405180830381600087803b1580156103ac57600080fd5b505af11580156103c0573d6000803e3d6000fd5b5050600054610408925073ffffffffffffffffffffffffffffffffffffffff1690507fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610a4e565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810185905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561047957600080fd5b505af115801561048d573d6000803e3d6000fd5b50506000546104d5925073ffffffffffffffffffffffffffffffffffffffff1690507f1eda1d28f6db5e8d259ef45f3ba538b7df923e0105b5098809b1ebfe9dd4983f610a4e565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810186905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561054657600080fd5b505af115801561055a573d6000803e3d6000fd5b5050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146105d7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105e081610d0d565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080543391906106df9073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610a4e565b60008054919250906107279073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610a4e565b600080549192509061076f9073ffffffffffffffffffffffffffffffffffffffff167f1eda1d28f6db5e8d259ef45f3ba538b7df923e0105b5098809b1ebfe9dd4983f610a4e565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156107e0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261082691908101906112b7565b905060005b8151811015610a4557868473ffffffffffffffffffffffffffffffffffffffff16630ff4c9168484815181106108635761086361135d565b60200260200101516040518263ffffffff1660e01b815260040161088991815260200190565b602060405180830381865afa1580156108a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ca9190611237565b03610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f616c726561647920696e2074686973206775696c64000000000000000000000060448201526064015b60405180910390fd5b868373ffffffffffffffffffffffffffffffffffffffff16630ff4c9168484815181106109655761096561135d565b60200260200101516040518263ffffffff1660e01b815260040161098b91815260200190565b602060405180830381865afa1580156109a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cc9190611237565b03610a33576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616c72656164792070656e64696e670000000000000000000000000000000000604482015260640161092d565b80610a3d8161138c565b91505061082b565b50505050505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610abe573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b0491908101906112b7565b90508051600003610b71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161092d565b610b9281600081518110610b8757610b8761135d565b602002602001015190565b949350505050565b60008054610bde9073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610a4e565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff83169063fbdfa1ea90602401600060405180830381865afa158015610c4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c9591908101906112b7565b90508263ffffffff16815110610d07576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6c61636b206f6620706f736974696f6e73000000000000000000000000000000604482015260640161092d565b50505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516105e0928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610e1357610e13610dc1565b60405290565b604051610160810167ffffffffffffffff81118282101715610e1357610e13610dc1565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610e8457610e84610dc1565b604052919050565b600067ffffffffffffffff821115610ea657610ea6610dc1565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610ee457600080fd5b813567ffffffffffffffff811115610efb57600080fd5b8201601f81018413610f0c57600080fd5b8035610f1f610f1a82610e8c565b610e3d565b818152856020838501011115610f3457600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610f6d578181015183820152602001610f55565b83811115610d075750506000910152565b60008151808452610f96816020860160208601610f52565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610f7e565b600060208284031215610fed57600080fd5b610ff5610df0565b9135825250919050565b60006020828403121561101157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b60006020828403121561104757600080fd5b61104f610df0565b9151825250919050565b805163ffffffff8116811461106d57600080fd5b919050565b600082601f83011261108357600080fd5b8151611091610f1a82610e8c565b8181528460208386010111156110a657600080fd5b610b92826020830160208701610f52565b805167ffffffffffffffff8116811461106d57600080fd5b6000602082840312156110e157600080fd5b815167ffffffffffffffff808211156110f957600080fd5b90830190610160828603121561110e57600080fd5b611116610e19565b8251815261112660208401611059565b602082015261113760408401611059565b604082015260608301518281111561114e57600080fd5b61115a87828601611072565b60608301525060808301518281111561117257600080fd5b61117e87828601611072565b60808301525060a08301518281111561119657600080fd5b6111a287828601611072565b60a08301525060c0830151828111156111ba57600080fd5b6111c687828601611072565b60c08301525060e0830151828111156111de57600080fd5b6111ea87828601611072565b60e0830152506101009150611200828401611059565b828201526101209150611214828401611059565b8282015261014091506112288284016110b7565b91810191909152949350505050565b60006020828403121561124957600080fd5b5051919050565b8281526040602082015263ffffffff82511660408201526000602083015160a0606084015261128260e0840182610f7e565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b600060208083850312156112ca57600080fd5b825167ffffffffffffffff808211156112e257600080fd5b818501915085601f8301126112f657600080fd5b81518181111561130857611308610dc1565b8060051b9150611319848301610e3d565b818152918301840191848101908884111561133357600080fd5b938501935b8385101561135157845182529385019390850190611338565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113e4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea2646970667358221220bedd8a7e0083c63f2747322e58ea5d2d9ba3d8c733087c75a1029ae07cc68c6c64736f6c634300080d0033";

type JoinGuildSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JoinGuildSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JoinGuildSystem__factory extends ContractFactory {
  constructor(...args: JoinGuildSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JoinGuildSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<JoinGuildSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): JoinGuildSystem {
    return super.attach(address) as JoinGuildSystem;
  }
  override connect(signer: Signer): JoinGuildSystem__factory {
    return super.connect(signer) as JoinGuildSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JoinGuildSystemInterface {
    return new utils.Interface(_abi) as JoinGuildSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JoinGuildSystem {
    return new Contract(address, _abi, signerOrProvider) as JoinGuildSystem;
  }
}
