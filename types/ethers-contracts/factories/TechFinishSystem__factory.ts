/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TechFinishSystem,
  TechFinishSystemInterface,
} from "../TechFinishSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "updateId",
            type: "uint256",
          },
        ],
        internalType: "struct TechFinishInfo",
        name: "techFinishInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200157f3803806200157f83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200064a17901c565b5050505062000292565b600062000126620001ef60201b620006db1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6112dd80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a85bbf29146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610f02565b6100cf565b6040516100719190610fb5565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611028565b61013e565b6100cd6100c836600461104c565b6105ce565b005b60606000828060200190518101906100e79190611082565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b606033600080808061014f876106ff565b9350935093509350836000036101c6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f2074656368207570646174696e670000000000000000000000000000000060448201526064015b60405180910390fd5b4267ffffffffffffffff168167ffffffffffffffff161115610244576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f557064617465206e6f742046696e69736865640000000000000000000000000060448201526064016101bd565b600061025488600001518561097c565b60005490915061029a9073ffffffffffffffffffffffffffffffffffffffff167fbbcf72a5f12ae7e26ca180b46e62f29286fa93c2be458013c579dd8cc80ca6d9610c38565b88516040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691634cc82215916102f29160040190815260200190565b600060405180830381600087803b15801561030c57600080fd5b505af1158015610320573d6000803e3d6000fd5b5050600054610368925073ffffffffffffffffffffffffffffffffffffffff1690507f8ea20e77228f35477b65a63714a516a0798d72c5a30798f938784c431ed2c320610c38565b88516040517f4cc8221500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691634cc82215916103c09160040190815260200190565b600060405180830381600087803b1580156103da57600080fd5b505af11580156103ee573d6000803e3d6000fd5b5050600054610436925073ffffffffffffffffffffffffffffffffffffffff1690507f7d3ae0f354d484b474c261c5881c1dd2d1fb4691793800e04688e2d791cd888a610c38565b6040805160608101825267ffffffffffffffff80871682524281166020830190815282840189815293517fa1bd12b200000000000000000000000000000000000000000000000000000000815260048101879052925182166024840152511660448201529051606482015273ffffffffffffffffffffffffffffffffffffffff919091169063a1bd12b290608401600060405180830381600087803b1580156104de57600080fd5b505af11580156104f2573d6000803e3d6000fd5b505060005461053a925073ffffffffffffffffffffffffffffffffffffffff1690507f92acea35713be98645f56aa52c544d79830fb401252476df1d51f7409850d719610c38565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810188905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b50505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461063e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064781610d84565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60008080808033600080549192509061074e9073ffffffffffffffffffffffffffffffffffffffff167f8ea20e77228f35477b65a63714a516a0798d72c5a30798f938784c431ed2c320610c38565b60008054919250906107969073ffffffffffffffffffffffffffffffffffffffff167fbbcf72a5f12ae7e26ca180b46e62f29286fa93c2be458013c579dd8cc80ca6d9610c38565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa158015610807573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261084d91908101906110a6565b905060008060008060005b85518110156109685760008773ffffffffffffffffffffffffffffffffffffffff16630ff4c9168884815181106108915761089161114c565b60200260200101516040518263ffffffff1660e01b81526004016108b791815260200190565b606060405180830381865afa1580156108d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108f89190611198565b90508e600001518783815181106109115761091161114c565b602002602001015103610955578682815181106109305761093061114c565b6020026020010151955080600001519450806020015193508060400151925050610968565b50806109608161120e565b915050610858565b50929c919b50995090975095505050505050565b60008054339082906109c49073ffffffffffffffffffffffffffffffffffffffff167f92acea35713be98645f56aa52c544d79830fb401252476df1d51f7409850d719610c38565b6000805491925090610a0c9073ffffffffffffffffffffffffffffffffffffffff167f7d3ae0f354d484b474c261c5881c1dd2d1fb4691793800e04688e2d791cd888a610c38565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff84169063fbdfa1ea90602401600060405180830381865afa158015610a7d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ac391908101906110a6565b905060008060005b8351811015610c2a5760008573ffffffffffffffffffffffffffffffffffffffff16630ff4c916868481518110610b0457610b0461114c565b60200260200101516040518263ffffffff1660e01b8152600401610b2a91815260200190565b606060405180830381865afa158015610b47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b6b9190611246565b905089816040015103610ba157848281518110610b8a57610b8a61114c565b602002602001015193508060400151925050610c2a565b60018551610baf9190611290565b8203610c17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f4572726f7220696e2067657474696e672054656368496421000000000000000060448201526064016101bd565b5080610c228161120e565b915050610acb565b509098975050505050505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610ca8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cee91908101906110a6565b90508051600003610d5b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101bd565b610d7c81600081518110610d7157610d7161114c565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610647928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610e8a57610e8a610e38565b60405290565b6040516060810167ffffffffffffffff81118282101715610e8a57610e8a610e38565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610efa57610efa610e38565b604052919050565b60006020808385031215610f1557600080fd5b823567ffffffffffffffff80821115610f2d57600080fd5b818501915085601f830112610f4157600080fd5b813581811115610f5357610f53610e38565b610f83847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610eb3565b91508082528684828501011115610f9957600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610fe257858101830151858201604001528201610fc6565b81811115610ff4576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006020828403121561103a57600080fd5b611042610e67565b9135825250919050565b60006020828403121561105e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b60006020828403121561109457600080fd5b61109c610e67565b9151825250919050565b600060208083850312156110b957600080fd5b825167ffffffffffffffff808211156110d157600080fd5b818501915085601f8301126110e557600080fd5b8151818111156110f7576110f7610e38565b8060051b9150611108848301610eb3565b818152918301840191848101908884111561112257600080fd5b938501935b8385101561114057845182529385019390850190611127565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805167ffffffffffffffff8116811461119357600080fd5b919050565b6000606082840312156111aa57600080fd5b6111b2610e90565b825181526111c26020840161117b565b60208201526111d36040840161117b565b60408201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361123f5761123f6111df565b5060010190565b60006060828403121561125857600080fd5b611260610e90565b6112698361117b565b81526112776020840161117b565b6020820152604083015160408201528091505092915050565b6000828210156112a2576112a26111df565b50039056fea2646970667358221220680d2b12f0586f863916d976b239b307dfed326567e418008eea2ba3863ad59764736f6c634300080d0033";

type TechFinishSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TechFinishSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TechFinishSystem__factory extends ContractFactory {
  constructor(...args: TechFinishSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TechFinishSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TechFinishSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): TechFinishSystem {
    return super.attach(address) as TechFinishSystem;
  }
  override connect(signer: Signer): TechFinishSystem__factory {
    return super.connect(signer) as TechFinishSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TechFinishSystemInterface {
    return new utils.Interface(_abi) as TechFinishSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TechFinishSystem {
    return new Contract(address, _abi, signerOrProvider) as TechFinishSystem;
  }
}
