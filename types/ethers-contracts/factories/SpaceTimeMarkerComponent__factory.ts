/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  SpaceTimeMarkerComponent,
  SpaceTimeMarkerComponentInterface,
} from "../SpaceTimeMarkerComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "seed",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isUnlimited",
            type: "bool",
          },
        ],
        internalType: "struct SpaceTimeMarker",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "seed",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "isUnlimited",
            type: "bool",
          },
        ],
        internalType: "struct SpaceTimeMarker",
        name: "spaceTimeMarker",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200168a3803806200168a833981016040819052620000349162000200565b807f4b1ac4c3aa37732e927cbff52c019e9fbdad0f3e454031afaefd319a3dc66ce462000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000be81760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000be81760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61144880620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102e0578063cccf7a8e146102f3578063f2fde38b1461030657600080fd5b8063b361be46146102ad578063b8bc073d146102c057600080fd5b80638da5cb5b14610268578063951f1659146102705780639d2c76b414610283578063af640d0f1461029657600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c1461021f578063861eb905146102325780638b2829471461025557600080fd5b80634fef6a38146101f65780636b122fe01461020957600080fd5b80630ff4c9161461013b57806330b67baa1461018757806331b933b9146101cc5780634cc82215146101e1575b600080fd5b61014e610149366004610eaf565b610319565b60408051825163ffffffff16815260208084015167ffffffffffffffff1690820152918101511515908201526060015b60405180910390f35b6000546101a79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017e565b6101d4610388565b60405161017e9190610ec8565b6101f46101ef366004610eaf565b6103bc565b005b6101f4610204366004610f0c565b610407565b6102116104e5565b60405161017e929190610fe3565b6101f461022d366004610f0c565b610705565b610245610240366004610f0c565b610737565b604051901515815260200161017e565b6101f46102633660046111ad565b6107c2565b6101a761080f565b6101f461027e36600461122a565b610854565b6101f4610291366004610f0c565b6108a7565b61029f60025481565b60405190815260200161017e565b6101d46102bb3660046112da565b610388565b6102d36102ce366004610eaf565b6109d0565b60405161017e9190611317565b6101f46102ee366004610f0c565b610a72565b610245610301366004610eaf565b610b4d565b6101f4610314366004610f0c565b610b6f565b60408051606081018252600080825260208201819052918101829052908080610341856109d0565b806020019051810190610354919061132a565b6040805160608101825263ffffffff909416845267ffffffffffffffff909216602084015215159082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c533610737565b6103fb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040481610c0c565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610477576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161050057505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600481526020017f73656564000000000000000000000000000000000000000000000000000000008152508260008151811061058057610580611377565b6020026020010181905250600a816000815181106105a0576105a0611377565b602002602001019060218111156105b9576105b9610fb4565b908160218111156105cc576105cc610fb4565b815250506040518060400160405280600781526020017f74696d656f7574000000000000000000000000000000000000000000000000008152508260018151811061061957610619611377565b6020026020010181905250600b8160018151811061063957610639611377565b6020026020010190602181111561065257610652610fb4565b9081602181111561066557610665610fb4565b815250506040518060400160405280600b81526020017f6973556e6c696d69746564000000000000000000000000000000000000000000815250826001815181106106b2576106b2611377565b60200260200101819052506000816001815181106106d2576106d2611377565b602002602001019060218111156106eb576106eb610fb4565b908160218111156106fe576106fe610fb4565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107bc575061078d61080f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6107cb33610737565b610801576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61080b8282610c7a565b5050565b600061084f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b8051602080830151604080850151815163ffffffff9095169385019390935267ffffffffffffffff909116908301521515606082015261080b9083906080016040516020818303038152906040526107c2565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610917576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109b557600080fd5b505af11580156109c9573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906109ed906113a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610a19906113a6565b8015610a665780601f10610a3b57610100808354040283529160200191610a66565b820191906000526020600020905b815481529060010190602001808311610a4957829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ae2576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b66906113a6565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bdf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040481610d28565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c2391610ddc565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b59060240161099b565b60008281526001602090815260409091208251610c9992840190610e16565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610cf290859085906004016113f9565b600060405180830381600087803b158015610d0c57600080fd5b505af1158015610d20573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610404928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610de8906113a6565b6000825580601f10610df8575050565b601f0160209004906000526020600020908101906104049190610e9a565b828054610e22906113a6565b90600052602060002090601f016020900481019282610e445760008555610e8a565b82601f10610e5d57805160ff1916838001178555610e8a565b82800160010185558215610e8a579182015b82811115610e8a578251825591602001919060010190610e6f565b50610e96929150610e9a565b5090565b5b80821115610e965760008155600101610e9b565b600060208284031215610ec157600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610f0057835183529284019291840191600101610ee4565b50909695505050505050565b600060208284031215610f1e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f4257600080fd5b9392505050565b6000815180845260005b81811015610f6f57602081850181015186830182015201610f53565b81811115610f81576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611058577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611046868351610f49565b9550938201939082019060010161100c565b50508584038187015286518085528782019482019350915060005b828110156110c6578451602281106110b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611073565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261111357600080fd5b813567ffffffffffffffff8082111561112e5761112e6110d3565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611174576111746110d3565b8160405283815286602085880101111561118d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111c057600080fd5b82359150602083013567ffffffffffffffff8111156111de57600080fd5b6111ea85828601611102565b9150509250929050565b63ffffffff8116811461040457600080fd5b67ffffffffffffffff8116811461040457600080fd5b801515811461040457600080fd5b600080828403608081121561123e57600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561127257600080fd5b506040516060810181811067ffffffffffffffff82111715611296576112966110d3565b60405260208401356112a7816111f4565b815260408401356112b781611206565b602082015260608401356112ca8161121c565b6040820152919491935090915050565b6000602082840312156112ec57600080fd5b813567ffffffffffffffff81111561130357600080fd5b61130f84828501611102565b949350505050565b602081526000610f426020830184610f49565b60008060006060848603121561133f57600080fd5b835161134a816111f4565b602085015190935061135b81611206565b604085015190925061136c8161121c565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806113ba57607f821691505b6020821081036113f3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061130f6040830184610f4956fea26469706673582212204fa4f91854275d1da585b4e5849a25f0337bae2ae17f977c65fe1e1c730a54f064736f6c634300080d0033";

type SpaceTimeMarkerComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpaceTimeMarkerComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpaceTimeMarkerComponent__factory extends ContractFactory {
  constructor(...args: SpaceTimeMarkerComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpaceTimeMarkerComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<SpaceTimeMarkerComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): SpaceTimeMarkerComponent {
    return super.attach(address) as SpaceTimeMarkerComponent;
  }
  override connect(signer: Signer): SpaceTimeMarkerComponent__factory {
    return super.connect(signer) as SpaceTimeMarkerComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpaceTimeMarkerComponentInterface {
    return new utils.Interface(_abi) as SpaceTimeMarkerComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpaceTimeMarkerComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SpaceTimeMarkerComponent;
  }
}
