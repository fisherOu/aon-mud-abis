/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  CreateGuildSystem,
  CreateGuildSystemInterface,
} from "../CreateGuildSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "flag",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "regime",
            type: "uint32",
          },
        ],
        internalType: "struct CreateInfo",
        name: "createInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6c38038062001a6c83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620008ee17901c565b5050505062000292565b600062000126620001ef60201b6200097f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6117ca80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063b137f542146100a7578063f2fde38b146100ba575b600080fd5b61006461005f3660046110b8565b6100cf565b604051610071919061117b565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b53660046111c0565b61013e565b6100cd6100c836600461128c565b610872565b005b60606000828060200190518101906100e79190611317565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6060336101496109a3565b6000805461018d9073ffffffffffffffffffffffffffffffffffffffff167ff899011875ecdd0cff874cbbf66c1a2682791e10ae993d0a0ef3d2530849a7de610b0f565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa1580156101d7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261021d91908101906113d3565b905061022c8160000151610c5b565b600154604080517f614bfa6e000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163614bfa6e9160048083019260209291908290030181865afa15801561029c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c091906114fd565b6000549091506103069073ffffffffffffffffffffffffffffffffffffffff167f47847aa6dad6656997b23b837b7a178fcf6ee815ad8065af73bc07856277a776610b0f565b73ffffffffffffffffffffffffffffffffffffffff1663dc7e8010826040518061010001604052808781526020018960000151815260200189602001518152602001896040015181526020014267ffffffffffffffff168152602001896060015163ffffffff168152602001866020015163ffffffff16815260200160008152506040518363ffffffff1660e01b81526004016103a4929190611516565b600060405180830381600087803b1580156103be57600080fd5b505af11580156103d2573d6000803e3d6000fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663614bfa6e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610445573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046991906114fd565b6000549091506104af9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610b0f565b6040805160a081018252600480825260e087015160208301528651828401526000606083015267ffffffffffffffff4216608083015291517fa829044000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff939093169263a8290440926105389286929091016115f8565b600060405180830381600087803b15801561055257600080fd5b505af1158015610566573d6000803e3d6000fd5b50506000546105ae925073ffffffffffffffffffffffffffffffffffffffff1690507fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610b0f565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810186905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b15801561061f57600080fd5b505af1158015610633573d6000803e3d6000fd5b505060005461067b925073ffffffffffffffffffffffffffffffffffffffff1690507f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610b0f565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526024810184905273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156106ec57600080fd5b505af1158015610700573d6000803e3d6000fd5b50506000805490925061074a915073ffffffffffffffffffffffffffffffffffffffff167f540f4a4851e5d34b3358a3dee845da1e4701d9bee45567aba7c95c4239185cbd610b0f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156107b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dc919061165f565b610868576040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018690526024810183905273ffffffffffffffffffffffffffffffffffffffff821690631ab06ee590604401600060405180830381600087803b15801561084f57600080fd5b505af1158015610863573d6000803e3d6000fd5b505050505b5050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108e2576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108eb81610eb5565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080543391906109ea9073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610b0f565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063fbdfa1ea90602401600060405180830381865afa158015610a58573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a9e9190810190611681565b5115610b0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6c65616465722063616e6e6f7420696e2061206775696c64000000000000000060448201526064015b60405180910390fd5b5050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610b7f573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bc59190810190611681565b90508051600003610c32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610b02565b610c5381600081518110610c4857610c48611727565b602002602001015190565b949350505050565b60008054339190610ca29073ffffffffffffffffffffffffffffffffffffffff167f2f3c6eb2abe480dcea02a3f0d6883cd4e62a46b8207d85e1ff6f6e5cdee24b7a610b0f565b6040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101849052909150839073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610d12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d3691906114fd565b11610d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6c61636b206f66207265736f75726365730000000000000000000000000000006044820152606401610b02565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff821690631ab06ee590849086908490630ff4c91690602401602060405180830381865afa158015610e14573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3891906114fd565b610e429190611756565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610e9857600080fd5b505af1158015610eac573d6000803e3d6000fd5b50505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516108eb928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610fbb57610fbb610f69565b60405290565b604051610100810167ffffffffffffffff81118282101715610fbb57610fbb610f69565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561102c5761102c610f69565b604052919050565b600067ffffffffffffffff82111561104e5761104e610f69565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600061108d61108884611034565b610fe5565b90508281528383830111156110a157600080fd5b828260208301376000602084830101529392505050565b6000602082840312156110ca57600080fd5b813567ffffffffffffffff8111156110e157600080fd5b8201601f810184136110f257600080fd5b610c538482356020840161107a565b60005b8381101561111c578181015183820152602001611104565b8381111561112b576000848401525b50505050565b60008151808452611149816020860160208601611101565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611131565b600082601f83011261119f57600080fd5b6100f28383356020850161107a565b63ffffffff811681146108eb57600080fd5b6000602082840312156111d257600080fd5b813567ffffffffffffffff808211156111ea57600080fd5b90830190608082860312156111fe57600080fd5b611206610f98565b82358281111561121557600080fd5b6112218782860161118e565b82525060208301358281111561123657600080fd5b6112428782860161118e565b60208301525060408301358281111561125a57600080fd5b6112668782860161118e565b6040830152506060830135925061127c836111ae565b6060810192909252509392505050565b60006020828403121561129e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600082601f8301126112d357600080fd5b81516112e161108882611034565b8181528460208386010111156112f657600080fd5b610c53826020830160208701611101565b8051611312816111ae565b919050565b60006020828403121561132957600080fd5b815167ffffffffffffffff8082111561134157600080fd5b908301906080828603121561135557600080fd5b61135d610f98565b82518281111561136c57600080fd5b611378878286016112c2565b82525060208301518281111561138d57600080fd5b611399878286016112c2565b6020830152506040830151828111156113b157600080fd5b6113bd878286016112c2565b6040830152506060830151925061127c836111ae565b6000602082840312156113e557600080fd5b815167ffffffffffffffff808211156113fd57600080fd5b90830190610100828603121561141257600080fd5b61141a610fc1565b8251815261142a60208401611307565b602082015261143b60408401611307565b604082015260608301518281111561145257600080fd5b61145e878286016112c2565b60608301525060808301518281111561147657600080fd5b611482878286016112c2565b60808301525060a08301518281111561149a57600080fd5b6114a6878286016112c2565b60a08301525060c0830151828111156114be57600080fd5b6114ca878286016112c2565b60c08301525060e0830151828111156114e257600080fd5b6114ee878286016112c2565b60e08301525095945050505050565b60006020828403121561150f57600080fd5b5051919050565b828152604060208201528151604082015260006020830151610100806060850152611545610140850183611131565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0808685030160808701526115818483611131565b935060608701519150808685030160a08701525061159f8382611131565b92505060808501516115bd60c086018267ffffffffffffffff169052565b5060a085015163ffffffff811660e08601525060c085015163ffffffff811685830152505060e0840151610120840152809150509392505050565b8281526040602082015263ffffffff82511660408201526000602083015160a0606084015261162a60e0840182611131565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b60006020828403121561167157600080fd5b815180151581146100f257600080fd5b6000602080838503121561169457600080fd5b825167ffffffffffffffff808211156116ac57600080fd5b818501915085601f8301126116c057600080fd5b8151818111156116d2576116d2610f69565b8060051b91506116e3848301610fe5565b81815291830184019184810190888411156116fd57600080fd5b938501935b8385101561171b57845182529385019390850190611702565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008282101561178f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50039056fea2646970667358221220dd8b4fe760bc0d22a66ee33bfac70e3e9fa9467d1ecafc821e5551f66b5b652364736f6c634300080d0033";

type CreateGuildSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CreateGuildSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CreateGuildSystem__factory extends ContractFactory {
  constructor(...args: CreateGuildSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CreateGuildSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<CreateGuildSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): CreateGuildSystem {
    return super.attach(address) as CreateGuildSystem;
  }
  override connect(signer: Signer): CreateGuildSystem__factory {
    return super.connect(signer) as CreateGuildSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CreateGuildSystemInterface {
    return new utils.Interface(_abi) as CreateGuildSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CreateGuildSystem {
    return new Contract(address, _abi, signerOrProvider) as CreateGuildSystem;
  }
}
