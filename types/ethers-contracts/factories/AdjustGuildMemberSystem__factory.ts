/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AdjustGuildMemberSystem,
  AdjustGuildMemberSystemInterface,
} from "../AdjustGuildMemberSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildCrestId",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "level",
            type: "uint32",
          },
        ],
        internalType: "struct AdjustMemberInfo",
        name: "adjustInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018803803806200188083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200056d17901c565b5050505062000292565b600062000126620001ef60201b620005fe1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6115de80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe14610051578063112b5ab01461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610fea565b6100cf565b60405161007191906110e4565b60405180910390f35b610064610088366004611109565b6100f9565b6100956104ac565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611141565b6104f1565b005b60606000828060200190518101906100e79190611187565b90506100f2816100f9565b9392505050565b8051600080546060929133916101459073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610622565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d791906111b3565b610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f637265737420696e76616c69640000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102869073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610622565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b91906111d5565b905061032c8186896020015161076e565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff851690630ff4c91690602401600060405180830381865afa15801561039a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103e09190810190611233565b90508373ffffffffffffffffffffffffffffffffffffffff1663a8290440876040518060a001604052808c6020015163ffffffff1681526020016104278d60200151610cbe565b81526020018560400151815260200185606001518152602001856080015167ffffffffffffffff168152506040518363ffffffff1660e01b815260040161046f9291906112e3565b600060405180830381600087803b15801561048957600080fd5b505af115801561049d573d6000803e3d6000fd5b50505050505050505050919050565b60006104ec7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610561576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056a81610e02565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610692573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106d8919081019061134a565b90508051600003610745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610239565b6107668160008151811061075b5761075b6113f0565b602002602001015190565b949350505050565b600080543391906107b59073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610622565b60008054919250906107fd9073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610622565b60008054919250906108459073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610622565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa1580156108b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108fc9190810190611233565b90508563ffffffff16816000015163ffffffff1614158015610924575060008663ffffffff16115b61098a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f696e76616c6964206c6576656c000000000000000000000000000000000000006044820152606401610239565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff86169063fbdfa1ea90602401600060405180830381865afa1580156109f8573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a3e919081019061134a565b90506000805b8251811015610c4a578a8673ffffffffffffffffffffffffffffffffffffffff16630ff4c916858481518110610a7c57610a7c6113f0565b60200260200101516040518263ffffffff1660e01b8152600401610aa291815260200190565b602060405180830381865afa158015610abf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae391906111d5565b03610c385760008573ffffffffffffffffffffffffffffffffffffffff16630ff4c916858481518110610b1857610b186113f0565b60200260200101516040518263ffffffff1660e01b8152600401610b3e91815260200190565b600060405180830381865afa158015610b5b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ba19190810190611233565b8551815191925063ffffffff9081169116118015610bc85750805163ffffffff808c169116115b610c2e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f686173206e6f20617574686f72697479000000000000000000000000000000006044820152606401610239565b6001925050610c4a565b80610c428161141f565b915050610a44565b5080610cb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6f70657261746f72206e6f7420696e206775696c6400000000000000000000006044820152606401610239565b50505050505050505050565b6000805460609190610d069073ffffffffffffffffffffffffffffffffffffffff167ff899011875ecdd0cff874cbbf66c1a2682791e10ae993d0a0ef3d2530849a7de610622565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa158015610d50573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d96919081019061147e565b90508263ffffffff16600103610db0576080015192915050565b8263ffffffff16600203610dc85760a0015192915050565b8263ffffffff16600303610de05760c0015192915050565b8263ffffffff16600403610df85760e0015192915050565b6060015192915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161056a928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610f0857610f08610eb6565b60405290565b60405160a0810167ffffffffffffffff81118282101715610f0857610f08610eb6565b604051610100810167ffffffffffffffff81118282101715610f0857610f08610eb6565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610f9c57610f9c610eb6565b604052919050565b600067ffffffffffffffff821115610fbe57610fbe610eb6565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610ffc57600080fd5b813567ffffffffffffffff81111561101357600080fd5b8201601f8101841361102457600080fd5b803561103761103282610fa4565b610f55565b81815285602083850101111561104c57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561108557818101518382015260200161106d565b83811115611094576000848401525b50505050565b600081518084526110b281602086016020860161106a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f2602083018461109a565b63ffffffff8116811461056a57600080fd5b60006040828403121561111b57600080fd5b611123610ee5565b823581526020830135611135816110f7565b60208201529392505050565b60006020828403121561115357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b8051611182816110f7565b919050565b60006040828403121561119957600080fd5b6111a1610ee5565b825181526020830151611135816110f7565b6000602082840312156111c557600080fd5b815180151581146100f257600080fd5b6000602082840312156111e757600080fd5b5051919050565b600082601f8301126111ff57600080fd5b815161120d61103282610fa4565b81815284602083860101111561122257600080fd5b61076682602083016020870161106a565b60006020828403121561124557600080fd5b815167ffffffffffffffff8082111561125d57600080fd5b9083019060a0828603121561127157600080fd5b611279610f0e565b8251611284816110f7565b815260208301518281111561129857600080fd5b6112a4878286016111ee565b60208301525060408301516040820152606083015160608201526080830151925081831683146112d357600080fd5b6080810192909252509392505050565b8281526040602082015263ffffffff82511660408201526000602083015160a0606084015261131560e084018261109a565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b6000602080838503121561135d57600080fd5b825167ffffffffffffffff8082111561137557600080fd5b818501915085601f83011261138957600080fd5b81518181111561139b5761139b610eb6565b8060051b91506113ac848301610f55565b81815291830184019184810190888411156113c657600080fd5b938501935b838510156113e4578451825293850193908501906113cb565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611477577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b60006020828403121561149057600080fd5b815167ffffffffffffffff808211156114a857600080fd5b9083019061010082860312156114bd57600080fd5b6114c5610f31565b825181526114d560208401611177565b60208201526114e660408401611177565b60408201526060830151828111156114fd57600080fd5b611509878286016111ee565b60608301525060808301518281111561152157600080fd5b61152d878286016111ee565b60808301525060a08301518281111561154557600080fd5b611551878286016111ee565b60a08301525060c08301518281111561156957600080fd5b611575878286016111ee565b60c08301525060e08301518281111561158d57600080fd5b611599878286016111ee565b60e0830152509594505050505056fea2646970667358221220f2e873e7b06a538bc75f692a71990de2801fb5f39cf231da5277a9b74785598b64736f6c634300080d0033";

type AdjustGuildMemberSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdjustGuildMemberSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdjustGuildMemberSystem__factory extends ContractFactory {
  constructor(...args: AdjustGuildMemberSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AdjustGuildMemberSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AdjustGuildMemberSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AdjustGuildMemberSystem {
    return super.attach(address) as AdjustGuildMemberSystem;
  }
  override connect(signer: Signer): AdjustGuildMemberSystem__factory {
    return super.connect(signer) as AdjustGuildMemberSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdjustGuildMemberSystemInterface {
    return new utils.Interface(_abi) as AdjustGuildMemberSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AdjustGuildMemberSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as AdjustGuildMemberSystem;
  }
}
