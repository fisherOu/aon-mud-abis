/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ShieldComponent,
  ShieldComponentInterface,
} from "../ShieldComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "shieldValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "shieldArea",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "shieldTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Shield",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "shieldValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "shieldArea",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "shieldTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Shield",
        name: "shield",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200167f3803806200167f833981016040819052620000349162000200565b807f3a491e792f21d1dfbaf5fe3e6a9453e90f9d0e1e3bab4ac6e371ac1ed485393f62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000beb1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000beb1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61143d80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102e3578063e431489c146102f6578063f2fde38b1461030957600080fd5b8063b8bc073d146102b0578063bf4fe57e146102d057600080fd5b80638da5cb5b1461026b5780639d2c76b414610273578063af640d0f14610286578063b361be461461029d57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610222578063861eb905146102355780638b2829471461025857600080fd5b80634fef6a38146101f95780636b122fe01461020c57600080fd5b80630ff4c9161461013b57806330b67baa1461018a57806331b933b9146101cf5780634cc82215146101e4575b600080fd5b61014e610149366004610eb2565b61031c565b60408051825163ffffffff9081168252602080850151909116908201529181015167ffffffffffffffff16908201526060015b60405180910390f35b6000546101aa9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610181565b6101d761038b565b6040516101819190610ecb565b6101f76101f2366004610eb2565b6103bf565b005b6101f7610207366004610f0f565b61040a565b6102146104e8565b604051610181929190610fe6565b6101f7610230366004610f0f565b610706565b610248610243366004610f0f565b610738565b6040519015158152602001610181565b6101f76102663660046111b0565b6107c3565b6101aa610810565b6101f7610281366004610f0f565b610855565b61028f60025481565b604051908152602001610181565b6101d76102ab3660046111f7565b61038b565b6102c36102be366004610eb2565b61097e565b6040516101819190611234565b6101f76102de366004610f0f565b610a20565b6102486102f1366004610eb2565b610afb565b6101f761030436600461126f565b610b1d565b6101f7610317366004610f0f565b610b72565b604080516060810182526000808252602082018190529181018290529080806103448561097e565b806020019051810190610357919061131f565b6040805160608101825263ffffffff948516815293909216602084015267ffffffffffffffff169082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c833610738565b6103fe576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040781610c0f565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461047a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b606081526020019060019003908161050157505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600b81526020017f736869656c6456616c7565000000000000000000000000000000000000000000815250826000815181106105815761058161136c565b6020026020010181905250600a816000815181106105a1576105a161136c565b602002602001019060218111156105ba576105ba610fb7565b908160218111156105cd576105cd610fb7565b815250506040518060400160405280600a81526020017f736869656c6441726561000000000000000000000000000000000000000000008152508260008151811061061a5761061a61136c565b6020026020010181905250600a8160008151811061063a5761063a61136c565b6020026020010190602181111561065357610653610fb7565b9081602181111561066657610666610fb7565b815250506040518060400160405280600d81526020017f736869656c6454696d656f757400000000000000000000000000000000000000815250826001815181106106b3576106b361136c565b6020026020010181905250600b816001815181106106d3576106d361136c565b602002602001019060218111156106ec576106ec610fb7565b908160218111156106ff576106ff610fb7565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107bd575061078e610810565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6107cc33610738565b610802576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61080c8282610c7d565b5050565b60006108507f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108c5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561096357600080fd5b505af1158015610977573d6000803e3d6000fd5b5050505050565b600081815260016020526040902080546060919061099b9061139b565b80601f01602080910402602001604051908101604052809291908181526020018280546109c79061139b565b8015610a145780601f106109e957610100808354040283529160200191610a14565b820191906000526020600020905b8154815290600101906020018083116109f757829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a90576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b149061139b565b15159392505050565b8051602080830151604080850151815163ffffffff95861694810194909452939091169082015267ffffffffffffffff909116606082015261080c9083906080016040516020818303038152906040526107c3565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610be2576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040781610d2b565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c2691610ddf565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610949565b60008281526001602090815260409091208251610c9c92840190610e19565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610cf590859085906004016113ee565b600060405180830381600087803b158015610d0f57600080fd5b505af1158015610d23573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610407928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610deb9061139b565b6000825580601f10610dfb575050565b601f0160209004906000526020600020908101906104079190610e9d565b828054610e259061139b565b90600052602060002090601f016020900481019282610e475760008555610e8d565b82601f10610e6057805160ff1916838001178555610e8d565b82800160010185558215610e8d579182015b82811115610e8d578251825591602001919060010190610e72565b50610e99929150610e9d565b5090565b5b80821115610e995760008155600101610e9e565b600060208284031215610ec457600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610f0357835183529284019291840191600101610ee7565b50909695505050505050565b600060208284031215610f2157600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f4557600080fd5b9392505050565b6000815180845260005b81811015610f7257602081850181015186830182015201610f56565b81811115610f84576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561105b577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611049868351610f4c565b9550938201939082019060010161100f565b50508584038187015286518085528782019482019350915060005b828110156110c9578451602281106110b7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611076565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261111657600080fd5b813567ffffffffffffffff80821115611131576111316110d6565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611177576111776110d6565b8160405283815286602085880101111561119057600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111c357600080fd5b82359150602083013567ffffffffffffffff8111156111e157600080fd5b6111ed85828601611105565b9150509250929050565b60006020828403121561120957600080fd5b813567ffffffffffffffff81111561122057600080fd5b61122c84828501611105565b949350505050565b602081526000610f456020830184610f4c565b63ffffffff8116811461040757600080fd5b67ffffffffffffffff8116811461040757600080fd5b600080828403608081121561128357600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156112b757600080fd5b506040516060810181811067ffffffffffffffff821117156112db576112db6110d6565b60405260208401356112ec81611247565b815260408401356112fc81611247565b6020820152606084013561130f81611259565b6040820152919491935090915050565b60008060006060848603121561133457600080fd5b835161133f81611247565b602085015190935061135081611247565b604085015190925061136181611259565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806113af57607f821691505b6020821081036113e8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061122c6040830184610f4c56fea2646970667358221220932751b32ead98056717308636572d355b5dc5c815f30385d5d2b3af716204bb64736f6c634300080d0033";

type ShieldComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShieldComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShieldComponent__factory extends ContractFactory {
  constructor(...args: ShieldComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShieldComponent> {
    return super.deploy(world, overrides || {}) as Promise<ShieldComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ShieldComponent {
    return super.attach(address) as ShieldComponent;
  }
  override connect(signer: Signer): ShieldComponent__factory {
    return super.connect(signer) as ShieldComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShieldComponentInterface {
    return new utils.Interface(_abi) as ShieldComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShieldComponent {
    return new Contract(address, _abi, signerOrProvider) as ShieldComponent;
  }
}
