/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ShieldComponent,
  ShieldComponentInterface,
} from "../ShieldComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "shieldValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "shieldArea",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "shieldTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Shield",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "shieldValue",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "shieldArea",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "shieldTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Shield",
        name: "shield",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200168138038062001681833981016040819052620000349162000200565b807f3a491e792f21d1dfbaf5fe3e6a9453e90f9d0e1e3bab4ac6e371ac1ed485393f62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000bed1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000bed1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61143f80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102e3578063e431489c146102f6578063f2fde38b1461030957600080fd5b8063b8bc073d146102b0578063bf4fe57e146102d057600080fd5b80638da5cb5b1461026b5780639d2c76b414610273578063af640d0f14610286578063b361be461461029d57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610222578063861eb905146102355780638b2829471461025857600080fd5b80634fef6a38146101f95780636b122fe01461020c57600080fd5b80630ff4c9161461013b57806330b67baa1461018a57806331b933b9146101cf5780634cc82215146101e4575b600080fd5b61014e610149366004610eb4565b61031c565b60408051825163ffffffff9081168252602080850151909116908201529181015167ffffffffffffffff16908201526060015b60405180910390f35b6000546101aa9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610181565b6101d761038b565b6040516101819190610ecd565b6101f76101f2366004610eb4565b6103bf565b005b6101f7610207366004610f11565b61040a565b6102146104e8565b604051610181929190610fe8565b6101f7610230366004610f11565b610708565b610248610243366004610f11565b61073a565b6040519015158152602001610181565b6101f76102663660046111b2565b6107c5565b6101aa610812565b6101f7610281366004610f11565b610857565b61028f60025481565b604051908152602001610181565b6101d76102ab3660046111f9565b61038b565b6102c36102be366004610eb4565b610980565b6040516101819190611236565b6101f76102de366004610f11565b610a22565b6102486102f1366004610eb4565b610afd565b6101f7610304366004611271565b610b1f565b6101f7610317366004610f11565b610b74565b6040805160608101825260008082526020820181905291810182905290808061034485610980565b8060200190518101906103579190611321565b6040805160608101825263ffffffff948516815293909216602084015267ffffffffffffffff169082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c83361073a565b6103fe576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040781610c11565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461047a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161050357505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600b81526020017f736869656c6456616c7565000000000000000000000000000000000000000000815250826000815181106105835761058361136e565b6020026020010181905250600a816000815181106105a3576105a361136e565b602002602001019060218111156105bc576105bc610fb9565b908160218111156105cf576105cf610fb9565b815250506040518060400160405280600a81526020017f736869656c6441726561000000000000000000000000000000000000000000008152508260018151811061061c5761061c61136e565b6020026020010181905250600a8160018151811061063c5761063c61136e565b6020026020010190602181111561065557610655610fb9565b9081602181111561066857610668610fb9565b815250506040518060400160405280600d81526020017f736869656c6454696d656f757400000000000000000000000000000000000000815250826002815181106106b5576106b561136e565b6020026020010181905250600b816002815181106106d5576106d561136e565b602002602001019060218111156106ee576106ee610fb9565b9081602181111561070157610701610fb9565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107bf5750610790610812565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6107ce3361073a565b610804576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61080e8282610c7f565b5050565b60006108527f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108c7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561096557600080fd5b505af1158015610979573d6000803e3d6000fd5b5050505050565b600081815260016020526040902080546060919061099d9061139d565b80601f01602080910402602001604051908101604052809291908181526020018280546109c99061139d565b8015610a165780601f106109eb57610100808354040283529160200191610a16565b820191906000526020600020905b8154815290600101906020018083116109f957829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a92576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b169061139d565b15159392505050565b8051602080830151604080850151815163ffffffff95861694810194909452939091169082015267ffffffffffffffff909116606082015261080e9083906080016040516020818303038152906040526107c5565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610be4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040781610d2d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c2891610de1565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b59060240161094b565b60008281526001602090815260409091208251610c9e92840190610e1b565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610cf790859085906004016113f0565b600060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610407928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610ded9061139d565b6000825580601f10610dfd575050565b601f0160209004906000526020600020908101906104079190610e9f565b828054610e279061139d565b90600052602060002090601f016020900481019282610e495760008555610e8f565b82601f10610e6257805160ff1916838001178555610e8f565b82800160010185558215610e8f579182015b82811115610e8f578251825591602001919060010190610e74565b50610e9b929150610e9f565b5090565b5b80821115610e9b5760008155600101610ea0565b600060208284031215610ec657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610f0557835183529284019291840191600101610ee9565b50909695505050505050565b600060208284031215610f2357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f4757600080fd5b9392505050565b6000815180845260005b81811015610f7457602081850181015186830182015201610f58565b81811115610f86576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561105d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261104b868351610f4e565b95509382019390820190600101611011565b50508584038187015286518085528782019482019350915060005b828110156110cb578451602281106110b9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611078565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261111857600080fd5b813567ffffffffffffffff80821115611133576111336110d8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611179576111796110d8565b8160405283815286602085880101111561119257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111c557600080fd5b82359150602083013567ffffffffffffffff8111156111e357600080fd5b6111ef85828601611107565b9150509250929050565b60006020828403121561120b57600080fd5b813567ffffffffffffffff81111561122257600080fd5b61122e84828501611107565b949350505050565b602081526000610f476020830184610f4e565b63ffffffff8116811461040757600080fd5b67ffffffffffffffff8116811461040757600080fd5b600080828403608081121561128557600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156112b957600080fd5b506040516060810181811067ffffffffffffffff821117156112dd576112dd6110d8565b60405260208401356112ee81611249565b815260408401356112fe81611249565b602082015260608401356113118161125b565b6040820152919491935090915050565b60008060006060848603121561133657600080fd5b835161134181611249565b602085015190935061135281611249565b60408501519092506113638161125b565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806113b157607f821691505b6020821081036113ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061122e6040830184610f4e56fea2646970667358221220a93ede374fc830301542631c468e02b7ba803ed1400a2c848bbf71b096f054a464736f6c634300080d0033";

type ShieldComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShieldComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShieldComponent__factory extends ContractFactory {
  constructor(...args: ShieldComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ShieldComponent> {
    return super.deploy(world, overrides || {}) as Promise<ShieldComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ShieldComponent {
    return super.attach(address) as ShieldComponent;
  }
  override connect(signer: Signer): ShieldComponent__factory {
    return super.connect(signer) as ShieldComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShieldComponentInterface {
    return new utils.Interface(_abi) as ShieldComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ShieldComponent {
    return new Contract(address, _abi, signerOrProvider) as ShieldComponent;
  }
}
