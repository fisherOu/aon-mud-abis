/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureEffectSystem,
  TreasureEffectSystemInterface,
} from "../TreasureEffectSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isComponent",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "entity",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureID",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "path",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam[]",
            name: "area",
            type: "tuple[]",
          },
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
        ],
        internalType: "struct TreasureEffectInfo",
        name: "effectInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d3438038062000d3483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620001b517901c565b5050505062000292565b600062000126620001ef60201b620002461760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610a9280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780637e62c17a1461007a5780638da5cb5b1461008e578063f2fde38b146100bb575b600080fd5b61006461005f36600461040c565b6100d0565b60405161007191906104bf565b60405180910390f35b610064610088366004610715565b50606090565b6100966100f4565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100ce6100c93660046107e6565b610139565b005b60606000828060200190518101906100e89190610999565b905060605b9392505050565b60006101347f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146101a9576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6101b28161026a565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516101b2928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156103715761037161031e565b60405290565b60405160e0810167ffffffffffffffff811182821017156103715761037161031e565b6040805190810167ffffffffffffffff811182821017156103715761037161031e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156104045761040461031e565b604052919050565b6000602080838503121561041f57600080fd5b823567ffffffffffffffff8082111561043757600080fd5b818501915085601f83011261044b57600080fd5b81358181111561045d5761045d61031e565b61048d847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016103bd565b915080825286848285010111156104a357600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156104ec578581018301518582016040015282016104d0565b818111156104fe576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b80151581146101b257600080fd5b803561054b81610532565b919050565b600067ffffffffffffffff82111561056a5761056a61031e565b5060051b60200190565b600082601f83011261058557600080fd5b61058d61039a565b80604084018581111561059f57600080fd5b845b818110156105b95780358452602093840193016105a1565b509095945050505050565b600082601f8301126105d557600080fd5b6105dd61039a565b8060808401858111156105ef57600080fd5b845b818110156105b9576106038782610574565b84526020909301926040016105f1565b600082601f83011261062457600080fd5b8135602061063961063483610550565b6103bd565b8281526101a0928302850182019282820191908785111561065957600080fd5b8387015b858110156106eb5781818a0312156106755760008081fd5b61067d61034d565b81358152858201358682015260408083013590820152606080830135908201526080808301359082015260a06106b58b828501610574565b9082015260e06106c78b8483016105c4565b60c08301526106da8b6101608501610574565b90820152845292840192810161065d565b5090979650505050505050565b63ffffffff811681146101b257600080fd5b803561054b816106f8565b60006020828403121561072757600080fd5b813567ffffffffffffffff8082111561073f57600080fd5b9083019060e0828603121561075357600080fd5b61075b610377565b8235815261076b60208401610540565b6020820152604083013560408201526060830135606082015260808301358281111561079657600080fd5b6107a287828601610613565b60808301525060a0830135828111156107ba57600080fd5b6107c687828601610613565b60a0830152506107d860c0840161070a565b60c082015295945050505050565b6000602082840312156107f857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100ed57600080fd5b805161054b81610532565b600082601f83011261083857600080fd5b61084061039a565b80604084018581111561085257600080fd5b845b818110156105b9578051845260209384019301610854565b600082601f83011261087d57600080fd5b61088561039a565b80608084018581111561089757600080fd5b845b818110156105b9576108ab8782610827565b8452602090930192604001610899565b600082601f8301126108cc57600080fd5b815160206108dc61063483610550565b8281526101a092830285018201928282019190878511156108fc57600080fd5b8387015b858110156106eb5781818a0312156109185760008081fd5b61092061034d565b81518152858201518682015260408083015190820152606080830151908201526080808301519082015260a06109588b828501610827565b9082015260e061096a8b84830161086c565b60c083015261097d8b6101608501610827565b908201528452928401928101610900565b805161054b816106f8565b6000602082840312156109ab57600080fd5b815167ffffffffffffffff808211156109c357600080fd5b9083019060e082860312156109d757600080fd5b6109df610377565b825181526109ef6020840161081c565b60208201526040830151604082015260608301516060820152608083015182811115610a1a57600080fd5b610a26878286016108bb565b60808301525060a083015182811115610a3e57600080fd5b610a4a878286016108bb565b60a0830152506107d860c0840161098e56fea2646970667358221220b5fe09f8b3fa7644cc55ff41fee421f333408064a133feecca7d21b7ab599dc064736f6c634300080d0033";

type TreasureEffectSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureEffectSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureEffectSystem__factory extends ContractFactory {
  constructor(...args: TreasureEffectSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureEffectSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<TreasureEffectSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): TreasureEffectSystem {
    return super.attach(address) as TreasureEffectSystem;
  }
  override connect(signer: Signer): TreasureEffectSystem__factory {
    return super.connect(signer) as TreasureEffectSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureEffectSystemInterface {
    return new utils.Interface(_abi) as TreasureEffectSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureEffectSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureEffectSystem;
  }
}
