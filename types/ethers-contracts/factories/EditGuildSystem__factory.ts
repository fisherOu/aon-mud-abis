/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  EditGuildSystem,
  EditGuildSystemInterface,
} from "../EditGuildSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildCrestId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "flag",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "regime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "taxRate",
            type: "uint32",
          },
        ],
        internalType: "struct EditInfo",
        name: "editInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017533803806200175383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620003a217901c565b5050505062000292565b600062000126620001ef60201b620004331760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6114b180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe14610051578063297818e11461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610d7a565b6100cf565b6040516100719190610e3d565b60405180910390f35b610064610088366004610e92565b6100f9565b6100956102e1565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610f73565b610326565b005b60606000828060200190518101906100e79190610ff9565b90506100f2816100f9565b9392505050565b6060600061010a8360000151610457565b905061011a565b60405180910390fd5b6000805461015e9073ffffffffffffffffffffffffffffffffffffffff167f47847aa6dad6656997b23b837b7a178fcf6ee815ad8065af73bc07856277a776610a08565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa1580156101cf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261021591908101906110e4565b602080870151908201526040808701518183015260608088015190830152608087015163ffffffff90811660a0808501919091528801511660c0830152517fdc7e801000000000000000000000000000000000000000000000000000000000815290915073ffffffffffffffffffffffffffffffffffffffff83169063dc7e8010906102a790869085906004016111e4565b600060405180830381600087803b1580156102c157600080fd5b505af11580156102d5573d6000803e3d6000fd5b50505050505050919050565b60006103217f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610396576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039f81610b54565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080543390829061049f9073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610a08565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa15801561050d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053191906112c6565b80156105cb57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101859052829073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156105a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c991906112e8565b145b610631576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6e6f74206f776e6572206f66206775696c6420637265737400000000000000006044820152606401610111565b600080546106759073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610a08565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070791906112c6565b80156107cd57506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff821690630ff4c91690602401600060405180830381865afa158015610779573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107bf9190810190611301565b6000015163ffffffff166004145b610833576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f74206c6561646572206f66206775696c64000000000000000000000000006044820152606401610111565b600080546108779073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610a08565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156108e5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090991906112c6565b61096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f206775696c6420626f756e646564000000000000000000000000000000006044820152606401610111565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690630ff4c91690602401602060405180830381865afa1580156109da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109fe91906112e8565b9695505050505050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a78573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610abe91908101906113a6565b90508051600003610b2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610111565b610b4c81600081518110610b4157610b4161144c565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161039f928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff81118282101715610c5a57610c5a610c08565b60405290565b604051610100810167ffffffffffffffff81118282101715610c5a57610c5a610c08565b60405160a0810167ffffffffffffffff81118282101715610c5a57610c5a610c08565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610cee57610cee610c08565b604052919050565b600067ffffffffffffffff821115610d1057610d10610c08565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000610d4f610d4a84610cf6565b610ca7565b9050828152838383011115610d6357600080fd5b828260208301376000602084830101529392505050565b600060208284031215610d8c57600080fd5b813567ffffffffffffffff811115610da357600080fd5b8201601f81018413610db457600080fd5b610b4c84823560208401610d3c565b60005b83811015610dde578181015183820152602001610dc6565b83811115610ded576000848401525b50505050565b60008151808452610e0b816020860160208601610dc3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610df3565b600082601f830112610e6157600080fd5b6100f283833560208501610d3c565b63ffffffff8116811461039f57600080fd5b8035610e8d81610e70565b919050565b600060208284031215610ea457600080fd5b813567ffffffffffffffff80821115610ebc57600080fd5b9083019060c08286031215610ed057600080fd5b610ed8610c37565b82358152602083013582811115610eee57600080fd5b610efa87828601610e50565b602083015250604083013582811115610f1257600080fd5b610f1e87828601610e50565b604083015250606083013582811115610f3657600080fd5b610f4287828601610e50565b606083015250610f5460808401610e82565b6080820152610f6560a08401610e82565b60a082015295945050505050565b600060208284031215610f8557600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600082601f830112610fba57600080fd5b8151610fc8610d4a82610cf6565b818152846020838601011115610fdd57600080fd5b610b4c826020830160208701610dc3565b8051610e8d81610e70565b60006020828403121561100b57600080fd5b815167ffffffffffffffff8082111561102357600080fd5b9083019060c0828603121561103757600080fd5b61103f610c37565b8251815260208301518281111561105557600080fd5b61106187828601610fa9565b60208301525060408301518281111561107957600080fd5b61108587828601610fa9565b60408301525060608301518281111561109d57600080fd5b6110a987828601610fa9565b6060830152506110bb60808401610fee565b6080820152610f6560a08401610fee565b805167ffffffffffffffff81168114610e8d57600080fd5b6000602082840312156110f657600080fd5b815167ffffffffffffffff8082111561110e57600080fd5b90830190610100828603121561112357600080fd5b61112b610c60565b8251815260208301518281111561114157600080fd5b61114d87828601610fa9565b60208301525060408301518281111561116557600080fd5b61117187828601610fa9565b60408301525060608301518281111561118957600080fd5b61119587828601610fa9565b6060830152506111a7608084016110cc565b60808201526111b860a08401610fee565b60a08201526111c960c08401610fee565b60c082015260e083015160e082015280935050505092915050565b828152604060208201528151604082015260006020830151610100806060850152611213610140850183610df3565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08086850301608087015261124f8483610df3565b935060608701519150808685030160a08701525061126d8382610df3565b925050608085015161128b60c086018267ffffffffffffffff169052565b5060a085015163ffffffff811660e08601525060c085015163ffffffff811685830152505060e0840151610120840152809150509392505050565b6000602082840312156112d857600080fd5b815180151581146100f257600080fd5b6000602082840312156112fa57600080fd5b5051919050565b60006020828403121561131357600080fd5b815167ffffffffffffffff8082111561132b57600080fd5b9083019060a0828603121561133f57600080fd5b611347610c84565b825161135281610e70565b815260208301518281111561136657600080fd5b61137287828601610fa9565b6020830152506040830151604082015260608301516060820152611398608084016110cc565b608082015295945050505050565b600060208083850312156113b957600080fd5b825167ffffffffffffffff808211156113d157600080fd5b818501915085601f8301126113e557600080fd5b8151818111156113f7576113f7610c08565b8060051b9150611408848301610ca7565b818152918301840191848101908884111561142257600080fd5b938501935b8385101561144057845182529385019390850190611427565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea264697066735822122004afb6440497e5575570a1adbf966766119589edd64e9184fc9412746abc6a5764736f6c634300080d0033";

type EditGuildSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EditGuildSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EditGuildSystem__factory extends ContractFactory {
  constructor(...args: EditGuildSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EditGuildSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<EditGuildSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): EditGuildSystem {
    return super.attach(address) as EditGuildSystem;
  }
  override connect(signer: Signer): EditGuildSystem__factory {
    return super.connect(signer) as EditGuildSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EditGuildSystemInterface {
    return new utils.Interface(_abi) as EditGuildSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EditGuildSystem {
    return new Contract(address, _abi, signerOrProvider) as EditGuildSystem;
  }
}
