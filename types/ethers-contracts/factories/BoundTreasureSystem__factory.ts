/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BoundTreasureSystem,
  BoundTreasureSystemInterface,
} from "../BoundTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Debug",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620021ae380380620021ae83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200093817901c565b5050505062000292565b600062000126620001ef60201b620009c91760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611f0c80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004611583565b6100cf565b604051610071919061167d565b60405180910390f35b610064610088366004611690565b6100f9565b610095610877565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c83660046116cb565b6108bc565b005b60606000828060200190518101906100e791906116e8565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf066109ed565b600080549192509061018a9073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e11666109ed565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c9190611701565b80156102b657506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101869052839073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b491906116e8565b145b801561034c57506040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c9190611701565b6103b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064015b60405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261046b91908101906117b5565b60008054919250906104b39073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c6109ed565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610521573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105459190611701565b15806105f657506040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018890524267ffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156105c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e6919061190b565b6020015167ffffffffffffffff16105b61065c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616c726561647920426f756e646564000000000000000000000000000000000060448201526064016103ae565b816040015160ff166000036107c957600080546106af9073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c6109ed565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018a905290915067ffffffffffffffff42169073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610728573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074c919061190b565b5167ffffffffffffffff16106107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016103ae565b6107c788610b39565b505b8073ffffffffffffffffffffffffffffffffffffffff16634e6641a98860405180604001604052804267ffffffffffffffff1681526020018660800151426108119190611956565b67ffffffffffffffff168152506040518363ffffffff1660e01b815260040161083b929190611982565b600060405180830381600087803b15801561085557600080fd5b505af1158015610869573d6000803e3d6000fd5b505050505050505050919050565b60006108b77f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461092c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093581611236565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a5d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610aa391908101906119ad565b90508051600003610b10576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103ae565b610b3181600081518110610b2657610b26611a53565b602002602001015190565b949350505050565b60008054339190610b809073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e11666109ed565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa158015610bf1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c3791908101906117b5565b6000805491925090610c7f9073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c6109ed565b6000805491925090610cc79073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab6109ed565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610d38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5c9190611a82565b9050606080610d6e836000015161123f565b60408051610100810182527fcb4a975020772dc4fdbf8d96cc7ce01d61f2ab80a871c7dfc0ce14b94e0ffb708152600060208201528082018b9052606081018c90526080810185905260a08101849052600160c08201528582015163ffffffff1660e082015290517fe57eaec700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff929092169163e57eaec791610e2591600401611bd1565b6000604051808303816000875af1158015610e44573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e8a9190810190611c8a565b508560c0015163ffffffff166001036110d157600054610ee09073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf066109ed565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215896040518263ffffffff1660e01b8152600401610f1a91815260200190565b600060405180830381600087803b158015610f3457600080fd5b505af1158015610f48573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff8a169250634cc822159150602401600060405180830381600087803b158015610fb457600080fd5b505af1158015610fc8573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff88169250634cc822159150602401600060405180830381600087803b15801561103457600080fd5b505af1158015611048573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018c905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b1580156110b457600080fd5b505af11580156110c8573d6000803e3d6000fd5b5050505061122b565b60018660c0015163ffffffff16111561122b5760018660c001516110f59190611cd3565b63ffffffff1660c08701526040517fdee86d4f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff88169063dee86d4f90611154908c908a90600401611cf8565b600060405180830381600087803b15801561116e57600080fd5b505af1158015611182573d6000803e3d6000fd5b505050508473ffffffffffffffffffffffffffffffffffffffff16634e6641a98a60405180604001604052808a60800151426111be9190611956565b67ffffffffffffffff1681526020014267ffffffffffffffff168152506040518363ffffffff1660e01b81526004016111f8929190611982565b600060405180830381600087803b15801561121257600080fd5b505af1158015611226573d6000803e3d6000fd5b505050505b505050505050505050565b610935816113c6565b6000805481906112859073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e3816109ed565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b81526004016112bf91815260200190565b600060405180830381865afa1580156112dc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526113229190810190611dda565b8051600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290519394509192610b319273ffffffffffffffffffffffffffffffffffffffff90921691630d59332e9160048083019260209291908290030181865afa15801561139c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c09190611eb9565b826109ed565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156114c5576114c5611472565b60405290565b60405160e0810167ffffffffffffffff811182821017156114c5576114c5611472565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561153557611535611472565b604052919050565b600067ffffffffffffffff82111561155757611557611472565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561159557600080fd5b813567ffffffffffffffff8111156115ac57600080fd5b8201601f810184136115bd57600080fd5b80356115d06115cb8261153d565b6114ee565b8181528560208385010111156115e557600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561161e578181015183820152602001611606565b8381111561162d576000848401525b50505050565b6000815180845261164b816020860160208601611603565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184611633565b6000602082840312156116a257600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461093557600080fd5b6000602082840312156116dd57600080fd5b81356100f2816116a9565b6000602082840312156116fa57600080fd5b5051919050565b60006020828403121561171357600080fd5b815180151581146100f257600080fd5b60006117316115cb8461153d565b905082815283838301111561174557600080fd5b6100f2836020830184611603565b600082601f83011261176457600080fd5b6100f283835160208501611723565b805160ff8116811461178457600080fd5b919050565b805167ffffffffffffffff8116811461178457600080fd5b805163ffffffff8116811461178457600080fd5b6000602082840312156117c757600080fd5b815167ffffffffffffffff808211156117df57600080fd5b9083019061010082860312156117f457600080fd5b6117fc6114a1565b82518281111561180b57600080fd5b61181787828601611753565b82525060208301518281111561182c57600080fd5b61183887828601611753565b60208301525061184a60408401611773565b604082015261185b60608401611773565b606082015261186c60808401611789565b608082015261187d60a08401611789565b60a082015261188e60c084016117a1565b60c082015261189f60e08401611789565b60e082015295945050505050565b6000604082840312156118bf57600080fd5b6040516040810181811067ffffffffffffffff821117156118e2576118e2611472565b6040529050806118f183611789565b81526118ff60208401611789565b60208201525092915050565b60006040828403121561191d57600080fd5b6100f283836118ad565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff80831681851680830382111561197957611979611927565b01949350505050565b828152606081016100f26020830184805167ffffffffffffffff908116835260209182015116910152565b600060208083850312156119c057600080fd5b825167ffffffffffffffff808211156119d857600080fd5b818501915085601f8301126119ec57600080fd5b8151818111156119fe576119fe611472565b8060051b9150611a0f8483016114ee565b8181529183018401918481019088841115611a2957600080fd5b938501935b83851015611a4757845182529385019390850190611a2e565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060608284031215611a9457600080fd5b6040516060810181811067ffffffffffffffff82111715611ab757611ab7611472565b60405282518152611aca602084016117a1565b6020820152611adb604084016117a1565b60408201529392505050565b8060005b600281101561162d578151845260209384019390910190600101611aeb565b60008151808452602080850194508084016000805b84811015611bc55782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a080830151611b65828d0182611ae7565b505060c082015160e0808c01865b6002811015611b9757611b87828551611ae7565b9289019290840190600101611b73565b5050808401519350505050611bb06101608a0182611ae7565b506101a0979097019691830191600101611b1f565b50959695505050505050565b60208152815160208201526020820151151560408201526040820151606082015260608201516080820152600060808301516101008060a0850152611c1a610120850183611b0a565b915060a08501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160c0860152611c558382611b0a565b92505060c0850151611c6f60e086018263ffffffff169052565b5060e085015163ffffffff8116858301525090949350505050565b600060208284031215611c9c57600080fd5b815167ffffffffffffffff811115611cb357600080fd5b8201601f81018413611cc457600080fd5b610b3184825160208401611723565b600063ffffffff83811690831681811015611cf057611cf0611927565b039392505050565b8281526040602082015260008251610100806040850152611d1d610140850183611633565b915060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0858403016060860152611d588382611633565b92505060ff60408601511660808501526060850151611d7c60a086018260ff169052565b50608085015167ffffffffffffffff811660c08601525060a085015167ffffffffffffffff811660e08601525060c085015163ffffffff811685830152505060e084015167ffffffffffffffff811661012085015250949350505050565b600060208284031215611dec57600080fd5b815167ffffffffffffffff80821115611e0457600080fd5b9083019060e08286031215611e1857600080fd5b611e206114cb565b82518152602083015182811115611e3657600080fd5b611e4287828601611753565b602083015250604083015182811115611e5a57600080fd5b611e6687828601611753565b604083015250611e78606084016117a1565b6060820152611e8960808401611789565b6080820152611e9a60a08401611773565b60a0820152611eab60c08401611773565b60c082015295945050505050565b600060208284031215611ecb57600080fd5b81516100f2816116a956fea2646970667358221220fee9d8c2910ce04c92fb28fd315fe2fcb25ac912c1a76b6a21537f2f8f5a0a6264736f6c634300080d0033";

type BoundTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoundTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoundTreasureSystem__factory extends ContractFactory {
  constructor(...args: BoundTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoundTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BoundTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BoundTreasureSystem {
    return super.attach(address) as BoundTreasureSystem;
  }
  override connect(signer: Signer): BoundTreasureSystem__factory {
    return super.connect(signer) as BoundTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoundTreasureSystemInterface {
    return new utils.Interface(_abi) as BoundTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoundTreasureSystem {
    return new Contract(address, _abi, signerOrProvider) as BoundTreasureSystem;
  }
}
