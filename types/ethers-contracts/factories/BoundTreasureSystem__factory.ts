/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  BoundTreasureSystem,
  BoundTreasureSystemInterface,
} from "../BoundTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "Debug",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "treasureId",
        type: "uint256",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fbe38038062001fbe83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200090f17901c565b5050505062000292565b600062000126620001ef60201b620009a01760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611d1c80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780633e991df31461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004611557565b6100cf565b6040516100719190611607565b60405180910390f35b610064610088366004611658565b6100f9565b61009561084e565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611693565b610893565b005b60606000828060200190518101906100e791906116b0565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf066109c4565b600080549192509061018a9073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e11666109c4565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff83169063cccf7a8e90602401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c91906116c9565b80156102b657506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101869052839073ffffffffffffffffffffffffffffffffffffffff841690630ff4c91690602401602060405180830381865afa158015610290573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b491906116b0565b145b801561034c57506040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610328573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034c91906116c9565b6103b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064015b60405180910390fd5b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c9169060240160c060405180830381865afa158015610425573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610449919061172d565b60008054919250906104919073ffffffffffffffffffffffffffffffffffffffff167f86de2523be15c705f9f8dd1d4bb281bde3a61929d7080e6cb8cc6f383a0a143c6109c4565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156104ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052391906116c9565b15806105d457506040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018890524267ffffffffffffffff169073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156105a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c4919061182a565b6020015167ffffffffffffffff16105b61063a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616c726561647920426f756e646564000000000000000000000000000000000060448201526064016103ae565b815160ff166000036107a4576000805461068a9073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c6109c4565b6040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481018a905290915067ffffffffffffffff42169073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610703573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610727919061182a565b5167ffffffffffffffff1610610799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016103ae565b6107a288610b10565b505b60408051808201825267ffffffffffffffff421681526000602082015290517f4e6641a900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831691634e6641a991610812918b91600401611846565b600060405180830381600087803b15801561082c57600080fd5b505af1158015610840573d6000803e3d6000fd5b505050505050505050919050565b600061088e7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610903576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61090c8161122e565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a34573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a7a9190810190611871565b90508051600003610ae7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016103ae565b610b0881600081518110610afd57610afd611917565b602002602001015190565b949350505050565b60008054339190610b579073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e11666109c4565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c9169060240160c060405180830381865afa158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec919061172d565b6000805491925090610c349073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c6109c4565b6000805491925090610c7c9073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab6109c4565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610ced573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d119190611946565b9050606080610d238360000151611237565b6040805160e0810182527fcb4a975020772dc4fdbf8d96cc7ce01d61f2ab80a871c7dfc0ce14b94e0ffb708152600060208201528082018b9052606081018c90526080810185905260a081018490528582015163ffffffff1660c082015290517f7e62c17a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921691637e62c17a91610dd291600401611a95565b6000604051808303816000875af1158015610df1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e379190810190611b64565b50856080015163ffffffff1660010361107e57600054610e8d9073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf066109c4565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215896040518263ffffffff1660e01b8152600401610ec791815260200190565b600060405180830381600087803b158015610ee157600080fd5b505af1158015610ef5573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff8a169250634cc822159150602401600060405180830381600087803b158015610f6157600080fd5b505af1158015610f75573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff88169250634cc822159150602401600060405180830381600087803b158015610fe157600080fd5b505af1158015610ff5573d6000803e3d6000fd5b50506040517f4cc82215000000000000000000000000000000000000000000000000000000008152600481018b905273ffffffffffffffffffffffffffffffffffffffff87169250634cc822159150602401600060405180830381600087803b15801561106157600080fd5b505af1158015611075573d6000803e3d6000fd5b50505050611223565b6001866080015163ffffffff16111561122357600186608001516110a29190611bad565b63ffffffff90811660808801908152604080517fa363c56f000000000000000000000000000000000000000000000000000000008152600481018d9052895160ff908116602483015260208b01511660448201529089015167ffffffffffffffff908116606483015260608a015181166084830152915190921660a483015260a08801511660c482015273ffffffffffffffffffffffffffffffffffffffff88169063a363c56f9060e401600060405180830381600087803b15801561116757600080fd5b505af115801561117b573d6000803e3d6000fd5b50506040805180820182528982015167ffffffffffffffff1681526000602082015290517f4e6641a900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169350634e6641a992506111f0918d91600401611846565b600060405180830381600087803b15801561120a57600080fd5b505af115801561121e573d6000803e3d6000fd5b505050505b505050505050505050565b61090c816113be565b60008054819061127d9073ffffffffffffffffffffffffffffffffffffffff167f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e3816109c4565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916846040518263ffffffff1660e01b81526004016112b791815260200190565b600060405180830381865afa1580156112d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261131a9190810190611bf9565b8051600154604080517f0d59332e00000000000000000000000000000000000000000000000000000000815290519394509192610b089273ffffffffffffffffffffffffffffffffffffffff90921691630d59332e9160048083019260209291908290030181865afa158015611394573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b89190611cc9565b826109c4565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff811182821017156114bc576114bc61146a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156115095761150961146a565b604052919050565b600067ffffffffffffffff82111561152b5761152b61146a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561156957600080fd5b813567ffffffffffffffff81111561158057600080fd5b8201601f8101841361159157600080fd5b80356115a461159f82611511565b6114c2565b8181528560208385010111156115b957600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156115f25781810151838201526020016115da565b83811115611601576000848401525b50505050565b60208152600082518060208401526116268160408501602087016115d7565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561166a57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461090c57600080fd5b6000602082840312156116a557600080fd5b81356100f281611671565b6000602082840312156116c257600080fd5b5051919050565b6000602082840312156116db57600080fd5b815180151581146100f257600080fd5b805160ff811681146116fc57600080fd5b919050565b805167ffffffffffffffff811681146116fc57600080fd5b805163ffffffff811681146116fc57600080fd5b600060c0828403121561173f57600080fd5b60405160c0810181811067ffffffffffffffff821117156117625761176261146a565b60405261176e836116eb565b815261177c602084016116eb565b602082015261178d60408401611701565b604082015261179e60608401611701565b60608201526117af60808401611719565b60808201526117c060a08401611701565b60a08201529392505050565b6000604082840312156117de57600080fd5b6040516040810181811067ffffffffffffffff821117156118015761180161146a565b60405290508061181083611701565b815261181e60208401611701565b60208201525092915050565b60006040828403121561183c57600080fd5b6100f283836117cc565b828152606081016100f26020830184805167ffffffffffffffff908116835260209182015116910152565b6000602080838503121561188457600080fd5b825167ffffffffffffffff8082111561189c57600080fd5b818501915085601f8301126118b057600080fd5b8151818111156118c2576118c261146a565b8060051b91506118d38483016114c2565b81815291830184019184810190888411156118ed57600080fd5b938501935b8385101561190b578451825293850193908501906118f2565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006060828403121561195857600080fd5b6040516060810181811067ffffffffffffffff8211171561197b5761197b61146a565b6040528251815261198e60208401611719565b602082015261199f60408401611719565b60408201529392505050565b8060005b60028110156116015781518452602093840193909101906001016119af565b60008151808452602080850194508084016000805b84811015611a895782518051895284810151858a0152604080820151818b0152606080830151908b0152608080830151908b015260a080830151611a29828d01826119ab565b505060c082015160e0808c01865b6002811015611a5b57611a4b8285516119ab565b9289019290840190600101611a37565b5050808401519350505050611a746101608a01826119ab565b506101a09790970196918301916001016119e3565b50959695505050505050565b602081528151602082015260208201511515604082015260408201516060820152606082015160808201526000608083015160e060a0840152611adc6101008401826119ce565b905060a08401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160c0850152611b1782826119ce565b91505063ffffffff60c08501511660e08401528091505092915050565b6000611b4261159f84611511565b9050828152838383011115611b5657600080fd5b6100f28360208301846115d7565b600060208284031215611b7657600080fd5b815167ffffffffffffffff811115611b8d57600080fd5b8201601f81018413611b9e57600080fd5b610b0884825160208401611b34565b600063ffffffff83811690831681811015611bf1577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b039392505050565b600060208284031215611c0b57600080fd5b815167ffffffffffffffff80821115611c2357600080fd5b9083019060c08286031215611c3757600080fd5b611c3f611499565b82518152602083015182811115611c5557600080fd5b83019150601f82018613611c6857600080fd5b611c7786835160208501611b34565b6020820152611c8860408401611719565b6040820152611c9960608401611701565b6060820152611caa608084016116eb565b6080820152611cbb60a084016116eb565b60a082015295945050505050565b600060208284031215611cdb57600080fd5b81516100f28161167156fea2646970667358221220bf7034cbdc3e980243d90c80d1d76a01a45d9673c019581c15ca507f157e072c64736f6c634300080d0033";

type BoundTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BoundTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BoundTreasureSystem__factory extends ContractFactory {
  constructor(...args: BoundTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BoundTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<BoundTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): BoundTreasureSystem {
    return super.attach(address) as BoundTreasureSystem;
  }
  override connect(signer: Signer): BoundTreasureSystem__factory {
    return super.connect(signer) as BoundTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BoundTreasureSystemInterface {
    return new utils.Interface(_abi) as BoundTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BoundTreasureSystem {
    return new Contract(address, _abi, signerOrProvider) as BoundTreasureSystem;
  }
}
