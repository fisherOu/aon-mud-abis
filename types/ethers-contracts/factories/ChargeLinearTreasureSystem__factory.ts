/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ChargeLinearTreasureSystem,
  ChargeLinearTreasureSystemInterface,
} from "../ChargeLinearTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "direction",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "distance",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
        ],
        internalType: "struct ChargeTreasureInfo",
        name: "chargeTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e9438038062001e9483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000d0117901c565b5050505062000292565b600062000126620001ef60201b62000d921760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611bf280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063e86660cf146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004611260565b6100cf565b6040516100719190611313565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611468565b61013e565b6100cd6100c8366004611590565b610c85565b005b60606000828060200190518101906100e79190611657565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60005460609033906101869073ffffffffffffffffffffffffffffffffffffffff167f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610db6565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e826040518263ffffffff1660e01b81526004016101c091815260200190565b602060405180830381865afa1580156101dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102019190611760565b1561026d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4368617267696e6700000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6020830151600054610295919073ffffffffffffffffffffffffffffffffffffffff16610f04565b6102fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f506f736974696f6e20696e76616c6964000000000000000000000000000000006044820152606401610264565b6000805461033f9073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610db6565b60008054919250906103879073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610db6565b85516040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff84169163cccf7a8e916103e09160040190815260200190565b602060405180830381865afa1580156103fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104219190611760565b80156104c3575084516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152849173ffffffffffffffffffffffffffffffffffffffff851691630ff4c916916104809160040190815260200190565b602060405180830381865afa15801561049d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c1919061177b565b145b801561055c575084516040517fcccf7a8e000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610538573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055c9190611760565b6105c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c696420747265617375726500000000000000000000000000006044820152606401610264565b84516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff841691630ff4c9169161061b9160040190815260200190565b60c060405180830381865afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c91906117a5565b9050806000015160ff16600114801561067a5750602081015160ff16155b6106e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f646500000000000000000000006044820152606401610264565b600080546107249073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610db6565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bb919061184c565b90504267ffffffffffffffff16816000015167ffffffffffffffff161080156107fb57504267ffffffffffffffff16816020015167ffffffffffffffff16105b610861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e20796574000000000000000000000000000000006044820152606401610264565b600080546108a59073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610db6565b89516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d91906118ab565b6000549091506109839073ffffffffffffffffffffffffffffffffffffffff167fdc70892ae22810336b1b3e3970e52ce30e6bd067541740d764e72825b722b06c610db6565b73ffffffffffffffffffffffffffffffffffffffff16633e5879d48b6000015160405180608001604052808e602001516000015181526020018e6040015163ffffffff1681526020018e6060015167ffffffffffffffff168152602001856020015163ffffffff168152506040518363ffffffff1660e01b8152600401610a4e929190918252805160208084019190915281015163ffffffff90811660408085019190915282015167ffffffffffffffff166060808501919091529091015116608082015260a00190565b600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634e6641a98b600001516040518060400160405280896040015142610abc9190611914565b67ffffffffffffffff168152602001896040015142610adb9190611914565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b158015610b5057600080fd5b505af1158015610b64573d6000803e3d6000fd5b5050600054610bac925073ffffffffffffffffffffffffffffffffffffffff1690507f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610db6565b73ffffffffffffffffffffffffffffffffffffffff1663df49b4218960405180604001604052808e600001518152602001896040015142610bed9190611914565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935281516024840152602090910151166044820152606401600060405180830381600087803b158015610c6057600080fd5b505af1158015610c74573d6000803e3d6000fd5b505050505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610cf5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cfe8161109a565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e26573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e6c9190810190611967565b90508051600003610ed9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610264565b610efa81600081518110610eef57610eef611a0d565b602002602001015190565b9150505b92915050565b600080610f31837fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610db6565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161014060405180830381865afa158015610f7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fa09190611a47565b805190915015611093576040805160a080820183528651825260208088015190830152868301518284015260608088015190830152608080880151908301526101208401519087015160c088015160e089015194517f34baeab9000000000000000000000000000000000000000000000000000000008152939473ffffffffffffffffffffffffffffffffffffffff909316936334baeab9936110499392918790600401611b38565b602060405180830381865afa158015611066573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108a9190611760565b92505050610efe565b5092915050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610cfe928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff811182821017156111a0576111a061114e565b60405290565b604051610100810167ffffffffffffffff811182821017156111a0576111a061114e565b604051610140810167ffffffffffffffff811182821017156111a0576111a061114e565b6040805190810167ffffffffffffffff811182821017156111a0576111a061114e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112585761125861114e565b604052919050565b6000602080838503121561127357600080fd5b823567ffffffffffffffff8082111561128b57600080fd5b818501915085601f83011261129f57600080fd5b8135818111156112b1576112b161114e565b6112e1847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611211565b915080825286848285010111156112f757600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561134057858101830151858201604001528201611324565b81811115611352576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f83011261139757600080fd5b61139f6111ee565b8060408401858111156113b157600080fd5b845b818110156113cb5780358452602093840193016113b3565b509095945050505050565b600082601f8301126113e757600080fd5b6113ef6111ee565b80608084018581111561140157600080fd5b845b818110156113cb576114158782611386565b8452602090930192604001611403565b63ffffffff81168114610cfe57600080fd5b803561144281611425565b919050565b67ffffffffffffffff81168114610cfe57600080fd5b803561144281611447565b600081830361022081121561147c57600080fd5b61148461117d565b833581526101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830112156114b957600080fd5b6114c16111a6565b91506020840135825260408401356020830152606084013560408301526080840135606083015260a084013560808301526114ff8560c08601611386565b60a08301526115128561010086016113d6565b60c0830152611525856101808601611386565b60e083015281602082015261153d6101c08501611437565b604082015261154f6101e0850161145d565b60608201526115616102008501611437565b6080820152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610cfe57600080fd5b6000602082840312156115a257600080fd5b81356100f28161156e565b600082601f8301126115be57600080fd5b6115c66111ee565b8060408401858111156115d857600080fd5b845b818110156113cb5780518452602093840193016115da565b600082601f83011261160357600080fd5b61160b6111ee565b80608084018581111561161d57600080fd5b845b818110156113cb5761163187826115ad565b845260209093019260400161161f565b805161144281611425565b805161144281611447565b600081830361022081121561166b57600080fd5b61167361117d565b835181526101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830112156116a857600080fd5b6116b06111a6565b91506020840151825260408401516020830152606084015160408301526080840151606083015260a084015160808301526116ee8560c086016115ad565b60a08301526117018561010086016115f2565b60c08301526117148561018086016115ad565b60e083015281602082015261172c6101c08501611641565b604082015261173e6101e0850161164c565b60608201526115616102008501611641565b8051801515811461144257600080fd5b60006020828403121561177257600080fd5b6100f282611750565b60006020828403121561178d57600080fd5b5051919050565b805160ff8116811461144257600080fd5b600060c082840312156117b757600080fd5b60405160c0810181811067ffffffffffffffff821117156117da576117da61114e565b6040526117e683611794565b81526117f460208401611794565b6020820152604083015161180781611447565b6040820152606083015161181a81611447565b6060820152608083015161182d81611425565b608082015260a083015161184081611447565b60a08201529392505050565b60006040828403121561185e57600080fd5b6040516040810181811067ffffffffffffffff821117156118815761188161114e565b604052825161188f81611447565b8152602083015161189f81611447565b60208201529392505050565b6000606082840312156118bd57600080fd5b6040516060810181811067ffffffffffffffff821117156118e0576118e061114e565b6040528251815260208301516118f581611425565b6020820152604083015161190881611425565b60408201529392505050565b600067ffffffffffffffff80831681851680830382111561195e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01949350505050565b6000602080838503121561197a57600080fd5b825167ffffffffffffffff8082111561199257600080fd5b818501915085601f8301126119a657600080fd5b8151818111156119b8576119b861114e565b8060051b91506119c9848301611211565b81815291830184019184810190888411156119e357600080fd5b938501935b83851015611a01578451825293850193908501906119e8565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80516114428161156e565b60006101408284031215611a5a57600080fd5b611a626111ca565b611a6b83611750565b8152611a7960208401611a3c565b6020820152611a8a60408401611a3c565b6040820152611a9b60608401611a3c565b6060820152611aac60808401611a3c565b6080820152611abd60a08401611a3c565b60a0820152611ace60c08401611a3c565b60c0820152611adf60e08401611a3c565b60e0820152610100611af2818501611a3c565b90820152610120611b04848201611a3c565b908201529392505050565b8060005b6002811015611b32578151845260209384019390910190600101611b13565b50505050565b6101a08101611b478287611b0f565b60408083018660005b6002811015611b7757611b64838351611b0f565b9183019160209190910190600101611b50565b50505050611b8860c0830185611b0f565b61010082018360005b6005811015611bb0578151835260209283019290910190600101611b91565b5050509594505050505056fea264697066735822122092842e1e88ee123593674224477ffb37f45010d97ccd049ec935d692a9a0c94264736f6c634300080d0033";

type ChargeLinearTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeLinearTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeLinearTreasureSystem__factory extends ContractFactory {
  constructor(...args: ChargeLinearTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeLinearTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ChargeLinearTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ChargeLinearTreasureSystem {
    return super.attach(address) as ChargeLinearTreasureSystem;
  }
  override connect(signer: Signer): ChargeLinearTreasureSystem__factory {
    return super.connect(signer) as ChargeLinearTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeLinearTreasureSystemInterface {
    return new utils.Interface(_abi) as ChargeLinearTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeLinearTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChargeLinearTreasureSystem;
  }
}
