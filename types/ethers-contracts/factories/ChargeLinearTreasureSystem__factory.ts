/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ChargeLinearTreasureSystem,
  ChargeLinearTreasureSystemInterface,
} from "../ChargeLinearTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "uint256",
                name: "realHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogHash",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "fogSeed",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "width",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "height",
                type: "uint256",
              },
              {
                internalType: "uint256[2]",
                name: "a",
                type: "uint256[2]",
              },
              {
                internalType: "uint256[2][2]",
                name: "b",
                type: "uint256[2][2]",
              },
              {
                internalType: "uint256[2]",
                name: "c",
                type: "uint256[2]",
              },
            ],
            internalType: "struct CoordVerifyParam",
            name: "position",
            type: "tuple",
          },
          {
            internalType: "uint32",
            name: "direction",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "distance",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "area",
            type: "uint32",
          },
        ],
        internalType: "struct ChargeTreasureInfo",
        name: "chargeTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e2438038062001e2483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000be117901c565b5050505062000292565b600062000126620001ef60201b62000c721760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611b8280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063e86660cf146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004611185565b6100cf565b6040516100719190611235565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611368565b61013e565b6100cd6100c8366004611490565b610b65565b005b60606000828060200190518101906100e79190611557565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6020810151600054606091339161016b919073ffffffffffffffffffffffffffffffffffffffff16610c96565b6101d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f506f736974696f6e20696e76616c69640000000000000000000000000000000060448201526064015b60405180910390fd5b6000805461021a9073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610e2d565b60008054919250906102629073ffffffffffffffffffffffffffffffffffffffff167f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610e2d565b85516040517fcccf7a8e00000000000000000000000000000000000000000000000000000000815291925073ffffffffffffffffffffffffffffffffffffffff84169163cccf7a8e916102bb9160040190815260200190565b602060405180830381865afa1580156102d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fc9190611660565b801561039e575084516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152849173ffffffffffffffffffffffffffffffffffffffff851691630ff4c9169161035b9160040190815260200190565b602060405180830381865afa158015610378573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039c919061167b565b145b8015610437575084516040517fcccf7a8e000000000000000000000000000000000000000000000000000000008152600481019190915273ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610413573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104379190611660565b61049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742076616c6964207472656173757265000000000000000000000000000060448201526064016101cd565b84516040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff841691630ff4c916916104f69160040190815260200190565b600060405180830381865afa158015610513573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261055991908101906116ea565b9050806040015160ff1660011480156105775750606081015160ff16155b6105dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6e6f7420666f72207468697320757365206d6f6465000000000000000000000060448201526064016101cd565b600080546106219073ffffffffffffffffffffffffffffffffffffffff167f44d5df6fedbb1676612b3073b831a5f6f1d59057fb2b8978e7146cb8eee3ca8c610e2d565b87516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b891906117e2565b90504267ffffffffffffffff16816000015167ffffffffffffffff16111580156106fa57504267ffffffffffffffff16816020015167ffffffffffffffff1611155b610760576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f6e6f7420636f6f6c646f776e207965740000000000000000000000000000000060448201526064016101cd565b600080546107a49073ffffffffffffffffffffffffffffffffffffffff167fef3393883620fd592853ef61d4a33b35dd9fd9e4dc925bc5e1463919917423ab610e2d565b89516040517f0ff4c916000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401606060405180830381865afa158015610818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083c9190611841565b6000549091506108829073ffffffffffffffffffffffffffffffffffffffff167fdc70892ae22810336b1b3e3970e52ce30e6bd067541740d764e72825b722b06c610e2d565b73ffffffffffffffffffffffffffffffffffffffff16633e5879d48b6000015160405180608001604052808e602001516000015181526020018e6040015163ffffffff1681526020018e6060015167ffffffffffffffff168152602001856020015163ffffffff168152506040518363ffffffff1660e01b815260040161094d929190918252805160208084019190915281015163ffffffff90811660408085019190915282015167ffffffffffffffff166060808501919091529091015116608082015260a00190565b600060405180830381600087803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050508373ffffffffffffffffffffffffffffffffffffffff16634e6641a98b6000015160405180604001604052808960800151426109bb91906118aa565b67ffffffffffffffff1681526020016109d542600a6118aa565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b158015610a4a57600080fd5b505af1158015610a5e573d6000803e3d6000fd5b5050600054610aa6925073ffffffffffffffffffffffffffffffffffffffff1690507f3bd234c3ac242ccb68ea679d53643377673bad40b047c3f5a3313563fef9c068610e2d565b6040805180820182528c51815267ffffffffffffffff4281166020830190815292517fdf49b421000000000000000000000000000000000000000000000000000000008152600481018d9052915160248301529151909116604482015273ffffffffffffffffffffffffffffffffffffffff919091169063df49b42190606401600060405180830381600087803b158015610b4057600080fd5b505af1158015610b54573d6000803e3d6000fd5b505050505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bd5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bde81610f79565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b600080610cc3837fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610e2d565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161014060405180830381865afa158015610d0e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d329190611908565b805190915015610e25576040805160a080820183528651825260208088015190830152868301518284015260608088015190830152608080880151908301526101208401519087015160c088015160e089015194517f34baeab9000000000000000000000000000000000000000000000000000000008152939473ffffffffffffffffffffffffffffffffffffffff909316936334baeab993610ddb93929187906004016119f3565b602060405180830381865afa158015610df8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e1c9190611660565b92505050610e27565b505b92915050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e9d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ee39190810190611a77565b90508051600003610f50576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101cd565b610f7181600081518110610f6657610f66611b1d565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610bde928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160a0810167ffffffffffffffff8111828210171561107f5761107f61102d565b60405290565b604051610100810167ffffffffffffffff8111828210171561107f5761107f61102d565b604051610140810167ffffffffffffffff8111828210171561107f5761107f61102d565b6040805190810167ffffffffffffffff8111828210171561107f5761107f61102d565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111375761113761102d565b604052919050565b600067ffffffffffffffff8211156111595761115961102d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561119757600080fd5b813567ffffffffffffffff8111156111ae57600080fd5b8201601f810184136111bf57600080fd5b80356111d26111cd8261113f565b6110f0565b8181528560208385010111156111e757600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015611220578181015183820152602001611208565b8381111561122f576000848401525b50505050565b6020815260008251806020840152611254816040850160208701611205565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082601f83011261129757600080fd5b61129f6110cd565b8060408401858111156112b157600080fd5b845b818110156112cb5780358452602093840193016112b3565b509095945050505050565b600082601f8301126112e757600080fd5b6112ef6110cd565b80608084018581111561130157600080fd5b845b818110156112cb576113158782611286565b8452602090930192604001611303565b63ffffffff81168114610bde57600080fd5b803561134281611325565b919050565b67ffffffffffffffff81168114610bde57600080fd5b803561134281611347565b600081830361022081121561137c57600080fd5b61138461105c565b833581526101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830112156113b957600080fd5b6113c1611085565b91506020840135825260408401356020830152606084013560408301526080840135606083015260a084013560808301526113ff8560c08601611286565b60a08301526114128561010086016112d6565b60c0830152611425856101808601611286565b60e083015281602082015261143d6101c08501611337565b604082015261144f6101e0850161135d565b60608201526114616102008501611337565b6080820152949350505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610bde57600080fd5b6000602082840312156114a257600080fd5b81356100f28161146e565b600082601f8301126114be57600080fd5b6114c66110cd565b8060408401858111156114d857600080fd5b845b818110156112cb5780518452602093840193016114da565b600082601f83011261150357600080fd5b61150b6110cd565b80608084018581111561151d57600080fd5b845b818110156112cb5761153187826114ad565b845260209093019260400161151f565b805161134281611325565b805161134281611347565b600081830361022081121561156b57600080fd5b61157361105c565b835181526101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0830112156115a857600080fd5b6115b0611085565b91506020840151825260408401516020830152606084015160408301526080840151606083015260a084015160808301526115ee8560c086016114ad565b60a08301526116018561010086016114f2565b60c08301526116148561018086016114ad565b60e083015281602082015261162c6101c08501611541565b604082015261163e6101e0850161154c565b60608201526114616102008501611541565b8051801515811461134257600080fd5b60006020828403121561167257600080fd5b6100f282611650565b60006020828403121561168d57600080fd5b5051919050565b600082601f8301126116a557600080fd5b81516116b36111cd8261113f565b8181528460208386010111156116c857600080fd5b610f71826020830160208701611205565b805160ff8116811461134257600080fd5b6000602082840312156116fc57600080fd5b815167ffffffffffffffff8082111561171457600080fd5b90830190610100828603121561172957600080fd5b611731611085565b82518281111561174057600080fd5b61174c87828601611694565b82525060208301518281111561176157600080fd5b61176d87828601611694565b60208301525061177f604084016116d9565b6040820152611790606084016116d9565b60608201526117a16080840161154c565b60808201526117b260a0840161154c565b60a08201526117c360c08401611541565b60c08201526117d460e0840161154c565b60e082015295945050505050565b6000604082840312156117f457600080fd5b6040516040810181811067ffffffffffffffff821117156118175761181761102d565b604052825161182581611347565b8152602083015161183581611347565b60208201529392505050565b60006060828403121561185357600080fd5b6040516060810181811067ffffffffffffffff821117156118765761187661102d565b60405282518152602083015161188b81611325565b6020820152604083015161189e81611325565b60408201529392505050565b600067ffffffffffffffff8083168185168083038211156118f4577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b01949350505050565b80516113428161146e565b6000610140828403121561191b57600080fd5b6119236110a9565b61192c83611650565b815261193a602084016118fd565b602082015261194b604084016118fd565b604082015261195c606084016118fd565b606082015261196d608084016118fd565b608082015261197e60a084016118fd565b60a082015261198f60c084016118fd565b60c08201526119a060e084016118fd565b60e08201526101006119b38185016118fd565b908201526101206119c58482016118fd565b908201529392505050565b8060005b600281101561122f5781518452602093840193909101906001016119d4565b6101a08101611a0282876119d0565b60408083018660005b6002811015611a3257611a1f8383516119d0565b9183019160209190910190600101611a0b565b50505050611a4360c08301856119d0565b61010082018360005b6005811015611a6b578151835260209283019290910190600101611a4c565b50505095945050505050565b60006020808385031215611a8a57600080fd5b825167ffffffffffffffff80821115611aa257600080fd5b818501915085601f830112611ab657600080fd5b815181811115611ac857611ac861102d565b8060051b9150611ad98483016110f0565b8181529183018401918481019088841115611af357600080fd5b938501935b83851015611b1157845182529385019390850190611af8565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212205905cd65a46c7e28df5cf7f726a7d5d8b95c2a5e489a55c7ee4a91adc2898d5564736f6c634300080d0033";

type ChargeLinearTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChargeLinearTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChargeLinearTreasureSystem__factory extends ContractFactory {
  constructor(...args: ChargeLinearTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChargeLinearTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ChargeLinearTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ChargeLinearTreasureSystem {
    return super.attach(address) as ChargeLinearTreasureSystem;
  }
  override connect(signer: Signer): ChargeLinearTreasureSystem__factory {
    return super.connect(signer) as ChargeLinearTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChargeLinearTreasureSystemInterface {
    return new utils.Interface(_abi) as ChargeLinearTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChargeLinearTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChargeLinearTreasureSystem;
  }
}
