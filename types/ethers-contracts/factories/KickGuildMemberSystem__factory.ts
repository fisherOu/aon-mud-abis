/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  KickGuildMemberSystem,
  KickGuildMemberSystemInterface,
} from "../KickGuildMemberSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildCrestId",
            type: "uint256",
          },
        ],
        internalType: "struct KickMemberInfo",
        name: "info",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016bb380380620016bb83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200077c17901c565b5050505062000292565b600062000126620001ef60201b6200080d1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61141980620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a85bbf29146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610ff0565b6100cf565b60405161007191906110a0565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b53660046110f1565b61013e565b6100cd6100c8366004611115565b610700565b005b60606000828060200190518101906100e7919061114b565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b80516000805460609291339161018a9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610831565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c919061116f565b610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f637265737420696e76616c69640000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102cb9073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610831565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa15801561033c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103609190611191565b60008054919250906103a89073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610831565b6040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101889052909150859073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c9190611191565b1461044b5761044b828761097d565b6040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff851690634cc8221590602401600060405180830381600087803b1580156104b357600080fd5b505af11580156104c7573d6000803e3d6000fd5b50506040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff8416925063cccf7a8e9150602401602060405180830381865afa158015610536573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055a919061116f565b156105e0576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff821690634cc8221590602401600060405180830381600087803b1580156105c757600080fd5b505af11580156105db573d6000803e3d6000fd5b505050505b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa15801561064b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066f919061116f565b156106f5576040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff841690634cc8221590602401600060405180830381600087803b1580156106dc57600080fd5b505af11580156106f0573d6000803e3d6000fd5b505050505b505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610770576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61077981610e2c565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156108a1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108e791908101906111aa565b90508051600003610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161027e565b6109758160008151811061096a5761096a611250565b602002602001015190565b949350505050565b600080543391906109c49073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610831565b6000805491925090610a0c9073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610831565b6000805491925090610a549073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610831565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa158015610ac5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610b0b919081019061129c565b6040517ffbdfa1ea0000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff86169063fbdfa1ea90602401600060405180830381865afa158015610b7c573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610bc291908101906111aa565b90506000805b8251811015610db957898673ffffffffffffffffffffffffffffffffffffffff16630ff4c916858481518110610c0057610c00611250565b60200260200101516040518263ffffffff1660e01b8152600401610c2691815260200190565b602060405180830381865afa158015610c43573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c679190611191565b03610da75760008573ffffffffffffffffffffffffffffffffffffffff16630ff4c916858481518110610c9c57610c9c611250565b60200260200101516040518263ffffffff1660e01b8152600401610cc291815260200190565b600060405180830381865afa158015610cdf573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610d25919081019061129c565b8551815191925063ffffffff908116911611610d9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f686173206e6f20617574686f7269747900000000000000000000000000000000604482015260640161027e565b6001925050610db9565b80610db181611384565b915050610bc8565b5080610e21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6f70657261746f72206e6f7420696e206775696c640000000000000000000000604482015260640161027e565b505050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610779928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610f3257610f32610ee0565b60405290565b60405160a0810167ffffffffffffffff81118282101715610f3257610f32610ee0565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fa257610fa2610ee0565b604052919050565b600067ffffffffffffffff821115610fc457610fc4610ee0565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561100257600080fd5b813567ffffffffffffffff81111561101957600080fd5b8201601f8101841361102a57600080fd5b803561103d61103882610faa565b610f5b565b81815285602083850101111561105257600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b8381101561108b578181015183820152602001611073565b8381111561109a576000848401525b50505050565b60208152600082518060208401526110bf816040850160208701611070565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006020828403121561110357600080fd5b61110b610f0f565b9135825250919050565b60006020828403121561112757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b60006020828403121561115d57600080fd5b611165610f0f565b9151825250919050565b60006020828403121561118157600080fd5b815180151581146100f257600080fd5b6000602082840312156111a357600080fd5b5051919050565b600060208083850312156111bd57600080fd5b825167ffffffffffffffff808211156111d557600080fd5b818501915085601f8301126111e957600080fd5b8151818111156111fb576111fb610ee0565b8060051b915061120c848301610f5b565b818152918301840191848101908884111561122657600080fd5b938501935b838510156112445784518252938501939085019061122b565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805167ffffffffffffffff8116811461129757600080fd5b919050565b600060208083850312156112af57600080fd5b825167ffffffffffffffff808211156112c757600080fd5b9084019060a082870312156112db57600080fd5b6112e3610f38565b825163ffffffff811681146112f757600080fd5b8152828401518281111561130a57600080fd5b83019150601f8201871361131d57600080fd5b815161132b61103882610faa565b818152888683860101111561133f57600080fd5b61134e82878301888701611070565b8086840152505060408301516040820152606083015160608201526113756080840161127f565b60808201529695505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036113dc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea26469706673582212200217b81b57fc028dcabae3d9b2c09de4d23f10a0a8a1fa20d80fa86179fa7aa564736f6c634300080d0033";

type KickGuildMemberSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KickGuildMemberSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KickGuildMemberSystem__factory extends ContractFactory {
  constructor(...args: KickGuildMemberSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KickGuildMemberSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<KickGuildMemberSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): KickGuildMemberSystem {
    return super.attach(address) as KickGuildMemberSystem;
  }
  override connect(signer: Signer): KickGuildMemberSystem__factory {
    return super.connect(signer) as KickGuildMemberSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KickGuildMemberSystemInterface {
    return new utils.Interface(_abi) as KickGuildMemberSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KickGuildMemberSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KickGuildMemberSystem;
  }
}
