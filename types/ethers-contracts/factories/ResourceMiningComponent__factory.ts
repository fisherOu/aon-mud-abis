/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ResourceMiningComponent,
  ResourceMiningComponentInterface,
} from "../ResourceMiningComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "remain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cache",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceMining",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "remain",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "cache",
            type: "uint256",
          },
        ],
        internalType: "struct ResourceMining",
        name: "resourceMining",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200151a3803806200151a833981016040819052620000349162000200565b807fd5747a44473606564dfdf7f7fb1c2cfb3f1b11f42a6343d7a6a8b0a0eee1235162000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000afd1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000afd1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6112d880620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638bbf68fe116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102c7578063cccf7a8e146102da578063f2fde38b146102ed57600080fd5b8063b361be4614610294578063b8bc073d146102a757600080fd5b80638bbf68fe1461024f5780638da5cb5b146102625780639d2c76b41461026a578063af640d0f1461027d57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610206578063861eb905146102195780638b2829471461023c57600080fd5b80634fef6a38146101dd5780636b122fe0146101f057600080fd5b80630ff4c9161461013b57806330b67baa1461016e57806331b933b9146101b35780634cc82215146101c8575b600080fd5b61014e610149366004610dc4565b610300565b604080518251815260209283015192810192909252015b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb61034d565b6040516101659190610ddd565b6101db6101d6366004610dc4565b610381565b005b6101db6101eb366004610e21565b6103cc565b6101f86104aa565b604051610165929190610ef8565b6101db610214366004610e21565b610631565b61022c610227366004610e21565b610663565b6040519015158152602001610165565b6101db61024a3660046110c2565b6106ee565b6101db61025d366004611109565b61073b565b61018e610777565b6101db610278366004610e21565b6107bc565b61028660025481565b604051908152602001610165565b6101bb6102a2366004611193565b61034d565b6102ba6102b5366004610dc4565b6108e5565b60405161016591906111d0565b6101db6102d5366004610e21565b610987565b61022c6102e8366004610dc4565b610a62565b6101db6102fb366004610e21565b610a84565b6040805180820190915260008082526020820152600080610320846108e5565b80602001905181019061033391906111e3565b604080518082019091529182526020820152949350505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038a33610663565b6103c0576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c981610b21565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461043c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816104c557505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600681526020017f72656d61696e00000000000000000000000000000000000000000000000000008152508260008151811061054557610545611207565b6020026020010181905250600d8160008151811061056557610565611207565b6020026020010190602181111561057e5761057e610ec9565b9081602181111561059157610591610ec9565b815250506040518060400160405280600581526020017f6361636865000000000000000000000000000000000000000000000000000000815250826001815181106105de576105de611207565b6020026020010181905250600d816001815181106105fe576105fe611207565b6020026020010190602181111561061757610617610ec9565b9081602181111561062a5761062a610ec9565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106e857506106b9610777565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6106f733610663565b61072d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107378282610b8f565b5050565b6107378282600001518360200151604051602001610763929190918252602082015260400190565b6040516020818303038152906040526106ee565b60006107b77f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461082c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108ca57600080fd5b505af11580156108de573d6000803e3d6000fd5b5050505050565b600081815260016020526040902080546060919061090290611236565b80601f016020809104026020016040519081016040528092919081815260200182805461092e90611236565b801561097b5780601f106109505761010080835404028352916020019161097b565b820191906000526020600020905b81548152906001019060200180831161095e57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109f7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610a7b90611236565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610af4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c981610c3d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b3891610cf1565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016108b0565b60008281526001602090815260409091208251610bae92840190610d2b565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c079085908590600401611289565b600060405180830381600087803b158015610c2157600080fd5b505af1158015610c35573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103c9928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610cfd90611236565b6000825580601f10610d0d575050565b601f0160209004906000526020600020908101906103c99190610daf565b828054610d3790611236565b90600052602060002090601f016020900481019282610d595760008555610d9f565b82601f10610d7257805160ff1916838001178555610d9f565b82800160010185558215610d9f579182015b82811115610d9f578251825591602001919060010190610d84565b50610dab929150610daf565b5090565b5b80821115610dab5760008155600101610db0565b600060208284031215610dd657600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e1557835183529284019291840191600101610df9565b50909695505050505050565b600060208284031215610e3357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e5757600080fd5b9392505050565b6000815180845260005b81811015610e8457602081850181015186830182015201610e68565b81811115610e96576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610f6d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610f5b868351610e5e565b95509382019390820190600101610f21565b50508584038187015286518085528782019482019350915060005b82811015610fdb57845160228110610fc9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610f88565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261102857600080fd5b813567ffffffffffffffff8082111561104357611043610fe8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561108957611089610fe8565b816040528381528660208588010111156110a257600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156110d557600080fd5b82359150602083013567ffffffffffffffff8111156110f357600080fd5b6110ff85828601611017565b9150509250929050565b600080828403606081121561111d57600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561115157600080fd5b506040516040810181811067ffffffffffffffff8211171561117557611175610fe8565b60409081526020858101358352940135938101939093525092909150565b6000602082840312156111a557600080fd5b813567ffffffffffffffff8111156111bc57600080fd5b6111c884828501611017565b949350505050565b602081526000610e576020830184610e5e565b600080604083850312156111f657600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061124a57607f821691505b602082108103611283577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006111c86040830184610e5e56fea2646970667358221220c0fa29ecd7e8fc6272939859bb6b4b8dfcf52b820e090fff6a3fe0985b478a1364736f6c634300080d0033";

type ResourceMiningComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResourceMiningComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResourceMiningComponent__factory extends ContractFactory {
  constructor(...args: ResourceMiningComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResourceMiningComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<ResourceMiningComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ResourceMiningComponent {
    return super.attach(address) as ResourceMiningComponent;
  }
  override connect(signer: Signer): ResourceMiningComponent__factory {
    return super.connect(signer) as ResourceMiningComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceMiningComponentInterface {
    return new utils.Interface(_abi) as ResourceMiningComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceMiningComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ResourceMiningComponent;
  }
}
