/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MapConfigv2Component,
  MapConfigv2ComponentInterface,
} from "../MapConfigv2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "resourceDifficulty",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "treasureDifficulty",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameOriginX",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameOriginY",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameRadiusX",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameRadiusY",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "decimals",
            type: "uint64",
          },
        ],
        internalType: "struct MapConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "resourceDifficulty",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "treasureDifficulty",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameOriginX",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameOriginY",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameRadiusX",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "gameRadiusY",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "decimals",
            type: "uint64",
          },
        ],
        internalType: "struct MapConfig",
        name: "mapConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019e5380380620019e5833981016040819052620000349162000200565b807f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b7662000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000efc1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000efc1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6117a380620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e14610313578063cccf7a8e14610326578063f2fde38b1461033957600080fd5b8063b361be46146102e0578063b8bc073d146102f357600080fd5b80638b2829471461029b5780638da5cb5b146102ae5780639d2c76b4146102b6578063af640d0f146102c957600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610252578063861eb905146102655780638729e21b1461028857600080fd5b80634fef6a38146102295780636b122fe01461023c57600080fd5b8063209652551461013b57806330b67baa146101ba57806331b933b9146101ff5780634cc8221514610214575b600080fd5b61014361034c565b6040516101b19190600060e08201905067ffffffffffffffff8084511683528060208501511660208401528060408501511660408401528060608501511660608401528060808501511660808401528060a08501511660a08401528060c08501511660c08401525092915050565b60405180910390f35b6000546101da9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b1565b6102076103fd565b6040516101b191906111c3565b610227610222366004611207565b610431565b005b610227610237366004611220565b61047c565b61024461055a565b6040516101b19291906112f7565b610227610260366004611220565b6109e0565b610278610273366004611220565b610a12565b60405190151581526020016101b1565b61022761029636600461143c565b610a9d565b6102276102a936600461159f565b610b29565b6101da610b76565b6102276102c4366004611220565b610bbb565b6102d260025481565b6040519081526020016101b1565b6102076102ee3660046115e6565b6103fd565b610306610301366004611207565b610ce4565b6040516101b19190611623565b610227610321366004611220565b610d86565b610278610334366004611207565b610e61565b610227610347366004611220565b610e83565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c081018290529080808080808061039661060d610ce4565b8060200190518101906103a99190611636565b6040805160e08101825267ffffffffffffffff9889168152968816602088015294871694860194909452918516606085015284166080840152831660a083015290911660c082015298975050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043a33610a12565b610470576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047981610f20565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104ec576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160078082526101008201909252606091829190816020015b606081526020019060019003908161057657505060408051600780825261010082019092529193506020820160e0803683370190505090506040518060400160405280601281526020017f7265736f75726365446966666963756c74790000000000000000000000000000815250826000815181106105f7576105f76116d2565b6020026020010181905250600b81600081518110610617576106176116d2565b60200260200101906021811115610630576106306112c8565b90816021811115610643576106436112c8565b815250506040518060400160405280601281526020017f7472656173757265446966666963756c7479000000000000000000000000000081525082600181518110610690576106906116d2565b6020026020010181905250600b816001815181106106b0576106b06116d2565b602002602001019060218111156106c9576106c96112c8565b908160218111156106dc576106dc6112c8565b815250506040518060400160405280600b81526020017f67616d654f726967696e5800000000000000000000000000000000000000000081525082600281518110610729576107296116d2565b6020026020010181905250600b81600281518110610749576107496116d2565b60200260200101906021811115610762576107626112c8565b90816021811115610775576107756112c8565b815250506040518060400160405280600b81526020017f67616d654f726967696e59000000000000000000000000000000000000000000815250826003815181106107c2576107c26116d2565b6020026020010181905250600b816003815181106107e2576107e26116d2565b602002602001019060218111156107fb576107fb6112c8565b9081602181111561080e5761080e6112c8565b815250506040518060400160405280600b81526020017f67616d65526164697573580000000000000000000000000000000000000000008152508260048151811061085b5761085b6116d2565b6020026020010181905250600b8160048151811061087b5761087b6116d2565b60200260200101906021811115610894576108946112c8565b908160218111156108a7576108a76112c8565b815250506040518060400160405280600b81526020017f67616d6552616469757359000000000000000000000000000000000000000000815250826005815181106108f4576108f46116d2565b6020026020010181905250600b81600581518110610914576109146116d2565b6020026020010190602181111561092d5761092d6112c8565b90816021811115610940576109406112c8565b815250506040518060400160405280600881526020017f646563696d616c730000000000000000000000000000000000000000000000008152508260068151811061098d5761098d6116d2565b6020026020010181905250600b816006815181106109ad576109ad6116d2565b602002602001019060218111156109c6576109c66112c8565b908160218111156109d9576109d96112c8565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a975750610a68610b76565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61047961060d826000015183602001518460400151856060015186608001518760a001518860c00151604051602001610b19979695949392919067ffffffffffffffff978816815295871660208701529386166040860152918516606085015284166080840152831660a083015290911660c082015260e00190565b6040516020818303038152906040525b610b3233610a12565b610b68576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b728282610f8e565b5050565b6000610bb67f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c2b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610cc957600080fd5b505af1158015610cdd573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610d0190611701565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2d90611701565b8015610d7a5780601f10610d4f57610100808354040283529160200191610d7a565b820191906000526020600020905b815481529060010190602001808311610d5d57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610df6576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610e7a90611701565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ef3576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104798161103c565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f37916110f0565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610caf565b60008281526001602090815260409091208251610fad9284019061112a565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110069085908590600401611754565b600060405180830381600087803b15801561102057600080fd5b505af1158015611034573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610479928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546110fc90611701565b6000825580601f1061110c575050565b601f01602090049060005260206000209081019061047991906111ae565b82805461113690611701565b90600052602060002090601f016020900481019282611158576000855561119e565b82601f1061117157805160ff191683800117855561119e565b8280016001018555821561119e579182015b8281111561119e578251825591602001919060010190611183565b506111aa9291506111ae565b5090565b5b808211156111aa57600081556001016111af565b6020808252825182820181905260009190848201906040850190845b818110156111fb578351835292840192918401916001016111df565b50909695505050505050565b60006020828403121561121957600080fd5b5035919050565b60006020828403121561123257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461125657600080fd5b9392505050565b6000815180845260005b8181101561128357602081850181015186830182015201611267565b81811115611295576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561136c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261135a86835161125d565b95509382019390820190600101611320565b50508584038187015286518085528782019482019350915060005b828110156113da578451602281106113c8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611387565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8116811461047957600080fd5b803561143781611416565b919050565b600060e0828403121561144e57600080fd5b60405160e0810181811067ffffffffffffffff82111715611471576114716113e7565b604052823561147f81611416565b8152602083013561148f81611416565b602082015260408301356114a281611416565b604082015260608301356114b581611416565b60608201526114c66080840161142c565b60808201526114d760a0840161142c565b60a08201526114e860c0840161142c565b60c08201529392505050565b600082601f83011261150557600080fd5b813567ffffffffffffffff80821115611520576115206113e7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611566576115666113e7565b8160405283815286602085880101111561157f57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156115b257600080fd5b82359150602083013567ffffffffffffffff8111156115d057600080fd5b6115dc858286016114f4565b9150509250929050565b6000602082840312156115f857600080fd5b813567ffffffffffffffff81111561160f57600080fd5b61161b848285016114f4565b949350505050565b602081526000611256602083018461125d565b600080600080600080600060e0888a03121561165157600080fd5b875161165c81611416565b602089015190975061166d81611416565b604089015190965061167e81611416565b606089015190955061168f81611416565b60808901519094506116a081611416565b60a08901519093506116b181611416565b60c08901519092506116c281611416565b8091505092959891949750929550565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061171557607f821691505b60208210810361174e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061161b604083018461125d56fea2646970667358221220c2210c34d878eb752adee3cbdeb8425668396c4a02c54a4cbafb900829b824a564736f6c634300080d0033";

type MapConfigv2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MapConfigv2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MapConfigv2Component__factory extends ContractFactory {
  constructor(...args: MapConfigv2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MapConfigv2Component> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<MapConfigv2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): MapConfigv2Component {
    return super.attach(address) as MapConfigv2Component;
  }
  override connect(signer: Signer): MapConfigv2Component__factory {
    return super.connect(signer) as MapConfigv2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MapConfigv2ComponentInterface {
    return new utils.Interface(_abi) as MapConfigv2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MapConfigv2Component {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MapConfigv2Component;
  }
}
