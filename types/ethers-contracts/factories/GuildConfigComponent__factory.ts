/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GuildConfigComponent,
  GuildConfigComponentInterface,
} from "../GuildConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "initTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basicCountLimit",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "initNameForLevel0",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel1",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel2",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel3",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel4",
            type: "string",
          },
        ],
        internalType: "struct GuildConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "createCost",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "initTaxRate",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "basicCountLimit",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "initNameForLevel0",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel1",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel2",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel3",
            type: "string",
          },
          {
            internalType: "string",
            name: "initNameForLevel4",
            type: "string",
          },
        ],
        internalType: "struct GuildConfig",
        name: "guildConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d1e38038062001d1e833981016040819052620000349162000200565b807ff899011875ecdd0cff874cbbf66c1a2682791e10ae993d0a0ef3d2530849a7de62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f1e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f1e1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611adc80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634fef6a38116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634fef6a38146101c857806361b9b2bc146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b604051610150919061125f565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a66103b8565b604051610150919061134f565b6101c66101c1366004611393565b6103ec565b005b6101c66101d63660046113ac565b610437565b6101c66101e936600461154f565b610515565b6101f661056e565b6040516101509291906116a8565b6101c66102123660046113ac565b610a8e565b61022a6102253660046113ac565b610ac0565b6040519015158152602001610150565b6101c6610248366004611798565b610b4b565b610179610b98565b6101c66102633660046113ac565b610bdd565b61027160025481565b604051908152602001610150565b6101a661028d3660046117df565b6103b8565b6102a56102a0366004611393565b610d06565b604051610150919061181c565b6101c66102c03660046113ac565b610da8565b61022a6102d3366004611393565b610e83565b6101c66102e63660046113ac565b610ea5565b61033f60405180610100016040528060008152602001600063ffffffff168152602001600063ffffffff16815260200160608152602001606081526020016060815260200160608152602001606081525090565b60008060008060008060008061035661060d610d06565b806020019051810190610369919061187f565b604080516101008101825298895263ffffffff97881660208a015295909616948701949094526060860192909252608085015260a084015260c083015260e08201529998505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f533610ac0565b61042b576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043481610f42565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104a7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61043461060d826000015183602001518460400151856060015186608001518760a001518860c001518960e0015160405160200161055a98979695949392919061197c565b604051602081830303815290604052610b4b565b6040805160088082526101208201909252606091829190816020015b606081526020019060019003908161058a575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600a81526020017f637265617465436f7374000000000000000000000000000000000000000000008152508260008151811061060c5761060c611a0b565b6020026020010181905250600d8160008151811061062c5761062c611a0b565b6020026020010190602181111561064557610645611679565b9081602181111561065857610658611679565b815250506040518060400160405280600b81526020017f696e697454617852617465000000000000000000000000000000000000000000815250826001815181106106a5576106a5611a0b565b6020026020010181905250600a816001815181106106c5576106c5611a0b565b602002602001019060218111156106de576106de611679565b908160218111156106f1576106f1611679565b815250506040518060400160405280600f81526020017f6261736963436f756e744c696d697400000000000000000000000000000000008152508260028151811061073e5761073e611a0b565b6020026020010181905250600a8160028151811061075e5761075e611a0b565b6020026020010190602181111561077757610777611679565b9081602181111561078a5761078a611679565b815250506040518060400160405280601181526020017f696e69744e616d65466f724c6576656c30000000000000000000000000000000815250826003815181106107d7576107d7611a0b565b6020026020010181905250600f816003815181106107f7576107f7611a0b565b6020026020010190602181111561081057610810611679565b9081602181111561082357610823611679565b815250506040518060400160405280601181526020017f696e69744e616d65466f724c6576656c310000000000000000000000000000008152508260048151811061087057610870611a0b565b6020026020010181905250600f8160048151811061089057610890611a0b565b602002602001019060218111156108a9576108a9611679565b908160218111156108bc576108bc611679565b815250506040518060400160405280601181526020017f696e69744e616d65466f724c6576656c320000000000000000000000000000008152508260058151811061090957610909611a0b565b6020026020010181905250600f8160058151811061092957610929611a0b565b6020026020010190602181111561094257610942611679565b9081602181111561095557610955611679565b815250506040518060400160405280601181526020017f696e69744e616d65466f724c6576656c33000000000000000000000000000000815250826006815181106109a2576109a2611a0b565b6020026020010181905250600f816006815181106109c2576109c2611a0b565b602002602001019060218111156109db576109db611679565b908160218111156109ee576109ee611679565b815250506040518060400160405280601181526020017f696e69744e616d65466f724c6576656c3400000000000000000000000000000081525082600781518110610a3b57610a3b611a0b565b6020026020010181905250600f81600781518110610a5b57610a5b611a0b565b60200260200101906021811115610a7457610a74611679565b90816021811115610a8757610a87611679565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610b455750610b16610b98565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610b5433610ac0565b610b8a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b948282610fb0565b5050565b6000610bd87f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c4d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610ceb57600080fd5b505af1158015610cff573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610d2390611a3a565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4f90611a3a565b8015610d9c5780601f10610d7157610100808354040283529160200191610d9c565b820191906000526020600020905b815481529060010190602001808311610d7f57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e18576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610e9c90611a3a565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f15576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104348161105e565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f5991611112565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610cd1565b60008281526001602090815260409091208251610fcf9284019061114c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110289085908590600401611a8d565b600060405180830381600087803b15801561104257600080fd5b505af1158015611056573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610434928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461111e90611a3a565b6000825580601f1061112e575050565b601f01602090049060005260206000209081019061043491906111d0565b82805461115890611a3a565b90600052602060002090601f01602090048101928261117a57600085556111c0565b82601f1061119357805160ff19168380011785556111c0565b828001600101855582156111c0579182015b828111156111c05782518255916020019190600101906111a5565b506111cc9291506111d0565b5090565b5b808211156111cc57600081556001016111d1565b60005b838110156112005781810151838201526020016111e8565b8381111561120f576000848401525b50505050565b6000815180845261122d8160208601602086016111e5565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015260006020830151611283604084018263ffffffff169052565b50604083015163ffffffff811660608401525060608301516101008060808501526112b2610120850183611215565b915060808501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808685030160a08701526112ee8483611215565b935060a08701519150808685030160c087015261130b8483611215565b935060c08701519150808685030160e08701526113288483611215565b935060e08701519150808685030183870152506113458382611215565b9695505050505050565b6020808252825182820181905260009190848201906040850190845b818110156113875783518352928401929184019160010161136b565b50909695505050505050565b6000602082840312156113a557600080fd5b5035919050565b6000602082840312156113be57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113e257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561143c5761143c6113e9565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611489576114896113e9565b604052919050565b63ffffffff8116811461043457600080fd5b80356114ae81611491565b919050565b600067ffffffffffffffff8211156114cd576114cd6113e9565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261150a57600080fd5b813561151d611518826114b3565b611442565b81815284602083860101111561153257600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561156157600080fd5b813567ffffffffffffffff8082111561157957600080fd5b90830190610100828603121561158e57600080fd5b611596611418565b823581526115a6602084016114a3565b60208201526115b7604084016114a3565b60408201526060830135828111156115ce57600080fd5b6115da878286016114f9565b6060830152506080830135828111156115f257600080fd5b6115fe878286016114f9565b60808301525060a08301358281111561161657600080fd5b611622878286016114f9565b60a08301525060c08301358281111561163a57600080fd5b611646878286016114f9565b60c08301525060e08301358281111561165e57600080fd5b61166a878286016114f9565b60e08301525095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561171d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261170b868351611215565b955093820193908201906001016116d1565b50508584038187015286518085528782019482019350915060005b8281101561178b57845160228110611779577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611738565b5091979650505050505050565b600080604083850312156117ab57600080fd5b82359150602083013567ffffffffffffffff8111156117c957600080fd5b6117d5858286016114f9565b9150509250929050565b6000602082840312156117f157600080fd5b813567ffffffffffffffff81111561180857600080fd5b611814848285016114f9565b949350505050565b6020815260006113e26020830184611215565b80516114ae81611491565b600082601f83011261184b57600080fd5b8151611859611518826114b3565b81815284602083860101111561186e57600080fd5b6118148260208301602087016111e5565b600080600080600080600080610100898b03121561189c57600080fd5b885197506118ac60208a0161182f565b96506118ba60408a0161182f565b9550606089015167ffffffffffffffff808211156118d757600080fd5b6118e38c838d0161183a565b965060808b01519150808211156118f957600080fd5b6119058c838d0161183a565b955060a08b015191508082111561191b57600080fd5b6119278c838d0161183a565b945060c08b015191508082111561193d57600080fd5b6119498c838d0161183a565b935060e08b015191508082111561195f57600080fd5b5061196c8b828c0161183a565b9150509295985092959890939650565b60006101008a835263ffffffff808b166020850152808a166040850152508060608401526119ac81840189611215565b905082810360808401526119c08188611215565b905082810360a08401526119d48187611215565b905082810360c08401526119e88186611215565b905082810360e08401526119fc8185611215565b9b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611a4e57607f821691505b602082108103611a87577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000611814604083018461121556fea2646970667358221220070e63a0af6d06d6532a3dc992c313358aec6548b99ba3ce8dd5373677f8614e64736f6c634300080d0033";

type GuildConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuildConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuildConfigComponent__factory extends ContractFactory {
  constructor(...args: GuildConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GuildConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<GuildConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): GuildConfigComponent {
    return super.attach(address) as GuildConfigComponent;
  }
  override connect(signer: Signer): GuildConfigComponent__factory {
    return super.connect(signer) as GuildConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuildConfigComponentInterface {
    return new utils.Interface(_abi) as GuildConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuildConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GuildConfigComponent;
  }
}
