/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ResourceBuildingComponent,
  ResourceBuildingComponentInterface,
} from "../ResourceBuildingComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
        ],
        internalType: "struct ResourceBuilding",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "value",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "timeout",
            type: "uint64",
          },
        ],
        internalType: "struct ResourceBuilding",
        name: "resourceBuilding",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200159c3803806200159c833981016040819052620000349162000200565b807f84597150db3a8cb31c3f847642911238944cee9a3b5f1ab47777bca06e6660e362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000b2e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000b2e1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61135a80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102d7578063cccf7a8e146102ea578063f2fde38b146102fd57600080fd5b8063b361be46146102a4578063b8bc073d146102b757600080fd5b80638b2829471461025f5780638da5cb5b146102725780639d2c76b41461027a578063af640d0f1461028d57600080fd5b80634fef6a38116101095780636b122fe0116100ee5780636b122fe01461021357806375c0669c14610229578063861eb9051461023c57600080fd5b80634fef6a38146101ed5780635bccf83b1461020057600080fd5b80630ff4c9161461013b57806330b67baa1461017e57806331b933b9146101c35780634cc82215146101d8575b600080fd5b61014e610149366004610df5565b610310565b60408051825163ffffffff16815260209283015167ffffffffffffffff1692810192909252015b60405180910390f35b60005461019e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610175565b6101cb61036e565b6040516101759190610e0e565b6101eb6101e6366004610df5565b6103a2565b005b6101eb6101fb366004610e52565b6103ed565b6101eb61020e366004610ee6565b6104cb565b61021b61051d565b60405161017592919061101d565b6101eb610237366004610e52565b6106a2565b61024f61024a366004610e52565b6106d4565b6040519015158152602001610175565b6101eb61026d3660046111b8565b61075f565b61019e6107a8565b6101eb610288366004610e52565b6107ed565b61029660025481565b604051908152602001610175565b6101cb6102b23660046111ff565b61036e565b6102ca6102c5366004610df5565b610916565b604051610175919061123c565b6101eb6102e5366004610e52565b6109b8565b61024f6102f8366004610df5565b610a93565b6101eb61030b366004610e52565b610ab5565b604080518082019091526000808252602082015260008061033084610916565b806020019051810190610343919061124f565b6040805180820190915263ffffffff909216825267ffffffffffffffff166020820152949350505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ab336106d4565b6103e1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ea81610b52565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461045d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b610519828260000151836020015160405160200161050592919063ffffffff92909216825267ffffffffffffffff16602082015260400190565b60405160208183030381529060405261075f565b5050565b6040805160028082526060828101909352829190816020015b606081526020019060019003908161053657505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600581526020017f76616c7565000000000000000000000000000000000000000000000000000000815250826000815181106105b6576105b6611289565b6020026020010181905250600a816000815181106105d6576105d6611289565b602002602001019060218111156105ef576105ef610fee565b9081602181111561060257610602610fee565b815250506040518060400160405280600781526020017f74696d656f7574000000000000000000000000000000000000000000000000008152508260018151811061064f5761064f611289565b6020026020010181905250600b8160018151811061066f5761066f611289565b6020026020010190602181111561068857610688610fee565b9081602181111561069b5761069b610fee565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610759575061072a6107a8565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610768336106d4565b61079e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105198282610bc0565b60006107e87f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461085d576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108fb57600080fd5b505af115801561090f573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610933906112b8565b80601f016020809104026020016040519081016040528092919081815260200182805461095f906112b8565b80156109ac5780601f10610981576101008083540402835291602001916109ac565b820191906000526020600020905b81548152906001019060200180831161098f57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a28576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610aac906112b8565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b25576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103ea81610c6e565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b6991610d22565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016108e1565b60008281526001602090815260409091208251610bdf92840190610d5c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c38908590859060040161130b565b600060405180830381600087803b158015610c5257600080fd5b505af1158015610c66573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103ea928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d2e906112b8565b6000825580601f10610d3e575050565b601f0160209004906000526020600020908101906103ea9190610de0565b828054610d68906112b8565b90600052602060002090601f016020900481019282610d8a5760008555610dd0565b82601f10610da357805160ff1916838001178555610dd0565b82800160010185558215610dd0579182015b82811115610dd0578251825591602001919060010190610db5565b50610ddc929150610de0565b5090565b5b80821115610ddc5760008155600101610de1565b600060208284031215610e0757600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e4657835183529284019291840191600101610e2a565b50909695505050505050565b600060208284031215610e6457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e8857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b63ffffffff811681146103ea57600080fd5b67ffffffffffffffff811681146103ea57600080fd5b6000808284036060811215610efa57600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082011215610f2e57600080fd5b506040516040810181811067ffffffffffffffff82111715610f5257610f52610e8f565b6040526020840135610f6381610ebe565b81526040840135610f7381610ed0565b6020820152919491935090915050565b6000815180845260005b81811015610fa957602081850181015186830182015201610f8d565b81811115610fbb576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611092577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611080868351610f83565b95509382019390820190600101611046565b50508584038187015286518085528782019482019350915060005b82811015611100578451602281106110ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016110ad565b5091979650505050505050565b600082601f83011261111e57600080fd5b813567ffffffffffffffff8082111561113957611139610e8f565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561117f5761117f610e8f565b8160405283815286602085880101111561119857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111cb57600080fd5b82359150602083013567ffffffffffffffff8111156111e957600080fd5b6111f58582860161110d565b9150509250929050565b60006020828403121561121157600080fd5b813567ffffffffffffffff81111561122857600080fd5b6112348482850161110d565b949350505050565b602081526000610e886020830184610f83565b6000806040838503121561126257600080fd5b825161126d81610ebe565b602084015190925061127e81610ed0565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806112cc57607f821691505b602082108103611305577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006112346040830184610f8356fea26469706673582212206914848a3338a69c848fe891b16889638c5aa1aec3f2e532aa9be44d3ca62a4464736f6c634300080d0033";

type ResourceBuildingComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ResourceBuildingComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ResourceBuildingComponent__factory extends ContractFactory {
  constructor(...args: ResourceBuildingComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ResourceBuildingComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<ResourceBuildingComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): ResourceBuildingComponent {
    return super.attach(address) as ResourceBuildingComponent;
  }
  override connect(signer: Signer): ResourceBuildingComponent__factory {
    return super.connect(signer) as ResourceBuildingComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ResourceBuildingComponentInterface {
    return new utils.Interface(_abi) as ResourceBuildingComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ResourceBuildingComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ResourceBuildingComponent;
  }
}
