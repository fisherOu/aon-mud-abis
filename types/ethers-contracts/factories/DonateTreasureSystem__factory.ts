/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  DonateTreasureSystem,
  DonateTreasureSystemInterface,
} from "../DonateTreasureSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "guildCrestId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "treasureId",
            type: "uint256",
          },
        ],
        internalType: "struct DonateTreasureInfo",
        name: "donateTreasureInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c5538038062001c5583398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000ada17901c565b5050505062000292565b600062000126620001ef60201b62000b6b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6119b380620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063b9462cf1146100a7578063f2fde38b146100ba575b600080fd5b61006461005f36600461121c565b6100cf565b6040516100719190611316565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004611329565b61013e565b6100cd6100c836600461135b565b610a5e565b005b60606000828060200190518101906100e79190611391565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b80516000805460609291339161018a9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610b8f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061021c91906113c3565b610287576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f637265737420696e76616c69640000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102cb9073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610b8f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610339573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035d91906113c3565b80156103f757506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101859052839073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156103d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f591906113e5565b145b61045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f6e6f74206f776e65720000000000000000000000000000000000000000000000604482015260640161027e565b600080546104a19073ffffffffffffffffffffffffffffffffffffffff167f53c6c48404020c13382f2b1b9b291c13f7e76aa44e5c76f2f9384b8aa97bfbe0610b8f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa15801561050f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053391906113c3565b6105bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f6e6f204775696c644772657374496420696e206775696c64637265737447756960448201527f6c64000000000000000000000000000000000000000000000000000000000000606482015260840161027e565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa15801561062d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065191906113e5565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c91690602401600060405180830381865afa1580156106c2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107089190810190611474565b60008054919250906107509073ffffffffffffffffffffffffffffffffffffffff167f47847aa6dad6656997b23b837b7a178fcf6ee815ad8065af73bc07856277a776610b8f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156107be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107e291906113c3565b610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f4775696c6420686173206e6f204775696c644964000000000000000000000000604482015260640161027e565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa1580156108b6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108fc9190810190611517565b9050600061090e8c6020015186610cdb565b90508015610a4f578084604001516109269190611617565b604080860191909152517fa829044000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff89169063a829044090610981908d908890600401611656565b600060405180830381600087803b15801561099b57600080fd5b505af11580156109af573d6000803e3d6000fd5b50505050808260e001516109c39190611617565b60e08301526040517fdc7e801000000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84169063dc7e801090610a1c90889086906004016116bd565b600060405180830381600087803b158015610a3657600080fd5b505af1158015610a4a573d6000803e3d6000fd5b505050505b50505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ace576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ad781611034565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610bff573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c45919081019061179f565b90508051600003610cb2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161027e565b610cd381600081518110610cc857610cc8611845565b602002602001015190565b949350505050565b6000805433908290610d239073ffffffffffffffffffffffffffffffffffffffff167f28b9f73e6b271728535a5e2b6da73f60f1fa049519ed11d9203e38922757cf06610b8f565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610d91573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db591906113c3565b8015610e4f57506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101869052829073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa158015610e29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e4d91906113e5565b145b610eb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f696e76616c696420747265617375726500000000000000000000000000000000604482015260640161027e565b6040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018690526024810185905273ffffffffffffffffffffffffffffffffffffffff821690631ab06ee590604401600060405180830381600087803b158015610f2457600080fd5b505af1158015610f38573d6000803e3d6000fd5b5050600054610f80925073ffffffffffffffffffffffffffffffffffffffff1690507f65188156108ab445e8ddb20e749f49402ca97dc723f07951b1c4a011dd8e1166610b8f565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916866040518263ffffffff1660e01b8152600401610fba91815260200190565b600060405180830381865afa158015610fd7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261101d9190810190611885565b60e0015167ffffffffffffffff1695945050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610ad7928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561113a5761113a6110e8565b60405290565b60405160a0810167ffffffffffffffff8111828210171561113a5761113a6110e8565b604051610100810167ffffffffffffffff8111828210171561113a5761113a6110e8565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156111ce576111ce6110e8565b604052919050565b600067ffffffffffffffff8211156111f0576111f06110e8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006020828403121561122e57600080fd5b813567ffffffffffffffff81111561124557600080fd5b8201601f8101841361125657600080fd5b8035611269611264826111d6565b611187565b81815285602083850101111561127e57600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b838110156112b757818101518382015260200161129f565b838111156112c6576000848401525b50505050565b600081518084526112e481602086016020860161129c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f260208301846112cc565b60006040828403121561133b57600080fd5b611343611117565b82358152602083013560208201528091505092915050565b60006020828403121561136d57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b6000604082840312156113a357600080fd5b6113ab611117565b82518152602083015160208201528091505092915050565b6000602082840312156113d557600080fd5b815180151581146100f257600080fd5b6000602082840312156113f757600080fd5b5051919050565b805163ffffffff8116811461141257600080fd5b919050565b600082601f83011261142857600080fd5b8151611436611264826111d6565b81815284602083860101111561144b57600080fd5b610cd382602083016020870161129c565b805167ffffffffffffffff8116811461141257600080fd5b60006020828403121561148657600080fd5b815167ffffffffffffffff8082111561149e57600080fd5b9083019060a082860312156114b257600080fd5b6114ba611140565b6114c3836113fe565b81526020830151828111156114d757600080fd5b6114e387828601611417565b60208301525060408301516040820152606083015160608201526115096080840161145c565b608082015295945050505050565b60006020828403121561152957600080fd5b815167ffffffffffffffff8082111561154157600080fd5b90830190610100828603121561155657600080fd5b61155e611163565b8251815260208301518281111561157457600080fd5b61158087828601611417565b60208301525060408301518281111561159857600080fd5b6115a487828601611417565b6040830152506060830151828111156115bc57600080fd5b6115c887828601611417565b6060830152506115da6080840161145c565b60808201526115eb60a084016113fe565b60a08201526115fc60c084016113fe565b60c082015260e083015160e082015280935050505092915050565b60008219821115611651577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b8281526040602082015263ffffffff82511660408201526000602083015160a0606084015261168860e08401826112cc565b905060408401516080840152606084015160a084015267ffffffffffffffff60808501511660c0840152809150509392505050565b8281526040602082015281516040820152600060208301516101008060608501526116ec6101408501836112cc565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08086850301608087015261172884836112cc565b935060608701519150808685030160a08701525061174683826112cc565b925050608085015161176460c086018267ffffffffffffffff169052565b5060a085015163ffffffff811660e08601525060c085015163ffffffff811685830152505060e0840151610120840152809150509392505050565b600060208083850312156117b257600080fd5b825167ffffffffffffffff808211156117ca57600080fd5b818501915085601f8301126117de57600080fd5b8151818111156117f0576117f06110e8565b8060051b9150611801848301611187565b818152918301840191848101908884111561181b57600080fd5b938501935b8385101561183957845182529385019390850190611820565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805160ff8116811461141257600080fd5b60006020828403121561189757600080fd5b815167ffffffffffffffff808211156118af57600080fd5b9083019061010082860312156118c457600080fd5b6118cc611163565b8251828111156118db57600080fd5b6118e787828601611417565b8252506020830151828111156118fc57600080fd5b61190887828601611417565b60208301525061191a60408401611874565b604082015261192b60608401611874565b606082015261193c6080840161145c565b608082015261194d60a0840161145c565b60a082015261195e60c084016113fe565b60c082015261196f60e0840161145c565b60e08201529594505050505056fea26469706673582212203ec89d3bce0c7061759d01a270c992e2c8e374480cc547dde7cc3b8e3040d04d64736f6c634300080d0033";

type DonateTreasureSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DonateTreasureSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DonateTreasureSystem__factory extends ContractFactory {
  constructor(...args: DonateTreasureSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DonateTreasureSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<DonateTreasureSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): DonateTreasureSystem {
    return super.attach(address) as DonateTreasureSystem;
  }
  override connect(signer: Signer): DonateTreasureSystem__factory {
    return super.connect(signer) as DonateTreasureSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DonateTreasureSystemInterface {
    return new utils.Interface(_abi) as DonateTreasureSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DonateTreasureSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DonateTreasureSystem;
  }
}
