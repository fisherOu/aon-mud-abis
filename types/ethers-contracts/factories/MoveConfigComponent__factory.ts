/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  MoveConfigComponent,
  MoveConfigComponentInterface,
} from "../MoveConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "initPoints",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "increaseCooldown",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxPoints",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxDistance",
            type: "uint64",
          },
        ],
        internalType: "struct MoveConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "initPoints",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "increaseCooldown",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxPoints",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "maxDistance",
            type: "uint64",
          },
        ],
        internalType: "struct MoveConfig",
        name: "moveConfig",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200171938038062001719833981016040819052620000349162000200565b807fdc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f762000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000cb01760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000cb01760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6114d780620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102e9578063cccf7a8e146102fc578063f2fde38b1461030f57600080fd5b8063b361be46146102b6578063b8bc073d146102c957600080fd5b80638b282947146102715780638da5cb5b146102845780639d2c76b41461028c578063af640d0f1461029f57600080fd5b80634fef6a38116101095780636cfb0e75116100ee5780636cfb0e751461022857806375c0669c1461023b578063861eb9051461024e57600080fd5b80634fef6a38146101ff5780636b122fe01461021257600080fd5b8063209652551461013b57806330b67baa1461019057806331b933b9146101d55780634cc82215146101ea575b600080fd5b610143610322565b6040516101879190815167ffffffffffffffff9081168252602080840151821690830152604080840151821690830152606092830151169181019190915260800190565b60405180910390f35b6000546101b09073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610187565b6101dd6103a2565b6040516101879190610f77565b6101fd6101f8366004610fbb565b6103d6565b005b6101fd61020d366004610fd4565b610421565b61021a6104ff565b6040516101879291906110ab565b6101fd6102363660046111e0565b6107b8565b6101fd610249366004610fd4565b610820565b61026161025c366004610fd4565b610852565b6040519015158152602001610187565b6101fd61027f366004611310565b6108dd565b6101b061092a565b6101fd61029a366004610fd4565b61096f565b6102a860025481565b604051908152602001610187565b6101dd6102c4366004611357565b6103a2565b6102dc6102d7366004610fbb565b610a98565b6040516101879190611394565b6101fd6102f7366004610fd4565b610b3a565b61026161030a366004610fbb565b610c15565b6101fd61031d366004610fd4565b610c37565b60408051608081018252600080825260208201819052918101829052606081018290529080808061035461060d610a98565b80602001905181019061036791906113a7565b6040805160808101825267ffffffffffffffff9586168152938516602085015291841691830191909152909116606082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103df33610852565b610415576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041e81610cd4565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610491576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b606081526020019060019003908161051a57505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600a81526020017f696e6974506f696e7473000000000000000000000000000000000000000000008152508260008151811061059a5761059a611406565b6020026020010181905250600b816000815181106105ba576105ba611406565b602002602001019060218111156105d3576105d361107c565b908160218111156105e6576105e661107c565b815250506040518060400160405280601081526020017f696e637265617365436f6f6c646f776e000000000000000000000000000000008152508260018151811061063357610633611406565b6020026020010181905250600b8160018151811061065357610653611406565b6020026020010190602181111561066c5761066c61107c565b9081602181111561067f5761067f61107c565b815250506040518060400160405280600981526020017f6d6178506f696e74730000000000000000000000000000000000000000000000815250826002815181106106cc576106cc611406565b6020026020010181905250600b816002815181106106ec576106ec611406565b602002602001019060218111156107055761070561107c565b908160218111156107185761071861107c565b815250506040518060400160405280600b81526020017f6d617844697374616e63650000000000000000000000000000000000000000008152508260038151811061076557610765611406565b6020026020010181905250600b8160038151811061078557610785611406565b6020026020010190602181111561079e5761079e61107c565b908160218111156107b1576107b161107c565b9052509091565b61041e61060d826000015183602001518460400151856060015160405160200161080c949392919067ffffffffffffffff948516815292841660208401529083166040830152909116606082015260800190565b6040516020818303038152906040526108dd565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806108d757506108a861092a565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6108e633610852565b61091c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109268282610d42565b5050565b600061096a7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109df576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610a7d57600080fd5b505af1158015610a91573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610ab590611435565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae190611435565b8015610b2e5780601f10610b0357610100808354040283529160200191610b2e565b820191906000526020600020905b815481529060010190602001808311610b1157829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610baa576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610c2e90611435565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ca7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041e81610df0565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610ceb91610ea4565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610a63565b60008281526001602090815260409091208251610d6192840190610ede565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610dba9085908590600401611488565b600060405180830381600087803b158015610dd457600080fd5b505af1158015610de8573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161041e928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610eb090611435565b6000825580601f10610ec0575050565b601f01602090049060005260206000209081019061041e9190610f62565b828054610eea90611435565b90600052602060002090601f016020900481019282610f0c5760008555610f52565b82601f10610f2557805160ff1916838001178555610f52565b82800160010185558215610f52579182015b82811115610f52578251825591602001919060010190610f37565b50610f5e929150610f62565b5090565b5b80821115610f5e5760008155600101610f63565b6020808252825182820181905260009190848201906040850190845b81811015610faf57835183529284019291840191600101610f93565b50909695505050505050565b600060208284031215610fcd57600080fd5b5035919050565b600060208284031215610fe657600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461100a57600080fd5b9392505050565b6000815180845260005b818110156110375760208185018101518683018201520161101b565b81811115611049576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611120577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261110e868351611011565b955093820193908201906001016110d4565b50508584038187015286518085528782019482019350915060005b8281101561118e5784516022811061117c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161113b565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8116811461041e57600080fd5b6000608082840312156111f257600080fd5b6040516080810181811067ffffffffffffffff821117156112155761121561119b565b6040528235611223816111ca565b81526020830135611233816111ca565b60208201526040830135611246816111ca565b60408201526060830135611259816111ca565b60608201529392505050565b600082601f83011261127657600080fd5b813567ffffffffffffffff808211156112915761129161119b565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156112d7576112d761119b565b816040528381528660208588010111156112f057600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561132357600080fd5b82359150602083013567ffffffffffffffff81111561134157600080fd5b61134d85828601611265565b9150509250929050565b60006020828403121561136957600080fd5b813567ffffffffffffffff81111561138057600080fd5b61138c84828501611265565b949350505050565b60208152600061100a6020830184611011565b600080600080608085870312156113bd57600080fd5b84516113c8816111ca565b60208601519094506113d9816111ca565b60408601519093506113ea816111ca565b60608601519092506113fb816111ca565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061144957607f821691505b602082108103611482577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061138c604083018461101156fea26469706673582212206a65a3ded88c0a2f12550fa922d361c8b9fb34e8ce36b063fac3ae8e8d4f521164736f6c634300080d0033";

type MoveConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MoveConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MoveConfigComponent__factory extends ContractFactory {
  constructor(...args: MoveConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MoveConfigComponent> {
    return super.deploy(world, overrides || {}) as Promise<MoveConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): MoveConfigComponent {
    return super.attach(address) as MoveConfigComponent;
  }
  override connect(signer: Signer): MoveConfigComponent__factory {
    return super.connect(signer) as MoveConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MoveConfigComponentInterface {
    return new utils.Interface(_abi) as MoveConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MoveConfigComponent {
    return new Contract(address, _abi, signerOrProvider) as MoveConfigComponent;
  }
}
