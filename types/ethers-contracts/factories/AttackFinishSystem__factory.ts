/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AttackFinishSystem,
  AttackFinishSystemInterface,
} from "../AttackFinishSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[50]",
            name: "input",
            type: "uint256[50]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct AttackFinishInfo",
        name: "attackInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c1b38038062001c1b83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000d8d17901c565b5050505062000292565b600062000126620001ef60201b62000e1e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61197980620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063ad739d4a146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004611153565b6100cf565b6040516100719190611206565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b536600461130b565b61013e565b6100cd6100c83660046113ed565b610d11565b005b60606000828060200190518101906100e79190611488565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091906101869073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610e42565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f4919061154c565b8051909150156103155760c081015160208401516040808601516060870151875192517fa63bed3700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9095169463a63bed37946102699490939291600401611613565b602060405180830381865afa158015610286573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102aa9190611697565b610315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c65642061747461636b2070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b6000805433919061035c9073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610e42565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa1580156103a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ca91906116ca565b60008054919250906104129073ffffffffffffffffffffffffffffffffffffffff167ff40b0a0f45abda3aa3c692e8980f39cdff332ccb76fb73bb91536eebf77739c2610e42565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a49190611697565b61050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6e6f74206368617267696e670000000000000000000000000000000000000000604482015260640161030c565b6040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101849052429073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190611750565b6020015167ffffffffffffffff161115610610576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6368617267696e67206e6f742066696e69736865640000000000000000000000604482015260640161030c565b600080546106549073ffffffffffffffffffffffffffffffffffffffff167f822902217469fa371c1a2cf8aec15ebcd1298447a4b5b1241e2882dd67e203da610e42565b600080549192509061069c9073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e427610e42565b60008054919250906106e49073ffffffffffffffffffffffffffffffffffffffff167f6c062316985e8e531501d3a588aed06abfad54c545ae238fe2d6f51a6ab9bee8610e42565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810188905290915073ffffffffffffffffffffffffffffffffffffffff84169063cccf7a8e90602401602060405180830381865afa158015610752573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107769190611697565b801561081157508851516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff851690630ff4c916906024016040805180830381865afa1580156107ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061080e91906117bc565b51145b610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f61747461636b206e6f742066726f6d20626567696e696e670000000000000000604482015260640161030c565b60005b600a811015610c845760808601518a5167ffffffffffffffff909116906108a283601e61181d565b603281106108b2576108b261178d565b6020020151111580156108f7575060a08601518a5167ffffffffffffffff909116906108df83602861181d565b603281106108ef576108ef61178d565b602002015111155b15610c725760008111801561092457508951600090826032811061091d5761091d61178d565b6020020151115b15610c725760008373ffffffffffffffffffffffffffffffffffffffff1663fbdfa1ea8c60000151846032811061095d5761095d61178d565b60200201516040518263ffffffff1660e01b815260040161098091815260200190565b600060405180830381865afa15801561099d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109e39190810190611835565b905080516000036109f45750610c72565b600081600081518110610a0957610a0961178d565b6020026020010151905060008473ffffffffffffffffffffffffffffffffffffffff16630ff4c916836040518263ffffffff1660e01b8152600401610a5091815260200190565b602060405180830381865afa158015610a6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9191906118db565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190611697565b8015610b2f5750600081115b15610c6e5773ffffffffffffffffffffffffffffffffffffffff8516631ab06ee583610b5c6001856118f4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610bb257600080fd5b505af1158015610bc6573d6000803e3d6000fd5b50505050600181610bd791906118f4565b600003610c66576040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526000602482015273ffffffffffffffffffffffffffffffffffffffff871690631ab06ee590604401600060405180830381600087803b158015610c4d57600080fd5b505af1158015610c61573d6000803e3d6000fd5b505050505b505050610c84565b5050505b80610c7c8161190b565b91505061087a565b506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810187905273ffffffffffffffffffffffffffffffffffffffff841690634cc8221590602401600060405180830381600087803b158015610ced57600080fd5b505af1158015610d01573d6000803e3d6000fd5b5050505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d81576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d8a81610f8e565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610eb2573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ef89190810190611835565b90508051600003610f65576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161030c565b610f8681600081518110610f7b57610f7b61178d565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610d8a928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561109457611094611042565b60405290565b60405160e0810167ffffffffffffffff8111828210171561109457611094611042565b6040805190810167ffffffffffffffff8111828210171561109457611094611042565b604051610640810167ffffffffffffffff8111828210171561109457611094611042565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561114b5761114b611042565b604052919050565b6000602080838503121561116657600080fd5b823567ffffffffffffffff8082111561117e57600080fd5b818501915085601f83011261119257600080fd5b8135818111156111a4576111a4611042565b6111d4847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611104565b915080825286848285010111156111ea57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b8181101561123357858101830151858201604001528201611217565b81811115611245576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60006112836110e0565b90508061064083018481111561129857600080fd5b835b818110156112b257803583526020928301920161129a565b50505092915050565b600082601f8301126112cc57600080fd5b6112d46110bd565b8060408401858111156112e657600080fd5b845b818110156113005780358452602093840193016112e8565b509095945050505050565b6000610740828403121561131e57600080fd5b611326611071565b83601f84011261133557600080fd5b61133f8484611279565b815261134f8461064085016112bb565b602081818401528561069f86011261136657600080fd5b61136e6110bd565b91508161070086018781111561138357600080fd5b61068087015b818110156113a95761139b89826112bb565b855293830193604001611389565b508160408601526113ba88826112bb565b606086015250929695505050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610d8a57600080fd5b6000602082840312156113ff57600080fd5b81356100f2816113cb565b60006114146110e0565b90508061064083018481111561142957600080fd5b835b818110156112b257805183526020928301920161142b565b600082601f83011261145457600080fd5b61145c6110bd565b80604084018581111561146e57600080fd5b845b81811015611300578051845260209384019301611470565b6000610740828403121561149b57600080fd5b6114a3611071565b83601f8401126114b257600080fd5b6114bc848461140a565b81526114cc846106408501611443565b602081818401528561069f8601126114e357600080fd5b6114eb6110bd565b91508161070086018781111561150057600080fd5b61068087015b81811015611526576115188982611443565b855293830193604001611506565b508160408601526113ba8882611443565b8051801515811461154757600080fd5b919050565b600060e0828403121561155e57600080fd5b61156661109a565b61156f83611537565b8152602083015161157f816113cb565b60208201526040830151611592816113cb565b604082015260608301516115a5816113cb565b606082015260808301516115b8816113cb565b608082015260a08301516115cb816113cb565b60a082015260c08301516115de816113cb565b60c08201529392505050565b8060005b600281101561160d5781518452602093840193909101906001016115ee565b50505050565b610740810161162282876115ea565b60408083018660005b60028110156116525761163f8383516115ea565b918301916020919091019060010161162b565b5050505061166360c08301856115ea565b61010082018360005b603281101561168b57815183526020928301929091019060010161166c565b50505095945050505050565b6000602082840312156116a957600080fd5b6100f282611537565b805167ffffffffffffffff8116811461154757600080fd5b600060e082840312156116dc57600080fd5b6116e461109a565b6116ed836116b2565b81526116fb602084016116b2565b602082015261170c604084016116b2565b604082015261171d606084016116b2565b606082015261172e608084016116b2565b608082015261173f60a084016116b2565b60a08201526115de60c084016116b2565b60006040828403121561176257600080fd5b61176a6110bd565b611773836116b2565b8152611781602084016116b2565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082840312156117ce57600080fd5b6117d66110bd565b82518152602083015160208201528091505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611830576118306117ee565b500190565b6000602080838503121561184857600080fd5b825167ffffffffffffffff8082111561186057600080fd5b818501915085601f83011261187457600080fd5b81518181111561188657611886611042565b8060051b9150611897848301611104565b81815291830184019184810190888411156118b157600080fd5b938501935b838510156118cf578451825293850193908501906118b6565b98975050505050505050565b6000602082840312156118ed57600080fd5b5051919050565b600082821015611906576119066117ee565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361193c5761193c6117ee565b506001019056fea264697066735822122006a1c989a6cd6d2f273de14cee393af89309b3a1c106a7e00db9bdfda5645daa64736f6c634300080d0033";

type AttackFinishSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackFinishSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackFinishSystem__factory extends ContractFactory {
  constructor(...args: AttackFinishSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttackFinishSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AttackFinishSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AttackFinishSystem {
    return super.attach(address) as AttackFinishSystem;
  }
  override connect(signer: Signer): AttackFinishSystem__factory {
    return super.connect(signer) as AttackFinishSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackFinishSystemInterface {
    return new utils.Interface(_abi) as AttackFinishSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttackFinishSystem {
    return new Contract(address, _abi, signerOrProvider) as AttackFinishSystem;
  }
}
