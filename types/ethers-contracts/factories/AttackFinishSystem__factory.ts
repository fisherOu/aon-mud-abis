/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AttackFinishSystem,
  AttackFinishSystemInterface,
} from "../AttackFinishSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256[50]",
            name: "input",
            type: "uint256[50]",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct AttackFinishInfo",
        name: "attackInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020dd380380620020dd83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620003a517901c565b5050505062000292565b600062000126620001ef60201b620004361760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611e3b80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063ad739d4a146100a7578063f2fde38b146100ba575b600080fd5b61006461005f36600461154b565b6100cf565b6040516100719190611669565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b536600461170e565b61013e565b6100cd6100c83660046117f0565b610329565b005b60606000828060200190518101906100e7919061188b565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091906101869073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d361045a565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161016060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f5919061195a565b8051909150156103175761010081015160208401516040808601516060870151875192517fa63bed3700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9095169463a63bed379461026b9490939291600401611a5d565b602060405180830381865afa158015610288573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ac9190611ae1565b610317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c65642061747461636b2070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b3361032284826105a6565b5050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610399576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a281611385565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156104ca573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526105109190810190611afc565b9050805160000361057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161030e565b61059e8160008151811061059357610593611ba2565b602002602001015190565b949350505050565b600080546105ea9073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b7661045a565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610634573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106589190611be9565b60008054919250906106a09073ffffffffffffffffffffffffffffffffffffffff167f822902217469fa371c1a2cf8aec15ebcd1298447a4b5b1241e2882dd67e203da61045a565b60008054919250906106e89073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e42761045a565b60008054919250906107309073ffffffffffffffffffffffffffffffffffffffff167f6c062316985e8e531501d3a588aed06abfad54c545ae238fe2d6f51a6ab9bee861045a565b60008054919250906107789073ffffffffffffffffffffffffffffffffffffffff167fe84ae06d0531147bba573e3e5c6876c59c1ba9645cd7e87eb5141ca18dcfd28461045a565b9050600061078742600a611cc8565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810189905290915073ffffffffffffffffffffffffffffffffffffffff86169063cccf7a8e90602401602060405180830381865afa1580156107f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108199190611ae1565b80156108b457508751516040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810189905273ffffffffffffffffffffffffffffffffffffffff871690630ff4c916906024016040805180830381865afa15801561088d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b19190611cf4565b51145b61091a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f61747461636b206e6f742066726f6d20626567696e696e670000000000000000604482015260640161030e565b60005b600a8110156112fa576080870151895167ffffffffffffffff9091169061094583601e611d43565b6032811061095557610955611ba2565b60200201511115801561099a575060a0870151895167ffffffffffffffff90911690610982836028611d43565b6032811061099257610992611ba2565b602002015111155b156112e8576000811180156109c75750885160009082603281106109c0576109c0611ba2565b6020020151115b156112e85760008573ffffffffffffffffffffffffffffffffffffffff1663fbdfa1ea8b600001518460328110610a0057610a00611ba2565b60200201516040518263ffffffff1660e01b8152600401610a2391815260200190565b600060405180830381865afa158015610a40573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a869190810190611afc565b90508051600003610b71578373ffffffffffffffffffffffffffffffffffffffff16639a8536608b600001518460328110610ac357610ac3611ba2565b602002015160405180604001604052806040518060400160405280600d81526020017f61747461636b5468726f7567680000000000000000000000000000000000000081525081526020018767ffffffffffffffff168152506040518363ffffffff1660e01b8152600401610b39929190611d5b565b600060405180830381600087803b158015610b5357600080fd5b505af1158015610b67573d6000803e3d6000fd5b50505050506112e8565b600081600081518110610b8657610b86611ba2565b6020026020010151905060008673ffffffffffffffffffffffffffffffffffffffff16630ff4c916836040518263ffffffff1660e01b8152600401610bcd91815260200190565b602060405180830381865afa158015610bea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0e9190611d9d565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff88169063cccf7a8e90602401602060405180830381865afa158015610c7c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca09190611ae1565b8015610cac5750600081115b156112e45773ffffffffffffffffffffffffffffffffffffffff8716631ab06ee583610cd9600185611db6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b50505050600181610d549190611db6565b600003611201576040517f1ab06ee5000000000000000000000000000000000000000000000000000000008152600481018390526000602482015273ffffffffffffffffffffffffffffffffffffffff891690631ab06ee590604401600060405180830381600087803b158015610dca57600080fd5b505af1158015610dde573d6000803e3d6000fd5b50506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810185905273ffffffffffffffffffffffffffffffffffffffff8a169250634cc822159150602401600060405180830381600087803b158015610e4a57600080fd5b505af1158015610e5e573d6000803e3d6000fd5b5050600054610ea6925073ffffffffffffffffffffffffffffffffffffffff1690507f2f3c6eb2abe480dcea02a3f0d6883cd4e62a46b8207d85e1ff6f6e5cdee24b7a61045a565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215836040518263ffffffff1660e01b8152600401610ee091815260200190565b600060405180830381600087803b158015610efa57600080fd5b505af1158015610f0e573d6000803e3d6000fd5b5050600054610f56925073ffffffffffffffffffffffffffffffffffffffff1690507fde4b6105f4f699e0bc3e5ad258d64c9f5c9421b67cdf5d64c05b2f4f81d30d0461045a565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215836040518263ffffffff1660e01b8152600401610f9091815260200190565b600060405180830381600087803b158015610faa57600080fd5b505af1158015610fbe573d6000803e3d6000fd5b5050600054611006925073ffffffffffffffffffffffffffffffffffffffff1690507f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef833261045a565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215836040518263ffffffff1660e01b815260040161104091815260200190565b600060405180830381600087803b15801561105a57600080fd5b505af115801561106e573d6000803e3d6000fd5b50506000546110b6925073ffffffffffffffffffffffffffffffffffffffff1690507f189eafd1a01543209399086ef2e12962fca648be4826ce2b3eb2e53ed14bf14161045a565b73ffffffffffffffffffffffffffffffffffffffff16634cc82215836040518263ffffffff1660e01b81526004016110f091815260200190565b600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b505050508573ffffffffffffffffffffffffffffffffffffffff16639a8536608d60000151866032811061115457611154611ba2565b602002015160405180604001604052806040518060400160405280600481526020017f646561640000000000000000000000000000000000000000000000000000000081525081526020018967ffffffffffffffff168152506040518363ffffffff1660e01b81526004016111ca929190611d5b565b600060405180830381600087803b1580156111e457600080fd5b505af11580156111f8573d6000803e3d6000fd5b505050506112dc565b8573ffffffffffffffffffffffffffffffffffffffff16639a8536608d60000151866032811061123357611233611ba2565b602002015160405180604001604052806040518060400160405280600381526020017f686974000000000000000000000000000000000000000000000000000000000081525081526020018967ffffffffffffffff168152506040518363ffffffff1660e01b81526004016112a9929190611d5b565b600060405180830381600087803b1580156112c357600080fd5b505af11580156112d7573d6000803e3d6000fd5b505050505b5050506112fa565b5050505b806112f281611dcd565b91505061091d565b506040517f4cc822150000000000000000000000000000000000000000000000000000000081526004810188905273ffffffffffffffffffffffffffffffffffffffff861690634cc8221590602401600060405180830381600087803b15801561136357600080fd5b505af1158015611377573d6000803e3d6000fd5b505050505050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103a2928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff8111828210171561148b5761148b611439565b60405290565b604051610160810167ffffffffffffffff8111828210171561148b5761148b611439565b604051610640810167ffffffffffffffff8111828210171561148b5761148b611439565b6040805190810167ffffffffffffffff8111828210171561148b5761148b611439565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561154357611543611439565b604052919050565b6000602080838503121561155e57600080fd5b823567ffffffffffffffff8082111561157657600080fd5b818501915085601f83011261158a57600080fd5b81358181111561159c5761159c611439565b6115cc847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016114fc565b915080825286848285010111156115e257600080fd5b8084840185840137600090820190930192909252509392505050565b6000815180845260005b8181101561162457602081850181015186830182015201611608565b81811115611636576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f260208301846115fe565b60006116866114b5565b90508061064083018481111561169b57600080fd5b835b818110156116b557803583526020928301920161169d565b50505092915050565b600082601f8301126116cf57600080fd5b6116d76114d9565b8060408401858111156116e957600080fd5b845b818110156117035780358452602093840193016116eb565b509095945050505050565b6000610740828403121561172157600080fd5b611729611468565b83601f84011261173857600080fd5b611742848461167c565b81526117528461064085016116be565b602081818401528561069f86011261176957600080fd5b6117716114d9565b91508161070086018781111561178657600080fd5b61068087015b818110156117ac5761179e89826116be565b85529383019360400161178c565b508160408601526117bd88826116be565b606086015250929695505050505050565b73ffffffffffffffffffffffffffffffffffffffff811681146103a257600080fd5b60006020828403121561180257600080fd5b81356100f2816117ce565b60006118176114b5565b90508061064083018481111561182c57600080fd5b835b818110156116b557805183526020928301920161182e565b600082601f83011261185757600080fd5b61185f6114d9565b80604084018581111561187157600080fd5b845b81811015611703578051845260209384019301611873565b6000610740828403121561189e57600080fd5b6118a6611468565b83601f8401126118b557600080fd5b6118bf848461180d565b81526118cf846106408501611846565b602081818401528561069f8601126118e657600080fd5b6118ee6114d9565b91508161070086018781111561190357600080fd5b61068087015b818110156119295761191b8982611846565b855293830193604001611909565b508160408601526117bd8882611846565b8051801515811461194a57600080fd5b919050565b805161194a816117ce565b6000610160828403121561196d57600080fd5b611975611491565b61197e8361193a565b815261198c6020840161194f565b602082015261199d6040840161194f565b60408201526119ae6060840161194f565b60608201526119bf6080840161194f565b60808201526119d060a0840161194f565b60a08201526119e160c0840161194f565b60c08201526119f260e0840161194f565b60e0820152610100611a0581850161194f565b90820152610120611a1784820161194f565b90820152610140611a2984820161194f565b908201529392505050565b8060005b6002811015611a57578151845260209384019390910190600101611a38565b50505050565b6107408101611a6c8287611a34565b60408083018660005b6002811015611a9c57611a89838351611a34565b9183019160209190910190600101611a75565b50505050611aad60c0830185611a34565b61010082018360005b6032811015611ad5578151835260209283019290910190600101611ab6565b50505095945050505050565b600060208284031215611af357600080fd5b6100f28261193a565b60006020808385031215611b0f57600080fd5b825167ffffffffffffffff80821115611b2757600080fd5b818501915085601f830112611b3b57600080fd5b815181811115611b4d57611b4d611439565b8060051b9150611b5e8483016114fc565b8181529183018401918481019088841115611b7857600080fd5b938501935b83851015611b9657845182529385019390850190611b7d565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805167ffffffffffffffff8116811461194a57600080fd5b600060e08284031215611bfb57600080fd5b60405160e0810181811067ffffffffffffffff82111715611c1e57611c1e611439565b604052611c2a83611bd1565b8152611c3860208401611bd1565b6020820152611c4960408401611bd1565b6040820152611c5a60608401611bd1565b6060820152611c6b60808401611bd1565b6080820152611c7c60a08401611bd1565b60a0820152611c8d60c08401611bd1565b60c08201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516808303821115611ceb57611ceb611c99565b01949350505050565b600060408284031215611d0657600080fd5b6040516040810181811067ffffffffffffffff82111715611d2957611d29611439565b604052825181526020928301519281019290925250919050565b60008219821115611d5657611d56611c99565b500190565b8281526040602082015260008251604080840152611d7c60808401826115fe565b905067ffffffffffffffff6020850151166060840152809150509392505050565b600060208284031215611daf57600080fd5b5051919050565b600082821015611dc857611dc8611c99565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dfe57611dfe611c99565b506001019056fea264697066735822122061f695922577b5cc678cba1aa7cbccbc39abeea0394e2da5f49d23d3177bc5a364736f6c634300080d0033";

type AttackFinishSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackFinishSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackFinishSystem__factory extends ContractFactory {
  constructor(...args: AttackFinishSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttackFinishSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AttackFinishSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AttackFinishSystem {
    return super.attach(address) as AttackFinishSystem;
  }
  override connect(signer: Signer): AttackFinishSystem__factory {
    return super.connect(signer) as AttackFinishSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackFinishSystemInterface {
    return new utils.Interface(_abi) as AttackFinishSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttackFinishSystem {
    return new Contract(address, _abi, signerOrProvider) as AttackFinishSystem;
  }
}
