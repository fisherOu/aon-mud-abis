/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ChangeGuildDisplaySystem,
  ChangeGuildDisplaySystemInterface,
} from "../ChangeGuildDisplaySystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "newGuildCrestId",
            type: "uint256",
          },
        ],
        internalType: "struct Info",
        name: "info",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620011ed380380620011ed83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200031517901c565b5050505062000292565b600062000126620001ef60201b620003a61760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b610f4b80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063a85bbf29146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610b81565b6100cf565b6040516100719190610c31565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610c82565b61013e565b6100cd6100c8366004610ca6565b610299565b005b60606000828060200190518101906100e79190610cdc565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60603361014a816103ca565b6101b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f706c61796572206465616400000000000000000000000000000000000000000060448201526064015b60405180910390fd5b82516101c09061048f565b50600080546102059073ffffffffffffffffffffffffffffffffffffffff167f540f4a4851e5d34b3358a3dee845da1e4701d9bee45567aba7c95c4239185cbd610871565b84516040517f1ab06ee500000000000000000000000000000000000000000000000000000000815260048101859052602481019190915290915073ffffffffffffffffffffffffffffffffffffffff821690631ab06ee590604401600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610309576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610312816109bd565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000805461040e9073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610871565b73ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e836040518263ffffffff1660e01b815260040161044891815260200190565b602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104899190610d00565b92915050565b60008054339082906104d79073ffffffffffffffffffffffffffffffffffffffff167fd9a058a8db06aec9057108bd96cfe2e7f580ccef7b81e22c7f33b2889597c1f2610871565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610545573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105699190610d00565b801561060357506040517f0ff4c91600000000000000000000000000000000000000000000000000000000815260048101859052829073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401602060405180830381865afa1580156105dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106019190610d22565b145b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f6e6f74206f776e6572206f66206775696c64206372657374000000000000000060448201526064016101ac565b600080546106ad9073ffffffffffffffffffffffffffffffffffffffff167fde95e8412e4c1b59c183267e54d1bef716ab450b30c57bb7c5c88a38771301ab610871565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810187905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa15801561071b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073f9190610d00565b801561080357506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c91690602401600060405180830381865afa1580156107b4573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107fa9190810190610d58565b5163ffffffff16115b610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6e6f74206d656d626572206f66206775696c640000000000000000000000000060448201526064016101ac565b505050919050565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa1580156108e1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109279190810190610e40565b90508051600003610994576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016101ac565b6109b5816000815181106109aa576109aa610ee6565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610312928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516020810167ffffffffffffffff81118282101715610ac357610ac3610a71565b60405290565b60405160a0810167ffffffffffffffff81118282101715610ac357610ac3610a71565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610b3357610b33610a71565b604052919050565b600067ffffffffffffffff821115610b5557610b55610a71565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610b9357600080fd5b813567ffffffffffffffff811115610baa57600080fd5b8201601f81018413610bbb57600080fd5b8035610bce610bc982610b3b565b610aec565b818152856020838501011115610be357600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610c1c578181015183820152602001610c04565b83811115610c2b576000848401525b50505050565b6020815260008251806020840152610c50816040850160208701610c01565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600060208284031215610c9457600080fd5b610c9c610aa0565b9135825250919050565b600060208284031215610cb857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600060208284031215610cee57600080fd5b610cf6610aa0565b9151825250919050565b600060208284031215610d1257600080fd5b815180151581146100f257600080fd5b600060208284031215610d3457600080fd5b5051919050565b805167ffffffffffffffff81168114610d5357600080fd5b919050565b60006020808385031215610d6b57600080fd5b825167ffffffffffffffff80821115610d8357600080fd5b9084019060a08287031215610d9757600080fd5b610d9f610ac9565b825163ffffffff81168114610db357600080fd5b81528284015182811115610dc657600080fd5b83019150601f82018713610dd957600080fd5b8151610de7610bc982610b3b565b8181528886838601011115610dfb57600080fd5b610e0a82878301888701610c01565b808684015250506040830151604082015260608301516060820152610e3160808401610d3b565b60808201529695505050505050565b60006020808385031215610e5357600080fd5b825167ffffffffffffffff80821115610e6b57600080fd5b818501915085601f830112610e7f57600080fd5b815181811115610e9157610e91610a71565b8060051b9150610ea2848301610aec565b8181529183018401918481019088841115610ebc57600080fd5b938501935b83851015610eda57845182529385019390850190610ec1565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220ecf5015810d4affe01dd7e7cbf2918b1582d80db6c13e6c77c0987ebd85c4ad864736f6c634300080d0033";

type ChangeGuildDisplaySystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ChangeGuildDisplaySystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ChangeGuildDisplaySystem__factory extends ContractFactory {
  constructor(...args: ChangeGuildDisplaySystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ChangeGuildDisplaySystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<ChangeGuildDisplaySystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): ChangeGuildDisplaySystem {
    return super.attach(address) as ChangeGuildDisplaySystem;
  }
  override connect(signer: Signer): ChangeGuildDisplaySystem__factory {
    return super.connect(signer) as ChangeGuildDisplaySystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ChangeGuildDisplaySystemInterface {
    return new utils.Interface(_abi) as ChangeGuildDisplaySystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ChangeGuildDisplaySystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ChangeGuildDisplaySystem;
  }
}
