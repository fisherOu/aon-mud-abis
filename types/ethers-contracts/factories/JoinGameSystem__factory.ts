/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  JoinGameSystem,
  JoinGameSystemInterface,
} from "../JoinGameSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int32",
            name: "x",
            type: "int32",
          },
          {
            internalType: "int32",
            name: "y",
            type: "int32",
          },
        ],
        internalType: "struct Coord",
        name: "coord",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015633803806200156383398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b6200074117901c565b5050505062000292565b600062000126620001ef60201b620007d21760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6112c180620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063cb6cbba7146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610cef565b6100cf565b6040516100719190610de9565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b5366004610e0b565b61013e565b6100cd6100c8366004610e4c565b6106c5565b005b60606000828060200190518101906100e79190610e82565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b6000805460609133916101879073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef83326107f6565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102199190610eb7565b15610285576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f616c7265616479206a6f696e656400000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102c99073ffffffffffffffffffffffffffffffffffffffff167f26cf7dc75ae68c708d2e4d32efa853730b92b0bf86104963fae257250466fa256107f6565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401600060405180830381865afa158015610313573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526103599190810190610ef2565b805186519192509061036c908290610feb565b610376919061104f565b60030b855260208082015190860151610390908290610feb565b61039a919061104f565b60030b60208601526001546103c59073ffffffffffffffffffffffffffffffffffffffff1686610944565b511561042d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f74686973207370616365206973206f6273747275637465640000000000000000604482015260640161027c565b6040517f60fe47b10000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff8316906360fe47b190602401600060405180830381600087803b15801561049557600080fd5b505af11580156104a9573d6000803e3d6000fd5b50506000546104f1925073ffffffffffffffffffffffffffffffffffffffff1690507f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b18431066107f6565b73ffffffffffffffffffffffffffffffffffffffff1663dcb14c2f84876040518363ffffffff1660e01b815260040161052b929190611098565b600060405180830381600087803b15801561054557600080fd5b505af1158015610559573d6000803e3d6000fd5b50506000546105a1925073ffffffffffffffffffffffffffffffffffffffff1690507f035372a84ed8a55d8457eb5799995a6c576105567e7fe094f6b26cf611c70afd6107f6565b73ffffffffffffffffffffffffffffffffffffffff166360fe47b1846040518263ffffffff1660e01b81526004016105db91815260200190565b600060405180830381600087803b1580156105f557600080fd5b505af1158015610609573d6000803e3d6000fd5b5050600054610651925073ffffffffffffffffffffffffffffffffffffffff1690507fc21082728a9fccb6fd1e9d68c7593b100c0c10579766b623a82bd937949f64d36107f6565b73ffffffffffffffffffffffffffffffffffffffff166360fe47b1846040518263ffffffff1660e01b815260040161068b91815260200190565b600060405180830381600087803b1580156106a557600080fd5b505af11580156106b9573d6000803e3d6000fd5b50505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610735576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61073e81610b2b565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610866573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108ac91908101906110bf565b90508051600003610919576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640161027c565b61093a8160008151811061092f5761092f611165565b602002602001015190565b9150505b92915050565b604080516002808252606082810190935260009190816020015b6040805160608082018352600080835260208301529181019190915281526020019060019003908161095e57905050604080516060810190915290915080600281526020017f49a4584d9706380e35459e1f31e673445371b5bac20aa516f8ba8650b184310660001c8152602001846040516020016109dd9190611194565b60405160208183030381529060405281525081600081518110610a0257610a02611165565b6020908102919091018101919091526040805160608101825260008082527fd703888970216b9e7638d070dffe76bfc96703764185f5bf28908d52098f3557828501528251908152928301825290810191909152815182906001908110610a6b57610a6b611165565b60209081029190910101526040517f687485a600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85169063687485a690610ac89084906004016111b5565b600060405180830381865afa158015610ae5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261093a91908101906110bf565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405161073e928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff81118282101715610c3157610c31610bdf565b60405290565b6040516060810167ffffffffffffffff81118282101715610c3157610c31610bdf565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610ca157610ca1610bdf565b604052919050565b600067ffffffffffffffff821115610cc357610cc3610bdf565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600060208284031215610d0157600080fd5b813567ffffffffffffffff811115610d1857600080fd5b8201601f81018413610d2957600080fd5b8035610d3c610d3782610ca9565b610c5a565b818152856020838501011115610d5157600080fd5b81602084016020830137600091810160200191909152949350505050565b60005b83811015610d8a578181015183820152602001610d72565b83811115610d99576000848401525b50505050565b60008151808452610db7816020860160208601610d6f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006100f26020830184610d9f565b8060030b811461073e57600080fd5b600060408284031215610e1d57600080fd5b610e25610c0e565b8235610e3081610dfc565b81526020830135610e4081610dfc565b60208201529392505050565b600060208284031215610e5e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600060408284031215610e9457600080fd5b610e9c610c0e565b8251610ea781610dfc565b81526020830151610e4081610dfc565b600060208284031215610ec957600080fd5b815180151581146100f257600080fd5b805163ffffffff81168114610eed57600080fd5b919050565b60006020808385031215610f0557600080fd5b825167ffffffffffffffff80821115610f1d57600080fd5b9084019060608287031215610f3157600080fd5b610f39610c37565b610f4283610ed9565b8152610f4f848401610ed9565b84820152604083015182811115610f6557600080fd5b80840193505086601f840112610f7a57600080fd5b82519150610f8a610d3783610ca9565b8281528785848601011115610f9e57600080fd5b610fad83868301878701610d6f565b60408201529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160030b8360030b6000821282637fffffff0382138115161561101257611012610fbc565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffff8000000003821281161561104657611046610fbc565b50019392505050565b60008260030b80611089577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b808360030b0791505092915050565b828152606081016100f26020830184805160030b8252602081015160030b60208301525050565b600060208083850312156110d257600080fd5b825167ffffffffffffffff808211156110ea57600080fd5b818501915085601f8301126110fe57600080fd5b81518181111561111057611110610bdf565b8060051b9150611121848301610c5a565b818152918301840191848101908884111561113b57600080fd5b938501935b8385101561115957845182529385019390850190611140565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040810161093e8284805160030b8252602081015160030b60208301525050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561127c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08a850301865282516060815160068110611247577f4e487b710000000000000000000000000000000000000000000000000000000085526021600452602485fd5b8652818a01518a870152908801518886018290529061126881870183610d9f565b978a019795505050918701916001016111dd565b5091999850505050505050505056fea26469706673582212208662dcc42d15a6e2b5a73fd243a28ca3bc7d7ae4b782ad36abdbdc7a401e56b364736f6c634300080d0033";

type JoinGameSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JoinGameSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JoinGameSystem__factory extends ContractFactory {
  constructor(...args: JoinGameSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<JoinGameSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<JoinGameSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): JoinGameSystem {
    return super.attach(address) as JoinGameSystem;
  }
  override connect(signer: Signer): JoinGameSystem__factory {
    return super.connect(signer) as JoinGameSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JoinGameSystemInterface {
    return new utils.Interface(_abi) as JoinGameSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): JoinGameSystem {
    return new Contract(address, _abi, signerOrProvider) as JoinGameSystem;
  }
}
