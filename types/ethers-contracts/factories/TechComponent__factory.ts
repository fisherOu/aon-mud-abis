/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { TechComponent, TechComponentInterface } from "../TechComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint64",
            name: "level",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "updateTime",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "techGroupId",
            type: "uint256",
          },
        ],
        internalType: "struct Tech",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "level",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "updateTime",
            type: "uint64",
          },
          {
            internalType: "uint256",
            name: "techGroupId",
            type: "uint256",
          },
        ],
        internalType: "struct Tech",
        name: "tech",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200165238038062001652833981016040819052620000349162000200565b807f7d3ae0f354d484b474c261c5881c1dd2d1fb4691793800e04688e2d791cd888a62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000be51760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000be51760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61141080620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102dd578063cccf7a8e146102f0578063f2fde38b1461030357600080fd5b8063b361be46146102aa578063b8bc073d146102bd57600080fd5b80638da5cb5b146102655780639d2c76b41461026d578063a1bd12b214610280578063af640d0f1461029357600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c1461021c578063861eb9051461022f5780638b2829471461025257600080fd5b80634fef6a38146101f35780636b122fe01461020657600080fd5b80630ff4c9161461013b57806330b67baa1461018457806331b933b9146101c95780634cc82215146101de575b600080fd5b61014e610149366004610eac565b610316565b60408051825167ffffffffffffffff90811682526020808501519091169082015291810151908201526060015b60405180910390f35b6000546101a49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161017b565b6101d161037f565b60405161017b9190610ec5565b6101f16101ec366004610eac565b6103b3565b005b6101f1610201366004610f09565b6103fe565b61020e6104dc565b60405161017b929190610fe0565b6101f161022a366004610f09565b6106fc565b61024261023d366004610f09565b61072e565b604051901515815260200161017b565b6101f16102603660046111aa565b6107b9565b6101a4610806565b6101f161027b366004610f09565b61084b565b6101f161028e366004611207565b610974565b61029c60025481565b60405190815260200161017b565b6101d16102b83660046112ac565b61037f565b6102d06102cb366004610eac565b6109cd565b60405161017b91906112e9565b6101f16102eb366004610f09565b610a6f565b6102426102fe366004610eac565b610b4a565b6101f1610311366004610f09565b610b6c565b6040805160608101825260008082526020820181905291810182905290808061033e856109cd565b80602001905181019061035191906112fc565b6040805160608101825267ffffffffffffffff94851681529390921660208401529082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103bc3361072e565b6103f2576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fb81610c09565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461046e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b60608152602001906001900390816104f757505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600581526020017f6c6576656c000000000000000000000000000000000000000000000000000000815250826000815181106105775761057761133f565b6020026020010181905250600b816000815181106105975761059761133f565b602002602001019060218111156105b0576105b0610fb1565b908160218111156105c3576105c3610fb1565b815250506040518060400160405280600a81526020017f75706461746554696d6500000000000000000000000000000000000000000000815250826001815181106106105761061061133f565b6020026020010181905250600b816001815181106106305761063061133f565b6020026020010190602181111561064957610649610fb1565b9081602181111561065c5761065c610fb1565b815250506040518060400160405280600b81526020017f7465636847726f75704964000000000000000000000000000000000000000000815250826002815181106106a9576106a961133f565b6020026020010181905250600d816002815181106106c9576106c961133f565b602002602001019060218111156106e2576106e2610fb1565b908160218111156106f5576106f5610fb1565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107b35750610784610806565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6107c23361072e565b6107f8576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108028282610c77565b5050565b60006108467f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108bb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561095957600080fd5b505af115801561096d573d6000803e3d6000fd5b5050505050565b610802828260000151836020015184604001516040516020016109b99392919067ffffffffffffffff9384168152919092166020820152604081019190915260600190565b6040516020818303038152906040526107b9565b60008181526001602052604090208054606091906109ea9061136e565b80601f0160208091040260200160405190810160405280929190818152602001828054610a169061136e565b8015610a635780601f10610a3857610100808354040283529160200191610a63565b820191906000526020600020905b815481529060010190602001808311610a4657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610adf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b639061136e565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bdc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103fb81610d25565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c2091610dd9565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b59060240161093f565b60008281526001602090815260409091208251610c9692840190610e13565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610cef90859085906004016113c1565b600060405180830381600087803b158015610d0957600080fd5b505af1158015610d1d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103fb928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610de59061136e565b6000825580601f10610df5575050565b601f0160209004906000526020600020908101906103fb9190610e97565b828054610e1f9061136e565b90600052602060002090601f016020900481019282610e415760008555610e87565b82601f10610e5a57805160ff1916838001178555610e87565b82800160010185558215610e87579182015b82811115610e87578251825591602001919060010190610e6c565b50610e93929150610e97565b5090565b5b80821115610e935760008155600101610e98565b600060208284031215610ebe57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610efd57835183529284019291840191600101610ee1565b50909695505050505050565b600060208284031215610f1b57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f3f57600080fd5b9392505050565b6000815180845260005b81811015610f6c57602081850181015186830182015201610f50565b81811115610f7e576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611055577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611043868351610f46565b95509382019390820190600101611009565b50508584038187015286518085528782019482019350915060005b828110156110c3578451602281106110b1577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611070565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261111057600080fd5b813567ffffffffffffffff8082111561112b5761112b6110d0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611171576111716110d0565b8160405283815286602085880101111561118a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156111bd57600080fd5b82359150602083013567ffffffffffffffff8111156111db57600080fd5b6111e7858286016110ff565b9150509250929050565b67ffffffffffffffff811681146103fb57600080fd5b600080828403608081121561121b57600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561124f57600080fd5b506040516060810181811067ffffffffffffffff82111715611273576112736110d0565b6040526020840135611284816111f1565b81526040840135611294816111f1565b60208201526060939093013560408401525092909150565b6000602082840312156112be57600080fd5b813567ffffffffffffffff8111156112d557600080fd5b6112e1848285016110ff565b949350505050565b602081526000610f3f6020830184610f46565b60008060006060848603121561131157600080fd5b835161131c816111f1565b602085015190935061132d816111f1565b80925050604084015190509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061138257607f821691505b6020821081036113bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006112e16040830184610f4656fea26469706673582212208fc4be9592d79e0b5981a0bf35ad9041cf102c46452811ce2ecdd951c0f3eae464736f6c634300080d0033";

type TechComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TechComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TechComponent__factory extends ContractFactory {
  constructor(...args: TechComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TechComponent> {
    return super.deploy(world, overrides || {}) as Promise<TechComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TechComponent {
    return super.attach(address) as TechComponent;
  }
  override connect(signer: Signer): TechComponent__factory {
    return super.connect(signer) as TechComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TechComponentInterface {
    return new utils.Interface(_abi) as TechComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TechComponent {
    return new Contract(address, _abi, signerOrProvider) as TechComponent;
  }
}
