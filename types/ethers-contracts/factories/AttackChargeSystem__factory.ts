/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AttackChargeSystem,
  AttackChargeSystemInterface,
} from "../AttackChargeSystem";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
          {
            internalType: "uint256",
            name: "direction",
            type: "uint256",
          },
        ],
        internalType: "struct AttackChargeInfo",
        name: "attackInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018d6380380620018d683398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000b1417901c565b5050505062000292565b600062000126620001ef60201b62000ba51760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61163480620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780632f9d83841461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610eb7565b6100cf565b6040516100719190610f6a565b60405180910390f35b61006461008836600461107c565b6100f9565b610095610a53565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004611125565b610a98565b005b60606000828060200190518101906100e791906111d6565b90506100f2816100f9565b9392505050565b60008054606091906101419073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610bc9565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa15801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af9190611272565b8051909150156102eb576000604051806080016040528085600001518152602001856060015181526020018560200151815260200185604001518152509050816020015173ffffffffffffffffffffffffffffffffffffffff16635fe8c13b85608001518660a001518760c00151856040518563ffffffff1660e01b815260040161023d9493929190611339565b602060405180830381865afa15801561025a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027e91906113bd565b6102e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c65642061747461636b2070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b505b60005433906103309073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e427610bc9565b73ffffffffffffffffffffffffffffffffffffffff16630ff4c916826040518263ffffffff1660e01b815260040161036a91815260200190565b602060405180830381865afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab91906113d8565b845114610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f6e6f74207374616e64696e67206f6e2072657175697265642074696c6500000060448201526064016102e0565b600080546104589073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610bc9565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa1580156104a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c69190611409565b9050806080015167ffffffffffffffff168560200151111580156104fc57508060a0015167ffffffffffffffff16856040015111155b610562576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d697400000000000000000000000000000060448201526064016102e0565b600080546105a69073ffffffffffffffffffffffffffffffffffffffff167ff40b0a0f45abda3aa3c692e8980f39cdff332ccb76fb73bb91536eebf77739c2610bc9565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063891906113bd565b1561078a576040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905260009073ffffffffffffffffffffffffffffffffffffffff831690630ff4c916906024016040805180830381865afa1580156106aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ce919061148f565b805190915067ffffffffffffffff1615806106f35750805167ffffffffffffffff1642115b80156107225750602081015167ffffffffffffffff1615806107225750806020015167ffffffffffffffff1642115b610788576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c72656164792061747461636b696e6700000000000000000000000000000060448201526064016102e0565b505b600080546107ce9073ffffffffffffffffffffffffffffffffffffffff167f822902217469fa371c1a2cf8aec15ebcd1298447a4b5b1241e2882dd67e203da610bc9565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810186905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa15801561083c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086091906113bd565b156108c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f616c7265616479206368617267696e670000000000000000000000000000000060448201526064016102e0565b6040805180820182528851815260e08901516020820190815291517f8bbf68fe00000000000000000000000000000000000000000000000000000000815260048101879052905160248201529051604482015273ffffffffffffffffffffffffffffffffffffffff821690638bbf68fe90606401600060405180830381600087803b15801561095557600080fd5b505af1158015610969573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff16634e6641a985604051806040016040528042600a6109a291906114ea565b67ffffffffffffffff1681526020016109bc42600a6114ea565b67ffffffffffffffff9081169091526040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b1681526004810193909352815181166024840152602090910151166044820152606401600060405180830381600087803b158015610a3157600080fd5b505af1158015610a45573d6000803e3d6000fd5b505050505050505050919050565b6000610a937f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b08576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b1181610d15565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610c39573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610c7f9190810190611529565b90508051600003610cec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f74207265676973746572656400000000000000000000000000000060448201526064016102e0565b610d0d81600081518110610d0257610d026115cf565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610b11928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff81118282101715610e1c57610e1c610dc9565b60405290565b60405160e0810167ffffffffffffffff81118282101715610e1c57610e1c610dc9565b6040805190810167ffffffffffffffff81118282101715610e1c57610e1c610dc9565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610eaf57610eaf610dc9565b604052919050565b60006020808385031215610eca57600080fd5b823567ffffffffffffffff80821115610ee257600080fd5b818501915085601f830112610ef657600080fd5b813581811115610f0857610f08610dc9565b610f38847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610e68565b91508082528684828501011115610f4e57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610f9757858101830151858201604001528201610f7b565b81811115610fa9576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f830112610fee57600080fd5b610ff6610e45565b80604084018581111561100857600080fd5b845b8181101561102257803584526020938401930161100a565b509095945050505050565b600082601f83011261103e57600080fd5b611046610e45565b80608084018581111561105857600080fd5b845b818110156110225761106c8782610fdd565b845260209093019260400161105a565b60006101a0828403121561108f57600080fd5b611097610df8565b823581526020830135602082015260408301356040820152606083013560608201526110c68460808501610fdd565b60808201526110d88460c0850161102d565b60a08201526110eb846101408501610fdd565b60c0820152610180929092013560e083015250919050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b1157600080fd5b60006020828403121561113757600080fd5b81356100f281611103565b600082601f83011261115357600080fd5b61115b610e45565b80604084018581111561116d57600080fd5b845b8181101561102257805184526020938401930161116f565b600082601f83011261119857600080fd5b6111a0610e45565b8060808401858111156111b257600080fd5b845b81811015611022576111c68782611142565b84526020909301926040016111b4565b60006101a082840312156111e957600080fd5b6111f1610df8565b825181526020830151602082015260408301516040820152606083015160608201526112208460808501611142565b60808201526112328460c08501611187565b60a0820152611245846101408501611142565b60c0820152610180929092015160e083015250919050565b8051801515811461126d57600080fd5b919050565b600060e0828403121561128457600080fd5b61128c610e22565b6112958361125d565b815260208301516112a581611103565b602082015260408301516112b881611103565b604082015260608301516112cb81611103565b606082015260808301516112de81611103565b608082015260a08301516112f181611103565b60a082015260c083015161130481611103565b60c08201529392505050565b8060005b6002811015611333578151845260209384019390910190600101611314565b50505050565b61018081016113488287611310565b60408083018660005b600281101561137857611365838351611310565b9183019160209190910190600101611351565b5050505061138960c0830185611310565b61010082018360005b60048110156113b1578151835260209283019290910190600101611392565b50505095945050505050565b6000602082840312156113cf57600080fd5b6100f28261125d565b6000602082840312156113ea57600080fd5b5051919050565b805167ffffffffffffffff8116811461126d57600080fd5b600060e0828403121561141b57600080fd5b611423610e22565b61142c836113f1565b815261143a602084016113f1565b602082015261144b604084016113f1565b604082015261145c606084016113f1565b606082015261146d608084016113f1565b608082015261147e60a084016113f1565b60a082015261130460c084016113f1565b6000604082840312156114a157600080fd5b6040516040810181811067ffffffffffffffff821117156114c4576114c4610dc9565b6040526114d0836113f1565b81526114de602084016113f1565b60208201529392505050565b60008219821115611524577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b500190565b6000602080838503121561153c57600080fd5b825167ffffffffffffffff8082111561155457600080fd5b818501915085601f83011261156857600080fd5b81518181111561157a5761157a610dc9565b8060051b915061158b848301610e68565b81815291830184019184810190888411156115a557600080fd5b938501935b838510156115c3578451825293850193908501906115aa565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c1d3173d3fe0b214368a48ed97dd840cc1fb37fccf9c81099f26240ca85d999964736f6c634300080d0033";

type AttackChargeSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttackChargeSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttackChargeSystem__factory extends ContractFactory {
  constructor(...args: AttackChargeSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttackChargeSystem> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<AttackChargeSystem>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): AttackChargeSystem {
    return super.attach(address) as AttackChargeSystem;
  }
  override connect(signer: Signer): AttackChargeSystem__factory {
    return super.connect(signer) as AttackChargeSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttackChargeSystemInterface {
    return new utils.Interface(_abi) as AttackChargeSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttackChargeSystem {
    return new Contract(address, _abi, signerOrProvider) as AttackChargeSystem;
  }
}
