/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureEffectConfigComponent,
  TreasureEffectConfigComponentInterface,
} from "../TreasureEffectConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "effectID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "effectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "effectAsset",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "effectGroup",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "effectRarely",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "APCost",
            type: "uint64",
          },
        ],
        internalType: "struct TreasureEffectConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "effectID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "effectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "effectAsset",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "effectGroup",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "effectRarely",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
          {
            internalType: "uint64",
            name: "APCost",
            type: "uint64",
          },
        ],
        internalType: "struct TreasureEffectConfig",
        name: "treasureEffect",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cb738038062001cb7833981016040819052620000349162000200565b807f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e38162000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f1f1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f1f1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611a7580620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638da5cb5b1461024557806397ee00bc1461024d5780639d2c76b414610260578063af640d0f1461027357600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101fc578063861eb9051461020f5780638b2829471461023257600080fd5b80634fef6a38146101d35780636b122fe0146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e6101493660046111e6565b6102f6565b60405161015b9190611279565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103bb565b60405161015b9190611348565b6101d16101cc3660046111e6565b6103ef565b005b6101d16101e136600461138c565b61043a565b6101ee610518565b60405161015b9291906113f8565b6101d161020a36600461138c565b610a38565b61022261021d36600461138c565b610a6a565b604051901515815260200161015b565b6101d161024036600461162c565b610af5565b610184610b42565b6101d161025b3660046116d0565b610b87565b6101d161026e36600461138c565b610bde565b61027c60025481565b60405190815260200161015b565b6101b16102983660046117cd565b6103bb565b6102b06102ab3660046111e6565b610d07565b60405161015b919061180a565b6101d16102cb36600461138c565b610da9565b6102226102de3660046111e6565b610e84565b6101d16102f136600461138c565b610ea6565b604080516101008101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c0810182905260e0810182905290808080808080806103488a610d07565b80602001905181019061035b9190611862565b604080516101008101825298895260208901979097529587019490945263ffffffff909216606086015267ffffffffffffffff908116608086015260ff91821660a0860152911660c08401521660e08201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103f833610a6a565b61042e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043781610f43565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104aa576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160088082526101208201909252606091829190816020015b6060815260200190600190039081610534575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600881526020017f6566666563744944000000000000000000000000000000000000000000000000815250826000815181106105b6576105b6611933565b6020026020010181905250600d816000815181106105d6576105d6611933565b602002602001019060218111156105ef576105ef6113c9565b90816021811115610602576106026113c9565b815250506040518060400160405280600a81526020017f6566666563744e616d65000000000000000000000000000000000000000000008152508260018151811061064f5761064f611933565b6020026020010181905250600f8160018151811061066f5761066f611933565b60200260200101906021811115610688576106886113c9565b9081602181111561069b5761069b6113c9565b815250506040518060400160405280600b81526020017f6566666563744173736574000000000000000000000000000000000000000000815250826002815181106106e8576106e8611933565b6020026020010181905250600f8160028151811061070857610708611933565b60200260200101906021811115610721576107216113c9565b90816021811115610734576107346113c9565b815250506040518060400160405280600b81526020017f65666665637447726f75700000000000000000000000000000000000000000008152508260038151811061078157610781611933565b6020026020010181905250600a816003815181106107a1576107a1611933565b602002602001019060218111156107ba576107ba6113c9565b908160218111156107cd576107cd6113c9565b815250506040518060400160405280600c81526020017f656666656374526172656c7900000000000000000000000000000000000000008152508260048151811061081a5761081a611933565b6020026020010181905250600b8160048151811061083a5761083a611933565b60200260200101906021811115610853576108536113c9565b90816021811115610866576108666113c9565b815250506040518060400160405280600781526020017f7573654d6f646500000000000000000000000000000000000000000000000000815250826005815181106108b3576108b3611933565b60200260200101819052506008816005815181106108d3576108d3611933565b602002602001019060218111156108ec576108ec6113c9565b908160218111156108ff576108ff6113c9565b815250506040518060400160405280600781526020017f6869744d6f6465000000000000000000000000000000000000000000000000008152508260068151811061094c5761094c611933565b602002602001018190525060088160068151811061096c5761096c611933565b60200260200101906021811115610985576109856113c9565b90816021811115610998576109986113c9565b815250506040518060400160405280600681526020017f4150436f73740000000000000000000000000000000000000000000000000000815250826007815181106109e5576109e5611933565b6020026020010181905250600881600781518110610a0557610a05611933565b60200260200101906021811115610a1e57610a1e6113c9565b90816021811115610a3157610a316113c9565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610aef5750610ac0610b42565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610afe33610a6a565b610b34576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b3e8282610fb1565b5050565b6000610b827f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b610b3e82826000015183602001518460400151856060015186608001518760a001518860c001518960e00151604051602001610bca989796959493929190611962565b604051602081830303815290604052610af5565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c4e576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610cec57600080fd5b505af1158015610d00573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610d24906119d3565b80601f0160208091040260200160405190810160405280929190818152602001828054610d50906119d3565b8015610d9d5780601f10610d7257610100808354040283529160200191610d9d565b820191906000526020600020905b815481529060010190602001808311610d8057829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e19576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610e9d906119d3565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f16576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104378161105f565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f5a91611113565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610cd2565b60008281526001602090815260409091208251610fd09284019061114d565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110299085908590600401611a26565b600060405180830381600087803b15801561104357600080fd5b505af1158015611057573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610437928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461111f906119d3565b6000825580601f1061112f575050565b601f01602090049060005260206000209081019061043791906111d1565b828054611159906119d3565b90600052602060002090601f01602090048101928261117b57600085556111c1565b82601f1061119457805160ff19168380011785556111c1565b828001600101855582156111c1579182015b828111156111c15782518255916020019190600101906111a6565b506111cd9291506111d1565b5090565b5b808211156111cd57600081556001016111d2565b6000602082840312156111f857600080fd5b5035919050565b60005b8381101561121a578181015183820152602001611202565b83811115611229576000848401525b50505050565b600081518084526112478160208601602086016111ff565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101008060408501526112a261012085018361122f565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08584030160608601526112dd838261122f565b92505063ffffffff6060860151166080850152608085015161130b60a086018267ffffffffffffffff169052565b5060a085015160ff811660c08601525060c085015160ff811660e08601525060e085015167ffffffffffffffff8116858301525090949350505050565b6020808252825182820181905260009190848201906040850190845b8181101561138057835183529284019291840191600101611364565b50909695505050505050565b60006020828403121561139e57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113c257600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561146d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261145b86835161122f565b95509382019390820190600101611421565b50508584038187015286518085528782019482019350915060005b828110156114db578451602281106114c9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611488565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561153b5761153b6114e8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611588576115886114e8565b604052919050565b600067ffffffffffffffff8211156115aa576115aa6114e8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126115e757600080fd5b81356115fa6115f582611590565b611541565b81815284602083860101111561160f57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561163f57600080fd5b82359150602083013567ffffffffffffffff81111561165d57600080fd5b611669858286016115d6565b9150509250929050565b63ffffffff8116811461043757600080fd5b803561169081611673565b919050565b67ffffffffffffffff8116811461043757600080fd5b803561169081611695565b60ff8116811461043757600080fd5b8035611690816116b6565b600080604083850312156116e357600080fd5b82359150602083013567ffffffffffffffff8082111561170257600080fd5b90840190610100828703121561171757600080fd5b61171f611517565b8235815260208301358281111561173557600080fd5b611741888286016115d6565b60208301525060408301358281111561175957600080fd5b611765888286016115d6565b60408301525061177760608401611685565b6060820152611788608084016116ab565b608082015261179960a084016116c5565b60a08201526117aa60c084016116c5565b60c08201526117bb60e084016116ab565b60e08201528093505050509250929050565b6000602082840312156117df57600080fd5b813567ffffffffffffffff8111156117f657600080fd5b611802848285016115d6565b949350505050565b6020815260006113c2602083018461122f565b600082601f83011261182e57600080fd5b815161183c6115f582611590565b81815284602083860101111561185157600080fd5b6118028260208301602087016111ff565b600080600080600080600080610100898b03121561187f57600080fd5b88519750602089015167ffffffffffffffff8082111561189e57600080fd5b6118aa8c838d0161181d565b985060408b01519150808211156118c057600080fd5b506118cd8b828c0161181d565b96505060608901516118de81611673565b60808a01519095506118ef81611695565b60a08a0151909450611900816116b6565b60c08a0151909350611911816116b6565b60e08a015190925061192281611695565b809150509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006101008a835280602084015261197c8184018b61122f565b90508281036040840152611990818a61122f565b63ffffffff989098166060840152505067ffffffffffffffff948516608082015260ff93841660a08201529190921660c0820152911660e0909101529392505050565b600181811c908216806119e757607f821691505b602082108103611a20577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000611802604083018461122f56fea26469706673582212209258dfed93ba8fe66e2c19859caf4d4ec14f4b9f6e6bee4bda75f9b6957694a464736f6c634300080d0033";

type TreasureEffectConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureEffectConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureEffectConfigComponent__factory extends ContractFactory {
  constructor(...args: TreasureEffectConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureEffectConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureEffectConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureEffectConfigComponent {
    return super.attach(address) as TreasureEffectConfigComponent;
  }
  override connect(signer: Signer): TreasureEffectConfigComponent__factory {
    return super.connect(signer) as TreasureEffectConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureEffectConfigComponentInterface {
    return new utils.Interface(_abi) as TreasureEffectConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureEffectConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureEffectConfigComponent;
  }
}
