/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TreasureEffectConfigComponent,
  TreasureEffectConfigComponentInterface,
} from "../TreasureEffectConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "effectID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "effectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "effectAsset",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "effectGroup",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "effectRarely",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
        ],
        internalType: "struct TreasureEffectConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "effectID",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "effectName",
            type: "string",
          },
          {
            internalType: "string",
            name: "effectAsset",
            type: "string",
          },
          {
            internalType: "uint32",
            name: "effectGroup",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "effectRarely",
            type: "uint64",
          },
          {
            internalType: "uint8",
            name: "useMode",
            type: "uint8",
          },
          {
            internalType: "uint8",
            name: "hitMode",
            type: "uint8",
          },
        ],
        internalType: "struct TreasureEffectConfig",
        name: "treasureEffect",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001bb338038062001bb3833981016040819052620000349162000200565b807f1c25628829b4861cd29b8126181e286e9aa3749b43e568208fa84796fe72e38162000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000e6b1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000e6b1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61197180620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638b282947146102455780638da5cb5b146102585780639d2c76b414610260578063af640d0f1461027357600080fd5b80634dfc45a8116101095780636b122fe0116100ee5780636b122fe0146101f957806375c0669c1461020f578063861eb9051461022257600080fd5b80634dfc45a8146101d35780634fef6a38146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e610149366004611132565b6102f6565b60405161015b91906111c5565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103a7565b60405161015b9190611277565b6101d16101cc366004611132565b6103db565b005b6101d16101e136600461145b565b610426565b6101d16101f4366004611546565b61047b565b610201610559565b60405161015b9291906115b2565b6101d161021d366004611546565b6109df565b610235610230366004611546565b610a11565b604051901515815260200161015b565b6101d16102533660046116a2565b610a9c565b610184610ae5565b6101d161026e366004611546565b610b2a565b61027c60025481565b60405190815260200161015b565b6101b16102983660046116e9565b6103a7565b6102b06102ab366004611132565b610c53565b60405161015b9190611726565b6101d16102cb366004611546565b610cf5565b6102356102de366004611132565b610dd0565b6101d16102f1366004611546565b610df2565b6040805160e08101825260008082526060602083018190529282018390529181018290526080810182905260a0810182905260c081018290529080808080808061033f89610c53565b806020019051810190610352919061177e565b6040805160e08101825297885260208801969096529486019390935263ffffffff909116606085015267ffffffffffffffff16608084015260ff90811660a08401521660c08201529998505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e433610a11565b61041a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042381610e8f565b50565b61047782826000015183602001518460400151856060015186608001518760a001518860c00151604051602001610463979695949392919061183b565b604051602081830303815290604052610a9c565b5050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104eb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160078082526101008201909252606091829190816020015b606081526020019060019003908161057557505060408051600780825261010082019092529193506020820160e0803683370190505090506040518060400160405280600881526020017f6566666563744944000000000000000000000000000000000000000000000000815250826000815181106105f6576105f66118a0565b6020026020010181905250600d81600081518110610616576106166118a0565b6020026020010190602181111561062f5761062f611583565b9081602181111561064257610642611583565b815250506040518060400160405280600a81526020017f6566666563744e616d65000000000000000000000000000000000000000000008152508260018151811061068f5761068f6118a0565b6020026020010181905250600f816001815181106106af576106af6118a0565b602002602001019060218111156106c8576106c8611583565b908160218111156106db576106db611583565b815250506040518060400160405280600b81526020017f656666656374417373657400000000000000000000000000000000000000000081525082600281518110610728576107286118a0565b6020026020010181905250600f81600281518110610748576107486118a0565b6020026020010190602181111561076157610761611583565b9081602181111561077457610774611583565b815250506040518060400160405280600b81526020017f65666665637447726f7570000000000000000000000000000000000000000000815250826003815181106107c1576107c16118a0565b6020026020010181905250600a816003815181106107e1576107e16118a0565b602002602001019060218111156107fa576107fa611583565b9081602181111561080d5761080d611583565b815250506040518060400160405280600c81526020017f656666656374526172656c7900000000000000000000000000000000000000008152508260048151811061085a5761085a6118a0565b6020026020010181905250600b8160048151811061087a5761087a6118a0565b6020026020010190602181111561089357610893611583565b908160218111156108a6576108a6611583565b815250506040518060400160405280600781526020017f7573654d6f646500000000000000000000000000000000000000000000000000815250826005815181106108f3576108f36118a0565b6020026020010181905250600881600581518110610913576109136118a0565b6020026020010190602181111561092c5761092c611583565b9081602181111561093f5761093f611583565b815250506040518060400160405280600781526020017f6869744d6f6465000000000000000000000000000000000000000000000000008152508260068151811061098c5761098c6118a0565b60200260200101819052506008816006815181106109ac576109ac6118a0565b602002602001019060218111156109c5576109c5611583565b908160218111156109d8576109d8611583565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a965750610a67610ae5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610aa533610a11565b610adb576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104778282610efd565b6000610b257f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b9a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610c3857600080fd5b505af1158015610c4c573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610c70906118cf565b80601f0160208091040260200160405190810160405280929190818152602001828054610c9c906118cf565b8015610ce95780601f10610cbe57610100808354040283529160200191610ce9565b820191906000526020600020905b815481529060010190602001808311610ccc57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d65576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610de9906118cf565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e62576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61042381610fab565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610ea69161105f565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610c1e565b60008281526001602090815260409091208251610f1c92840190611099565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f759085908590600401611922565b600060405180830381600087803b158015610f8f57600080fd5b505af1158015610fa3573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610423928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461106b906118cf565b6000825580601f1061107b575050565b601f016020900490600052602060002090810190610423919061111d565b8280546110a5906118cf565b90600052602060002090601f0160209004810192826110c7576000855561110d565b82601f106110e057805160ff191683800117855561110d565b8280016001018555821561110d579182015b8281111561110d5782518255916020019190600101906110f2565b5061111992915061111d565b5090565b5b80821115611119576000815560010161111e565b60006020828403121561114457600080fd5b5035919050565b60005b8381101561116657818101518382015260200161114e565b83811115611175576000848401525b50505050565b6000815180845261119381602086016020860161114b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152815160208201526000602083015160e060408401526111ec61010084018261117b565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0848303016060850152611227828261117b565b91505063ffffffff606085015116608084015267ffffffffffffffff60808501511660a084015260ff60a08501511660c084015260c084015161126f60e085018260ff169052565b509392505050565b6020808252825182820181905260009190848201906040850190845b818110156112af57835183529284019291840191600101611293565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160e0810167ffffffffffffffff8111828210171561130d5761130d6112bb565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561135a5761135a6112bb565b604052919050565b600067ffffffffffffffff82111561137c5761137c6112bb565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126113b957600080fd5b81356113cc6113c782611362565b611313565b8181528460208386010111156113e157600080fd5b816020850160208301376000918101602001919091529392505050565b63ffffffff8116811461042357600080fd5b803561141b816113fe565b919050565b67ffffffffffffffff8116811461042357600080fd5b803561141b81611420565b60ff8116811461042357600080fd5b803561141b81611441565b6000806040838503121561146e57600080fd5b82359150602083013567ffffffffffffffff8082111561148d57600080fd5b9084019060e082870312156114a157600080fd5b6114a96112ea565b823581526020830135828111156114bf57600080fd5b6114cb888286016113a8565b6020830152506040830135828111156114e357600080fd5b6114ef888286016113a8565b60408301525061150160608401611410565b606082015261151260808401611436565b608082015261152360a08401611450565b60a082015261153460c08401611450565b60c08201528093505050509250929050565b60006020828403121561155857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461157c57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611627577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261161586835161117b565b955093820193908201906001016115db565b50508584038187015286518085528782019482019350915060005b8281101561169557845160228110611683577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611642565b5091979650505050505050565b600080604083850312156116b557600080fd5b82359150602083013567ffffffffffffffff8111156116d357600080fd5b6116df858286016113a8565b9150509250929050565b6000602082840312156116fb57600080fd5b813567ffffffffffffffff81111561171257600080fd5b61171e848285016113a8565b949350505050565b60208152600061157c602083018461117b565b600082601f83011261174a57600080fd5b81516117586113c782611362565b81815284602083860101111561176d57600080fd5b61171e82602083016020870161114b565b600080600080600080600060e0888a03121561179957600080fd5b87519650602088015167ffffffffffffffff808211156117b857600080fd5b6117c48b838c01611739565b975060408a01519150808211156117da57600080fd5b506117e78a828b01611739565b95505060608801516117f8816113fe565b608089015190945061180981611420565b60a089015190935061181a81611441565b60c089015190925061182b81611441565b8091505092959891949750929550565b87815260e06020820152600061185460e083018961117b565b8281036040840152611866818961117b565b63ffffffff979097166060840152505067ffffffffffffffff93909316608084015260ff91821660a08401521660c0909101529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806118e357607f821691505b60208210810361191c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061171e604083018461117b56fea2646970667358221220f56007d58134a0949a52e5e5bf0d90ed960cee592774092b6c3bebd6dc6ec94564736f6c634300080d0033";

type TreasureEffectConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TreasureEffectConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TreasureEffectConfigComponent__factory extends ContractFactory {
  constructor(...args: TreasureEffectConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TreasureEffectConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TreasureEffectConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TreasureEffectConfigComponent {
    return super.attach(address) as TreasureEffectConfigComponent;
  }
  override connect(signer: Signer): TreasureEffectConfigComponent__factory {
    return super.connect(signer) as TreasureEffectConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TreasureEffectConfigComponentInterface {
    return new utils.Interface(_abi) as TreasureEffectConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TreasureEffectConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TreasureEffectConfigComponent;
  }
}
