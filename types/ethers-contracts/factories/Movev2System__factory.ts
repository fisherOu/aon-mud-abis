/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Movev2System, Movev2SystemInterface } from "../Movev2System";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "perlin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "radius",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct MoveInfo",
        name: "moveInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620016603803806200166083398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b620008f617901c565b5050505062000292565b600062000126620001ef60201b620009871760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b6113be80620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe1461005157806336a1b8291461007a5780638da5cb5b1461008d578063f2fde38b146100ba575b600080fd5b61006461005f366004610c76565b6100cf565b6040516100719190610d29565b60405180910390f35b610064610088366004610e3b565b6100f9565b610095610835565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100cd6100c8366004610ecb565b61087a565b005b60606000828060200190518101906100e79190610f95565b90506100f2816100f9565b9392505050565b6000805460609133916101429073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef83326109ab565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa1580156101b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d4919061101a565b61023f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74206a6f696e65640000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080546102839073ffffffffffffffffffffffffffffffffffffffff167f189eafd1a01543209399086ef2e12962fca648be4826ce2b3eb2e53ed14bf1416109ab565b60008054919250906102cb9073ffffffffffffffffffffffffffffffffffffffff167fdc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f76109ab565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401608060405180830381865afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103399190611059565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c916906024016040805180830381865afa1580156103a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103cd91906110d6565b90506000816020015167ffffffffffffffff1611806104125750816020015167ffffffffffffffff168160000151426104069190611160565b67ffffffffffffffff16115b610478576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f206d6f766520706f696e74730000000000000000000000000000000000006044820152606401610236565b816060015167ffffffffffffffff168760a0015111156104f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6d6f766520746f6f2066617200000000000000000000000000000000000000006044820152606401610236565b600080546105389073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b766109ab565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610582573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a69190611189565b9050806080015167ffffffffffffffff168860400151111580156105dc57508060a0015167ffffffffffffffff16886040015111155b610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d69740000000000000000000000000000006044820152606401610236565b6000546106859073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e4276109ab565b88516040517f1ab06ee500000000000000000000000000000000000000000000000000000000815260048101899052602481019190915273ffffffffffffffffffffffffffffffffffffffff9190911690631ab06ee590604401600060405180830381600087803b1580156106f957600080fd5b505af115801561070d573d6000803e3d6000fd5b5050505060006001846020015184600001514261072a9190611160565b6107349190611239565b84602001516107439190611287565b61074d9190611160565b9050836040015167ffffffffffffffff168167ffffffffffffffff161115610776575060408301515b60408051808201825267ffffffffffffffff42811682528381166020830190815292517f4e6641a9000000000000000000000000000000000000000000000000000000008152600481018b90529151811660248301529151909116604482015273ffffffffffffffffffffffffffffffffffffffff861690634e6641a990606401600060405180830381600087803b15801561081157600080fd5b505af1158015610825573d6000803e3d6000fd5b5050505050505050505050919050565b60006108757f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108ea576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108f381610af7565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610a1b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610a6191908101906112b3565b90508051600003610ace576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610236565b610aef81600081518110610ae457610ae4611359565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516108f3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715610bfe57610bfe610bab565b60405290565b6040805190810167ffffffffffffffff81118282101715610bfe57610bfe610bab565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610c6e57610c6e610bab565b604052919050565b60006020808385031215610c8957600080fd5b823567ffffffffffffffff80821115610ca157600080fd5b818501915085601f830112610cb557600080fd5b813581811115610cc757610cc7610bab565b610cf7847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610c27565b91508082528684828501011115610d0d57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b81811015610d5657858101830151858201604001528201610d3a565b81811115610d68576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f830112610dad57600080fd5b610db5610c04565b806040840185811115610dc757600080fd5b845b81811015610de1578035845260209384019301610dc9565b509095945050505050565b600082601f830112610dfd57600080fd5b610e05610c04565b806080840185811115610e1757600080fd5b845b81811015610de157610e2b8782610d9c565b8452602090930192604001610e19565b60006101c08284031215610e4e57600080fd5b610e56610bda565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a0820152610e998460c08501610d9c565b60c0820152610100610ead85828601610dec565b60e0830152610ec0856101808601610d9c565b908201529392505050565b600060208284031215610edd57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146100f257600080fd5b600082601f830112610f1257600080fd5b610f1a610c04565b806040840185811115610f2c57600080fd5b845b81811015610de1578051845260209384019301610f2e565b600082601f830112610f5757600080fd5b610f5f610c04565b806080840185811115610f7157600080fd5b845b81811015610de157610f858782610f01565b8452602090930192604001610f73565b60006101c08284031215610fa857600080fd5b610fb0610bda565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a0820152610ff38460c08501610f01565b60c082015261010061100785828601610f46565b60e0830152610ec0856101808601610f01565b60006020828403121561102c57600080fd5b815180151581146100f257600080fd5b805167ffffffffffffffff8116811461105457600080fd5b919050565b60006080828403121561106b57600080fd5b6040516080810181811067ffffffffffffffff8211171561108e5761108e610bab565b60405261109a8361103c565b81526110a86020840161103c565b60208201526110b96040840161103c565b60408201526110ca6060840161103c565b60608201529392505050565b6000604082840312156110e857600080fd5b6040516040810181811067ffffffffffffffff8211171561110b5761110b610bab565b6040526111178361103c565b81526111256020840161103c565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8381169083168181101561118157611181611131565b039392505050565b600060e0828403121561119b57600080fd5b60405160e0810181811067ffffffffffffffff821117156111be576111be610bab565b6040526111ca8361103c565b81526111d86020840161103c565b60208201526111e96040840161103c565b60408201526111fa6060840161103c565b606082015261120b6080840161103c565b608082015261121c60a0840161103c565b60a082015261122d60c0840161103c565b60c08201529392505050565b600067ffffffffffffffff8084168061127b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff8083168185168083038211156112aa576112aa611131565b01949350505050565b600060208083850312156112c657600080fd5b825167ffffffffffffffff808211156112de57600080fd5b818501915085601f8301126112f257600080fd5b81518181111561130457611304610bab565b8060051b9150611315848301610c27565b818152918301840191848101908884111561132f57600080fd5b938501935b8385101561134d57845182529385019390850190611334565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220c28c25f84d2df7a4d91f4beeb75e3f1b9dbe2cf596d61ea2a6931b72e2c1f89164736f6c634300080d0033";

type Movev2SystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Movev2SystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Movev2System__factory extends ContractFactory {
  constructor(...args: Movev2SystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Movev2System> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<Movev2System>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): Movev2System {
    return super.attach(address) as Movev2System;
  }
  override connect(signer: Signer): Movev2System__factory {
    return super.connect(signer) as Movev2System__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Movev2SystemInterface {
    return new utils.Interface(_abi) as Movev2SystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Movev2System {
    return new Contract(address, _abi, signerOrProvider) as Movev2System;
  }
}
