/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Movev2System, Movev2SystemInterface } from "../Movev2System";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldSeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct MoveInfo",
        name: "moveInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001f2438038062001f2483398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000b5017901c565b5050505062000292565b600062000126620001ef60201b62000be11760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b611c8280620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063aa006f7a146100a7578063f2fde38b146100ba575b600080fd5b61006461005f3660046112fd565b6100cf565b60405161007191906113b0565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b53660046114c2565b61013e565b6100cd6100c836600461157f565b610ad4565b005b60606000828060200190518101906100e79190611630565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091906101869073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610c05565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040161016060405180830381865afa1580156101d1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f591906116e0565b8051909150156103515760006040518060e001604052808560800151815260200185600001518152602001856060015181526020018560a00151815260200185602001518152602001856040015181526020018560c001518152509050816040015173ffffffffffffffffffffffffffffffffffffffff1663c894e7578560e00151866101000151876101200151856040518563ffffffff1660e01b81526004016102a394939291906117d8565b602060405180830381865afa1580156102c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e4919061185c565b61034f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f4661696c6564206d6f76652070726f6f6620636865636b00000000000000000060448201526064015b60405180910390fd5b505b600080543391906103989073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610c05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610406573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042a919061185c565b610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74206a6f696e6564000000000000000000000000000000000000000000006044820152606401610346565b600080546104d49073ffffffffffffffffffffffffffffffffffffffff167f96b5cf7019465e93c7e5108d84c24e70f0d4aa63ab16b75f307df929278baad9610c05565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810185905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610566919061185c565b158061060757506040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810184905273ffffffffffffffffffffffffffffffffffffffff821690630ff4c91690602401602060405180830381865afa1580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc9190611877565b63ffffffff16600114155b61066d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f73746174757320696e76616c69640000000000000000000000000000000000006044820152606401610346565b600080546106b19073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e427610c05565b87516040517ffbdfa1ea000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff83169063fbdfa1ea90602401600060405180830381865afa158015610725573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261076b919081019061189d565b600080549192509081906107b59073ffffffffffffffffffffffffffffffffffffffff167f84597150db3a8cb31c3f847642911238944cee9a3b5f1ab47777bca06e6660e3610c05565b905060005b8351811015610873578173ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e8583815181106107f1576107f1611943565b60200260200101516040518263ffffffff1660e01b815260040161081791815260200190565b602060405180830381865afa158015610834573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610858919061185c565b61086157600192505b8061086b816119a1565b9150506107ba565b5081156108dc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6861766520656e74697479206f6e2074696c65000000000000000000000000006044820152606401610346565b600080546109209073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610c05565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa15801561096a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098e91906119f1565b9050806080015167ffffffffffffffff168b60200151111580156109c457508060a0015167ffffffffffffffff168b6040015111155b610a2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d69740000000000000000000000000000006044820152606401610346565b610a378b60c00151610d51565b8a516040517f1ab06ee500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff871691631ab06ee591610a94918c91600401918252602082015260400190565b600060405180830381600087803b158015610aae57600080fd5b505af1158015610ac2573d6000803e3d6000fd5b50505050505050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b44576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b4d8161115a565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610c75573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cbb919081019061189d565b90508051600003610d28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610346565b610d4981600081518110610d3e57610d3e611943565b602002602001015190565b949350505050565b60008054339190610d989073ffffffffffffffffffffffffffffffffffffffff167f189eafd1a01543209399086ef2e12962fca648be4826ce2b3eb2e53ed14bf141610c05565b6000805491925090610de09073ffffffffffffffffffffffffffffffffffffffff167f3c3102d48c6d31b1a70ddf8b23d300c759379d6506f2ef221cf3056d7c54dca7610c05565b6040517f720354530000000000000000000000000000000000000000000000000000000081526004810185905290915060009073ffffffffffffffffffffffffffffffffffffffff831690637203545390602401602060405180830381865afa158015610e51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e759190611aa1565b6000805491925090610ebd9073ffffffffffffffffffffffffffffffffffffffff167fdc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f7610c05565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160a060405180830381865afa158015610f07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f2b9190611ac4565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810187905290915060009073ffffffffffffffffffffffffffffffffffffffff861690630ff4c916906024016040805180830381865afa158015610f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fbf9190611b4e565b60208301518151919250600091610fd69042611ba9565b610fe09190611bd2565b8260200151610fef9190611c20565b905063ffffffff841667ffffffffffffffff82161115611012575063ffffffff83165b8767ffffffffffffffff168167ffffffffffffffff161015611090576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f6c61636b206f6620616374696f6e20706f696e747300000000000000000000006044820152606401610346565b61109a8882611ba9565b60408051808201825267ffffffffffffffff42811682528381166020830190815292517f4e6641a9000000000000000000000000000000000000000000000000000000008152600481018c90529151811660248301529151909116604482015290915073ffffffffffffffffffffffffffffffffffffffff871690634e6641a990606401600060405180830381600087803b15801561113857600080fd5b505af115801561114c573d6000803e3d6000fd5b505050505050505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610b4d928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156112615761126161120e565b60405290565b604051610160810167ffffffffffffffff811182821017156112615761126161120e565b6040805190810167ffffffffffffffff811182821017156112615761126161120e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156112f5576112f561120e565b604052919050565b6000602080838503121561131057600080fd5b823567ffffffffffffffff8082111561132857600080fd5b818501915085601f83011261133c57600080fd5b81358181111561134e5761134e61120e565b61137e847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016112ae565b9150808252868482850101111561139457600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156113dd578581018301518582016040015282016113c1565b818111156113ef576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f83011261143457600080fd5b61143c61128b565b80604084018581111561144e57600080fd5b845b81811015611468578035845260209384019301611450565b509095945050505050565b600082601f83011261148457600080fd5b61148c61128b565b80608084018581111561149e57600080fd5b845b81811015611468576114b28782611423565b84526020909301926040016114a0565b60006101e082840312156114d557600080fd5b6114dd61123d565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c082015261152a8460e08501611423565b60e082015261012061153e85828601611473565b610100830152611552856101a08601611423565b908201529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610b4d57600080fd5b60006020828403121561159157600080fd5b81356100f28161155d565b600082601f8301126115ad57600080fd5b6115b561128b565b8060408401858111156115c757600080fd5b845b818110156114685780518452602093840193016115c9565b600082601f8301126115f257600080fd5b6115fa61128b565b80608084018581111561160c57600080fd5b845b8181101561146857611620878261159c565b845260209093019260400161160e565b60006101e0828403121561164357600080fd5b61164b61123d565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526116988460e0850161159c565b60e08201526101206116ac858286016115e1565b610100830152611552856101a0860161159c565b805180151581146116d057600080fd5b919050565b80516116d08161155d565b600061016082840312156116f357600080fd5b6116fb611267565b611704836116c0565b8152611712602084016116d5565b6020820152611723604084016116d5565b6040820152611734606084016116d5565b6060820152611745608084016116d5565b608082015261175660a084016116d5565b60a082015261176760c084016116d5565b60c082015261177860e084016116d5565b60e082015261010061178b8185016116d5565b9082015261012061179d8482016116d5565b908201526101406115528482016116d5565b8060005b60028110156117d25781518452602093840193909101906001016117b3565b50505050565b6101e081016117e782876117af565b60408083018660005b6002811015611817576118048383516117af565b91830191602091909101906001016117f0565b5050505061182860c08301856117af565b61010082018360005b6007811015611850578151835260209283019290910190600101611831565b50505095945050505050565b60006020828403121561186e57600080fd5b6100f2826116c0565b60006020828403121561188957600080fd5b815163ffffffff811681146100f257600080fd5b600060208083850312156118b057600080fd5b825167ffffffffffffffff808211156118c857600080fd5b818501915085601f8301126118dc57600080fd5b8151818111156118ee576118ee61120e565b8060051b91506118ff8483016112ae565b818152918301840191848101908884111561191957600080fd5b938501935b838510156119375784518252938501939085019061191e565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119d2576119d2611972565b5060010190565b805167ffffffffffffffff811681146116d057600080fd5b600060e08284031215611a0357600080fd5b60405160e0810181811067ffffffffffffffff82111715611a2657611a2661120e565b604052611a32836119d9565b8152611a40602084016119d9565b6020820152611a51604084016119d9565b6040820152611a62606084016119d9565b6060820152611a73608084016119d9565b6080820152611a8460a084016119d9565b60a0820152611a9560c084016119d9565b60c08201529392505050565b600060208284031215611ab357600080fd5b81518060030b81146100f257600080fd5b600060a08284031215611ad657600080fd5b60405160a0810181811067ffffffffffffffff82111715611af957611af961120e565b604052611b05836119d9565b8152611b13602084016119d9565b6020820152611b24604084016119d9565b6040820152611b35606084016119d9565b6060820152608083015160808201528091505092915050565b600060408284031215611b6057600080fd5b6040516040810181811067ffffffffffffffff82111715611b8357611b8361120e565b604052611b8f836119d9565b8152611b9d602084016119d9565b60208201529392505050565b600067ffffffffffffffff83811690831681811015611bca57611bca611972565b039392505050565b600067ffffffffffffffff80841680611c14577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff808316818516808303821115611c4357611c43611972565b0194935050505056fea264697066735822122014f732a0cee6be10e958d08f280bebedefcdeadafb079a20e942427682aa143364736f6c634300080d0033";

type Movev2SystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Movev2SystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Movev2System__factory extends ContractFactory {
  constructor(...args: Movev2SystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Movev2System> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<Movev2System>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): Movev2System {
    return super.attach(address) as Movev2System;
  }
  override connect(signer: Signer): Movev2System__factory {
    return super.connect(signer) as Movev2System__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Movev2SystemInterface {
    return new utils.Interface(_abi) as Movev2SystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Movev2System {
    return new Contract(address, _abi, signerOrProvider) as Movev2System;
  }
}
