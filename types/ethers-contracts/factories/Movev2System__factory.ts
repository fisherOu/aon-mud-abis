/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Movev2System, Movev2SystemInterface } from "../Movev2System";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IWorld",
        name: "_world",
        type: "address",
      },
      {
        internalType: "address",
        name: "_components",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "args",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "coordHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "width",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "height",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "seed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldHash",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "oldSeed",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "distance",
            type: "uint256",
          },
          {
            internalType: "uint256[2]",
            name: "a",
            type: "uint256[2]",
          },
          {
            internalType: "uint256[2][2]",
            name: "b",
            type: "uint256[2][2]",
          },
          {
            internalType: "uint256[2]",
            name: "c",
            type: "uint256[2]",
          },
        ],
        internalType: "struct MoveInfo",
        name: "moveInfo",
        type: "tuple",
      },
    ],
    name: "executeTyped",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b0b38038062001b0b83398101604081905262000034916200022c565b818162000041336200010f565b6001600160a01b03811615620000585780620000bd565b816001600160a01b031663ba62fbe46040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000097573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bd91906200026b565b600080546001600160a01b03199081166001600160a01b0393841690811790925560018054909116928516928317905562000105919062000183602090811b62000c3517901c565b5050505062000292565b600062000126620001ef60201b62000cc61760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a8780546001600160a01b039384166001600160a01b0319918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6001600160a01b03811681146200022957600080fd5b50565b600080604083850312156200024057600080fd5b82516200024d8162000213565b6020840151909250620002608162000213565b809150509250929050565b6000602082840312156200027e57600080fd5b81516200028b8162000213565b9392505050565b61186980620002a26000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806309c5eabe146100515780638da5cb5b1461007a578063aa006f7a146100a7578063f2fde38b146100ba575b600080fd5b61006461005f366004610fd8565b6100cf565b604051610071919061108b565b60405180910390f35b6100826100f9565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610071565b6100646100b536600461119d565b61013e565b6100cd6100c836600461125a565b610bb9565b005b60606000828060200190518101906100e7919061130b565b90506100f28161013e565b9392505050565b60006101397f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b60008054606091906101869073ffffffffffffffffffffffffffffffffffffffff167fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3610cea565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa1580156101d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101f491906113b0565b8051909150156103505760006040518060e0016040528085608001518152602001856000015181526020018560c001518152602001856060015181526020018560a0015181526020018560200151815260200185604001518152509050816040015173ffffffffffffffffffffffffffffffffffffffff1663c894e7578560e00151866101000151876101200151856040518563ffffffff1660e01b81526004016102a29493929190611477565b602060405180830381865afa1580156102bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e391906114fb565b61034e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4661696c6564207069636b75702070726f6f6620636865636b0000000000000060448201526064015b60405180910390fd5b505b600080543391906103979073ffffffffffffffffffffffffffffffffffffffff167f8900e57ac2ff61c328bbaa69d2071a542ae5ff48c693375a49fd2937c1ef8332610cea565b6040517fcccf7a8e0000000000000000000000000000000000000000000000000000000081526004810184905290915073ffffffffffffffffffffffffffffffffffffffff82169063cccf7a8e90602401602060405180830381865afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906114fb565b61048f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74206a6f696e6564000000000000000000000000000000000000000000006044820152606401610345565b600080546104d39073ffffffffffffffffffffffffffffffffffffffff167f189eafd1a01543209399086ef2e12962fca648be4826ce2b3eb2e53ed14bf141610cea565b600080549192509061051b9073ffffffffffffffffffffffffffffffffffffffff167fdc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f7610cea565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b8152600401608060405180830381865afa158015610565573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610589919061152e565b6040517f0ff4c9160000000000000000000000000000000000000000000000000000000081526004810186905290915060009073ffffffffffffffffffffffffffffffffffffffff841690630ff4c916906024016040805180830381865afa1580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d91906115ab565b90506000816020015167ffffffffffffffff1611806106625750816020015167ffffffffffffffff168160000151426106569190611635565b67ffffffffffffffff16115b6106c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f206d6f766520706f696e74730000000000000000000000000000000000006044820152606401610345565b816060015167ffffffffffffffff168860c001511115610744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f6d6f766520746f6f2066617200000000000000000000000000000000000000006044820152606401610345565b600080546107889073ffffffffffffffffffffffffffffffffffffffff167fd7eb4644b0f312b764e14b10dbe895c6ee4acad8c1eb37a4791309b4d942e427610cea565b89516040517ffbdfa1ea000000000000000000000000000000000000000000000000000000008152600481019190915290915060009073ffffffffffffffffffffffffffffffffffffffff83169063fbdfa1ea90602401600060405180830381865afa1580156107fc573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610842919081019061165e565b51116108aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6861766520656e74697479206f6e2074696c65000000000000000000000000006044820152606401610345565b600080546108ee9073ffffffffffffffffffffffffffffffffffffffff167f9e0b856941fb70fc9b56c896d5f39a2079c3ed041dbc5e87efbf9c503b354b76610cea565b73ffffffffffffffffffffffffffffffffffffffff1663209652556040518163ffffffff1660e01b815260040160e060405180830381865afa158015610938573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095c9190611704565b9050806080015167ffffffffffffffff168a602001511115801561099257508060a0015167ffffffffffffffff168a6040015111155b6109f8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f726164697573206f766572206c696d69740000000000000000000000000000006044820152606401610345565b89516040517f1ab06ee500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841691631ab06ee591610a55918b91600401918252602082015260400190565b600060405180830381600087803b158015610a6f57600080fd5b505af1158015610a83573d6000803e3d6000fd5b50505050600a8a60c001511115610bac5760208401518351600091600191610aab9042611635565b610ab5919061178a565b8560200151610ac491906117d8565b610ace9190611635565b9050846040015167ffffffffffffffff168167ffffffffffffffff161115610af7575060408401515b60408051808201825267ffffffffffffffff42811682528381166020830190815292517f4e6641a9000000000000000000000000000000000000000000000000000000008152600481018c90529151811660248301529151909116604482015273ffffffffffffffffffffffffffffffffffffffff871690634e6641a990606401600060405180830381600087803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b50505050505b5050505050505050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c29576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c3281610e36565b50565b7ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a87805473ffffffffffffffffffffffffffffffffffffffff9384167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179091557ff67304f10c7772c78e439bc5cb07781db345424de8878c18100fdaa64d197a868054929093169116179055565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610d5a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610da0919081019061165e565b90508051600003610e0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f7420726567697374657265640000000000000000000000000000006044820152606401610345565b610e2e81600081518110610e2357610e23611804565b602002602001015190565b949350505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610c32928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff81118282101715610f3d57610f3d610eea565b60405290565b60405160e0810167ffffffffffffffff81118282101715610f3d57610f3d610eea565b6040805190810167ffffffffffffffff81118282101715610f3d57610f3d610eea565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fd057610fd0610eea565b604052919050565b60006020808385031215610feb57600080fd5b823567ffffffffffffffff8082111561100357600080fd5b818501915085601f83011261101757600080fd5b81358181111561102957611029610eea565b611059847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610f89565b9150808252868482850101111561106f57600080fd5b8084840185840137600090820190930192909252509392505050565b600060208083528351808285015260005b818110156110b85785810183015185820160400152820161109c565b818111156110ca576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b600082601f83011261110f57600080fd5b611117610f66565b80604084018581111561112957600080fd5b845b8181101561114357803584526020938401930161112b565b509095945050505050565b600082601f83011261115f57600080fd5b611167610f66565b80608084018581111561117957600080fd5b845b818110156111435761118d87826110fe565b845260209093019260400161117b565b60006101e082840312156111b057600080fd5b6111b8610f19565b823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015260c083013560c08201526112058460e085016110fe565b60e08201526101206112198582860161114e565b61010083015261122d856101a086016110fe565b908201529392505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610c3257600080fd5b60006020828403121561126c57600080fd5b81356100f281611238565b600082601f83011261128857600080fd5b611290610f66565b8060408401858111156112a257600080fd5b845b818110156111435780518452602093840193016112a4565b600082601f8301126112cd57600080fd5b6112d5610f66565b8060808401858111156112e757600080fd5b845b81811015611143576112fb8782611277565b84526020909301926040016112e9565b60006101e0828403121561131e57600080fd5b611326610f19565b825181526020830151602082015260408301516040820152606083015160608201526080830151608082015260a083015160a082015260c083015160c08201526113738460e08501611277565b60e0820152610120611387858286016112bc565b61010083015261122d856101a08601611277565b805180151581146113ab57600080fd5b919050565b600060e082840312156113c257600080fd5b6113ca610f43565b6113d38361139b565b815260208301516113e381611238565b602082015260408301516113f681611238565b6040820152606083015161140981611238565b6060820152608083015161141c81611238565b608082015260a083015161142f81611238565b60a082015260c083015161144281611238565b60c08201529392505050565b8060005b6002811015611471578151845260209384019390910190600101611452565b50505050565b6101e08101611486828761144e565b60408083018660005b60028110156114b6576114a383835161144e565b918301916020919091019060010161148f565b505050506114c760c083018561144e565b61010082018360005b60078110156114ef5781518352602092830192909101906001016114d0565b50505095945050505050565b60006020828403121561150d57600080fd5b6100f28261139b565b805167ffffffffffffffff811681146113ab57600080fd5b60006080828403121561154057600080fd5b6040516080810181811067ffffffffffffffff8211171561156357611563610eea565b60405261156f83611516565b815261157d60208401611516565b602082015261158e60408401611516565b604082015261159f60608401611516565b60608201529392505050565b6000604082840312156115bd57600080fd5b6040516040810181811067ffffffffffffffff821117156115e0576115e0610eea565b6040526115ec83611516565b81526115fa60208401611516565b60208201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff8381169083168181101561165657611656611606565b039392505050565b6000602080838503121561167157600080fd5b825167ffffffffffffffff8082111561168957600080fd5b818501915085601f83011261169d57600080fd5b8151818111156116af576116af610eea565b8060051b91506116c0848301610f89565b81815291830184019184810190888411156116da57600080fd5b938501935b838510156116f8578451825293850193908501906116df565b98975050505050505050565b600060e0828403121561171657600080fd5b61171e610f43565b61172783611516565b815261173560208401611516565b602082015261174660408401611516565b604082015261175760608401611516565b606082015261176860808401611516565b608082015261177960a08401611516565b60a082015261144260c08401611516565b600067ffffffffffffffff808416806117cc577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff8083168185168083038211156117fb576117fb611606565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea2646970667358221220005426fac23191554f85fc6e5933f88d369a6546946937b998896f2bd8bc884164736f6c634300080d0033";

type Movev2SystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Movev2SystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Movev2System__factory extends ContractFactory {
  constructor(...args: Movev2SystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Movev2System> {
    return super.deploy(
      _world,
      _components,
      overrides || {}
    ) as Promise<Movev2System>;
  }
  override getDeployTransaction(
    _world: PromiseOrValue<string>,
    _components: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_world, _components, overrides || {});
  }
  override attach(address: string): Movev2System {
    return super.attach(address) as Movev2System;
  }
  override connect(signer: Signer): Movev2System__factory {
    return super.connect(signer) as Movev2System__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Movev2SystemInterface {
    return new utils.Interface(_abi) as Movev2SystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Movev2System {
    return new Contract(address, _abi, signerOrProvider) as Movev2System;
  }
}
