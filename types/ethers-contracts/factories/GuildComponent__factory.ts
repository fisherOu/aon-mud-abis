/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GuildComponent,
  GuildComponentInterface,
} from "../GuildComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "leader",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "flag",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "createTime",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "regime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "taxRate",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "resource",
            type: "uint256",
          },
        ],
        internalType: "struct Guild",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "leader",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "flag",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "createTime",
            type: "uint64",
          },
          {
            internalType: "uint32",
            name: "regime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "taxRate",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "resource",
            type: "uint256",
          },
        ],
        internalType: "struct Guild",
        name: "guild",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001ce838038062001ce8833981016040819052620000349162000200565b807f47847aa6dad6656997b23b837b7a178fcf6ee815ad8065af73bc07856277a77662000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f3a1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f3a1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611aa680620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102bd578063dc7e8010146102d0578063f2fde38b146102e357600080fd5b8063b8bc073d1461028a578063bf4fe57e146102aa57600080fd5b80638da5cb5b146102455780639d2c76b41461024d578063af640d0f14610260578063b361be461461027757600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101fc578063861eb9051461020f5780638b2829471461023257600080fd5b80634fef6a38146101d35780636b122fe0146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e610149366004611201565b6102f6565b60405161015b9190611294565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103d6565b60405161015b919061136d565b6101d16101cc366004611201565b61040a565b005b6101d16101e13660046113b1565b610455565b6101ee610533565b60405161015b92919061141d565b6101d161020a3660046113b1565b610a53565b61022261021d3660046113b1565b610a85565b604051901515815260200161015b565b6101d1610240366004611651565b610b10565b610184610b5d565b6101d161025b3660046113b1565b610ba2565b61026960025481565b60405190815260200161015b565b6101b1610285366004611698565b6103d6565b61029d610298366004611201565b610ccb565b60405161015b91906116d5565b6101d16102b83660046113b1565b610d6d565b6102226102cb366004611201565b610e48565b6101d16102de36600461172b565b610e6a565b6101d16102f13660046113b1565b610ec1565b61035460405180610100016040528060008152602001606081526020016060815260200160608152602001600067ffffffffffffffff168152602001600063ffffffff168152602001600063ffffffff168152602001600081525090565b6000806000806000806000806103698a610ccb565b80602001905181019061037c919061188f565b6040805161010081018252988952602089019790975295870194909452606086019290925267ffffffffffffffff16608085015263ffffffff90811660a08501521660c083015260e08201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61041333610a85565b610449576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61045281610f5e565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104c5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160088082526101208201909252606091829190816020015b606081526020019060019003908161054f575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600681526020017f6c65616465720000000000000000000000000000000000000000000000000000815250826000815181106105d1576105d161195d565b6020026020010181905250600d816000815181106105f1576105f161195d565b6020026020010190602181111561060a5761060a6113ee565b9081602181111561061d5761061d6113ee565b815250506040518060400160405280600481526020017f666c6167000000000000000000000000000000000000000000000000000000008152508260018151811061066a5761066a61195d565b6020026020010181905250600f8160018151811061068a5761068a61195d565b602002602001019060218111156106a3576106a36113ee565b908160218111156106b6576106b66113ee565b815250506040518060400160405280600481526020017f6e616d6500000000000000000000000000000000000000000000000000000000815250826002815181106107035761070361195d565b6020026020010181905250600f816002815181106107235761072361195d565b6020026020010190602181111561073c5761073c6113ee565b9081602181111561074f5761074f6113ee565b815250506040518060400160405280600b81526020017f6465736372697074696f6e0000000000000000000000000000000000000000008152508260038151811061079c5761079c61195d565b6020026020010181905250600f816003815181106107bc576107bc61195d565b602002602001019060218111156107d5576107d56113ee565b908160218111156107e8576107e86113ee565b815250506040518060400160405280600a81526020017f63726561746554696d6500000000000000000000000000000000000000000000815250826004815181106108355761083561195d565b6020026020010181905250600b816004815181106108555761085561195d565b6020026020010190602181111561086e5761086e6113ee565b90816021811115610881576108816113ee565b815250506040518060400160405280600681526020017f726567696d650000000000000000000000000000000000000000000000000000815250826005815181106108ce576108ce61195d565b6020026020010181905250600a816005815181106108ee576108ee61195d565b60200260200101906021811115610907576109076113ee565b9081602181111561091a5761091a6113ee565b815250506040518060400160405280600781526020017f7461785261746500000000000000000000000000000000000000000000000000815250826006815181106109675761096761195d565b6020026020010181905250600a816006815181106109875761098761195d565b602002602001019060218111156109a0576109a06113ee565b908160218111156109b3576109b36113ee565b815250506040518060400160405280600881526020017f7265736f7572636500000000000000000000000000000000000000000000000081525082600781518110610a0057610a0061195d565b6020026020010181905250600d81600781518110610a2057610a2061195d565b60200260200101906021811115610a3957610a396113ee565b90816021811115610a4c57610a4c6113ee565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610b0a5750610adb610b5d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610b1933610a85565b610b4f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b598282610fcc565b5050565b6000610b9d7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c12576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610cb057600080fd5b505af1158015610cc4573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610ce89061198c565b80601f0160208091040260200160405190810160405280929190818152602001828054610d149061198c565b8015610d615780601f10610d3657610100808354040283529160200191610d61565b820191906000526020600020905b815481529060010190602001808311610d4457829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ddd576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610e619061198c565b15159392505050565b610b5982826000015183602001518460400151856060015186608001518760a001518860c001518960e00151604051602001610ead9897969594939291906119df565b604051602081830303815290604052610b10565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f31576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104528161107a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f759161112e565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610c96565b60008281526001602090815260409091208251610feb92840190611168565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906110449085908590600401611a57565b600060405180830381600087803b15801561105e57600080fd5b505af1158015611072573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610452928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461113a9061198c565b6000825580601f1061114a575050565b601f01602090049060005260206000209081019061045291906111ec565b8280546111749061198c565b90600052602060002090601f01602090048101928261119657600085556111dc565b82601f106111af57805160ff19168380011785556111dc565b828001600101855582156111dc579182015b828111156111dc5782518255916020019190600101906111c1565b506111e89291506111ec565b5090565b5b808211156111e857600081556001016111ed565b60006020828403121561121357600080fd5b5035919050565b60005b8381101561123557818101518382015260200161121d565b83811115611244576000848401525b50505050565b6000815180845261126281602086016020860161121a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815281516020820152600060208301516101008060408501526112bd61012085018361124a565b915060408501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808685030160608701526112f9848361124a565b9350606087015191508086850301608087015250611317838261124a565b925050608085015161133560a086018267ffffffffffffffff169052565b5060a085015163ffffffff811660c08601525060c085015163ffffffff811660e08601525060e0949094015192909301919091525090565b6020808252825182820181905260009190848201906040850190845b818110156113a557835183529284019291840191600101611389565b50909695505050505050565b6000602082840312156113c357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146113e757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611492577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261148086835161124a565b95509382019390820190600101611446565b50508584038187015286518085528782019482019350915060005b82811015611500578451602281106114ee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016114ad565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156115605761156061150d565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156115ad576115ad61150d565b604052919050565b600067ffffffffffffffff8211156115cf576115cf61150d565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261160c57600080fd5b813561161f61161a826115b5565b611566565b81815284602083860101111561163457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561166457600080fd5b82359150602083013567ffffffffffffffff81111561168257600080fd5b61168e858286016115fb565b9150509250929050565b6000602082840312156116aa57600080fd5b813567ffffffffffffffff8111156116c157600080fd5b6116cd848285016115fb565b949350505050565b6020815260006113e7602083018461124a565b67ffffffffffffffff8116811461045257600080fd5b8035611709816116e8565b919050565b63ffffffff8116811461045257600080fd5b80356117098161170e565b6000806040838503121561173e57600080fd5b82359150602083013567ffffffffffffffff8082111561175d57600080fd5b90840190610100828703121561177257600080fd5b61177a61153c565b8235815260208301358281111561179057600080fd5b61179c888286016115fb565b6020830152506040830135828111156117b457600080fd5b6117c0888286016115fb565b6040830152506060830135828111156117d857600080fd5b6117e4888286016115fb565b6060830152506117f6608084016116fe565b608082015261180760a08401611720565b60a082015261181860c08401611720565b60c082015260e083013560e08201528093505050509250929050565b600082601f83011261184557600080fd5b815161185361161a826115b5565b81815284602083860101111561186857600080fd5b6116cd82602083016020870161121a565b8051611709816116e8565b80516117098161170e565b600080600080600080600080610100898b0312156118ac57600080fd5b88519750602089015167ffffffffffffffff808211156118cb57600080fd5b6118d78c838d01611834565b985060408b01519150808211156118ed57600080fd5b6118f98c838d01611834565b975060608b015191508082111561190f57600080fd5b5061191c8b828c01611834565b95505061192b60808a01611879565b935061193960a08a01611884565b925061194760c08a01611884565b915060e089015190509295985092959890939650565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806119a057607f821691505b6020821081036119d9577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60006101008a83528060208401526119f98184018b61124a565b90508281036040840152611a0d818a61124a565b90508281036060840152611a21818961124a565b67ffffffffffffffff979097166080840152505063ffffffff93841660a08201529190921660c082015260e00152949350505050565b8281526040602082015260006116cd604083018461124a56fea2646970667358221220376b2826aaf7e8a5d64680522c4deb659f621c7b12e0bec646ede1d69ddd93ef64736f6c634300080d0033";

type GuildComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GuildComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GuildComponent__factory extends ContractFactory {
  constructor(...args: GuildComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GuildComponent> {
    return super.deploy(world, overrides || {}) as Promise<GuildComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): GuildComponent {
    return super.attach(address) as GuildComponent;
  }
  override connect(signer: Signer): GuildComponent__factory {
    return super.connect(signer) as GuildComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GuildComponentInterface {
    return new utils.Interface(_abi) as GuildComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GuildComponent {
    return new Contract(address, _abi, signerOrProvider) as GuildComponent;
  }
}
