/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  Resourcev2Component,
  Resourcev2ComponentInterface,
} from "../Resourcev2Component";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difficulty",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "recuitSeconds",
            type: "uint64",
          },
        ],
        internalType: "struct Resource",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "difficulty",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "recuitSeconds",
            type: "uint64",
          },
        ],
        internalType: "struct Resource",
        name: "resource",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200163f3803806200163f833981016040819052620000349162000200565b807fedfbc254303008e09cc3e514d4150bac7c69acbeb4ac0177f668a82648a4119e62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000be11760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000be11760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6113fd80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102d8578063cccf7a8e146102eb578063f2fde38b146102fe57600080fd5b8063b361be46146102a5578063b8bc073d146102b857600080fd5b80638b282947146102605780638da5cb5b146102735780639d2c76b41461027b578063af640d0f1461028e57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c1461021757806384491fff1461022a578063861eb9051461023d57600080fd5b80634fef6a38146101ee5780636b122fe01461020157600080fd5b80630ff4c9161461013b57806330b67baa1461017f57806331b933b9146101c45780634cc82215146101d9575b600080fd5b61014e610149366004610ea8565b610311565b6040805182518152602080840151908201529181015167ffffffffffffffff16908201526060015b60405180910390f35b60005461019f9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610176565b6101cc61038c565b6040516101769190610ec1565b6101ec6101e7366004610ea8565b6103c0565b005b6101ec6101fc366004610f05565b61040b565b6102096104e9565b604051610176929190610fdc565b6101ec610225366004610f05565b610709565b6101ec610238366004611111565b61073b565b61025061024b366004610f05565b610787565b6040519015158152602001610176565b6101ec61026e36600461125c565b610812565b61019f61085b565b6101ec610289366004610f05565b6108a0565b61029760025481565b604051908152602001610176565b6101cc6102b33660046112a3565b61038c565b6102cb6102c6366004610ea8565b6109c9565b60405161017691906112e0565b6101ec6102e6366004610f05565b610a6b565b6102506102f9366004610ea8565b610b46565b6101ec61030c366004610f05565b610b68565b61033f60405180606001604052806000815260200160008152602001600067ffffffffffffffff1681525090565b600080600061034d856109c9565b80602001905181019061036091906112f3565b60408051606081018252938452602084019290925267ffffffffffffffff169082015295945050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c933610787565b6103ff576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040881610c05565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461047b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161050457505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600581526020017f76616c7565000000000000000000000000000000000000000000000000000000815250826000815181106105845761058461132c565b6020026020010181905250600d816000815181106105a4576105a461132c565b602002602001019060218111156105bd576105bd610fad565b908160218111156105d0576105d0610fad565b815250506040518060400160405280600a81526020017f646966666963756c7479000000000000000000000000000000000000000000008152508260018151811061061d5761061d61132c565b6020026020010181905250600d8160018151811061063d5761063d61132c565b6020026020010190602181111561065657610656610fad565b9081602181111561066957610669610fad565b815250506040518060400160405280600d81526020017f7265637569745365636f6e647300000000000000000000000000000000000000815250826002815181106106b6576106b661132c565b6020026020010181905250600b816002815181106106d6576106d661132c565b602002602001019060218111156106ef576106ef610fad565b9081602181111561070257610702610fad565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b805160208083015160408085015181519384019490945282015267ffffffffffffffff9091166060820152610783908390608001604051602081830303815290604052610812565b5050565b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061080c57506107dd61085b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61081b33610787565b610851576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107838282610c73565b600061089b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610910576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109ae57600080fd5b505af11580156109c2573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906109e69061135b565b80601f0160208091040260200160405190810160405280929190818152602001828054610a129061135b565b8015610a5f5780601f10610a3457610100808354040283529160200191610a5f565b820191906000526020600020905b815481529060010190602001808311610a4257829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610adb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b5f9061135b565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610bd8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040881610d21565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610c1c91610dd5565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610994565b60008281526001602090815260409091208251610c9292840190610e0f565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610ceb90859085906004016113ae565b600060405180830381600087803b158015610d0557600080fd5b505af1158015610d19573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610408928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610de19061135b565b6000825580601f10610df1575050565b601f0160209004906000526020600020908101906104089190610e93565b828054610e1b9061135b565b90600052602060002090601f016020900481019282610e3d5760008555610e83565b82601f10610e5657805160ff1916838001178555610e83565b82800160010185558215610e83579182015b82811115610e83578251825591602001919060010190610e68565b50610e8f929150610e93565b5090565b5b80821115610e8f5760008155600101610e94565b600060208284031215610eba57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610ef957835183529284019291840191600101610edd565b50909695505050505050565b600060208284031215610f1757600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610f3b57600080fd5b9392505050565b6000815180845260005b81811015610f6857602081850181015186830182015201610f4c565b81811115610f7a576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611051577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261103f868351610f42565b95509382019390820190600101611005565b50508584038187015286518085528782019482019350915060005b828110156110bf578451602281106110ad577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161106c565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8116811461040857600080fd5b600080828403608081121561112557600080fd5b8335925060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08201121561115957600080fd5b506040516060810181811067ffffffffffffffff8211171561117d5761117d6110cc565b8060405250602084013581526040840135602082015260608401356111a1816110fb565b6040820152919491935090915050565b600082601f8301126111c257600080fd5b813567ffffffffffffffff808211156111dd576111dd6110cc565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611223576112236110cc565b8160405283815286602085880101111561123c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561126f57600080fd5b82359150602083013567ffffffffffffffff81111561128d57600080fd5b611299858286016111b1565b9150509250929050565b6000602082840312156112b557600080fd5b813567ffffffffffffffff8111156112cc57600080fd5b6112d8848285016111b1565b949350505050565b602081526000610f3b6020830184610f42565b60008060006060848603121561130857600080fd5b83519250602084015191506040840151611321816110fb565b809150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061136f57607f821691505b6020821081036113a8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006112d86040830184610f4256fea26469706673582212202568409e4eecfdb6d0253a5fe909f125866f23861c4f29b8ab0283c1ae80eed964736f6c634300080d0033";

type Resourcev2ComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Resourcev2ComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Resourcev2Component__factory extends ContractFactory {
  constructor(...args: Resourcev2ComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Resourcev2Component> {
    return super.deploy(world, overrides || {}) as Promise<Resourcev2Component>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): Resourcev2Component {
    return super.attach(address) as Resourcev2Component;
  }
  override connect(signer: Signer): Resourcev2Component__factory {
    return super.connect(signer) as Resourcev2Component__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Resourcev2ComponentInterface {
    return new utils.Interface(_abi) as Resourcev2ComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Resourcev2Component {
    return new Contract(address, _abi, signerOrProvider) as Resourcev2Component;
  }
}
