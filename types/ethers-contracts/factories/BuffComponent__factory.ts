/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BuffComponent, BuffComponentInterface } from "../BuffComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "buffType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "buffLevel",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetID",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "buffValue",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "buffTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Buff",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "buffType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "buffLevel",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "targetID",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isAdd",
            type: "bool",
          },
          {
            internalType: "uint64",
            name: "buffValue",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "buffTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Buff",
        name: "buff",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c4738038062001c47833981016040819052620000349162000200565b807f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd062000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000f411760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000f411760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611a0580620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638b282947146102455780638da5cb5b146102585780639d2c76b414610260578063af640d0f1461027357600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101f957806375c0669c1461020f578063861eb9051461022257600080fd5b80634cc82215146101d35780634fef6a38146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780633b630ba6146101be575b600080fd5b61014e610149366004611208565b6102f6565b60405161015b919061129b565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103dd565b60405161015b9190611330565b6101d16101cc366004611514565b610411565b005b6101d16101e1366004611208565b61046c565b6101d16101f43660046115f0565b6104b7565b610201610595565b60405161015b92919061165c565b6101d161021d3660046115f0565b610ab5565b6102356102303660046115f0565b610ae7565b604051901515815260200161015b565b6101d161025336600461174c565b610b72565b610184610bbb565b6101d161026e3660046115f0565b610c00565b61027c60025481565b60405190815260200161015b565b6101b1610298366004611793565b6103dd565b6102b06102ab366004611208565b610d29565b60405161015b91906117d0565b6101d16102cb3660046115f0565b610dcb565b6102356102de366004611208565b610ea6565b6101d16102f13660046115f0565b610ec8565b61035a60405180610100016040528060008152602001600063ffffffff168152602001606081526020016000815260200160008152602001600015158152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b60008060008060008060008061036f8a610d29565b80602001905181019061038291906117f9565b604080516101008101825298895263ffffffff90971660208901529587019490945260608601929092526080850152151560a084015267ffffffffffffffff90811660c08401521660e08201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61046882826000015183602001518460400151856060015186608001518760a001518860c001518960e001516040516020016104549897969594939291906118d5565b604051602081830303815290604052610b72565b5050565b61047533610ae7565b6104ab576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b481610f65565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610527576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160088082526101208201909252606091829190816020015b60608152602001906001900390816105b1575050604080516008808252610120820190925291935060208201610100803683370190505090506040518060400160405280600881526020017f62756666547970650000000000000000000000000000000000000000000000008152508260008151811061063357610633611934565b6020026020010181905250600d8160008151811061065357610653611934565b6020026020010190602181111561066c5761066c61162d565b9081602181111561067f5761067f61162d565b815250506040518060400160405280600981526020017f627566664c6576656c0000000000000000000000000000000000000000000000815250826001815181106106cc576106cc611934565b6020026020010181905250600a816001815181106106ec576106ec611934565b602002602001019060218111156107055761070561162d565b908160218111156107185761071861162d565b815250506040518060400160405280600681526020017f736f7572636500000000000000000000000000000000000000000000000000008152508260028151811061076557610765611934565b6020026020010181905250600f8160028151811061078557610785611934565b6020026020010190602181111561079e5761079e61162d565b908160218111156107b1576107b161162d565b815250506040518060400160405280600881526020017f736f757263654944000000000000000000000000000000000000000000000000815250826003815181106107fe576107fe611934565b6020026020010181905250600d8160038151811061081e5761081e611934565b602002602001019060218111156108375761083761162d565b9081602181111561084a5761084a61162d565b815250506040518060400160405280600881526020017f74617267657449440000000000000000000000000000000000000000000000008152508260048151811061089757610897611934565b6020026020010181905250600d816004815181106108b7576108b7611934565b602002602001019060218111156108d0576108d061162d565b908160218111156108e3576108e361162d565b815250506040518060400160405280600581526020017f69734164640000000000000000000000000000000000000000000000000000008152508260058151811061093057610930611934565b602002602001018190525060008160058151811061095057610950611934565b602002602001019060218111156109695761096961162d565b9081602181111561097c5761097c61162d565b815250506040518060400160405280600981526020017f6275666656616c75650000000000000000000000000000000000000000000000815250826006815181106109c9576109c9611934565b6020026020010181905250600b816006815181106109e9576109e9611934565b60200260200101906021811115610a0257610a0261162d565b90816021811115610a1557610a1561162d565b815250506040518060400160405280600b81526020017f6275666654696d656f757400000000000000000000000000000000000000000081525082600781518110610a6257610a62611934565b6020026020010181905250600b81600781518110610a8257610a82611934565b60200260200101906021811115610a9b57610a9b61162d565b90816021811115610aae57610aae61162d565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610b6c5750610b3d610bbb565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610b7b33610ae7565b610bb1576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104688282610fd3565b6000610bfb7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c70576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610d0e57600080fd5b505af1158015610d22573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610d4690611963565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7290611963565b8015610dbf5780601f10610d9457610100808354040283529160200191610dbf565b820191906000526020600020905b815481529060010190602001808311610da257829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e3b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610ebf90611963565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f38576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104b481611081565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610f7c91611135565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610cf4565b60008281526001602090815260409091208251610ff29284019061116f565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f9061104b90859085906004016119b6565b600060405180830381600087803b15801561106557600080fd5b505af1158015611079573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516104b4928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461114190611963565b6000825580601f10611151575050565b601f0160209004906000526020600020908101906104b491906111f3565b82805461117b90611963565b90600052602060002090601f01602090048101928261119d57600085556111e3565b82601f106111b657805160ff19168380011785556111e3565b828001600101855582156111e3579182015b828111156111e35782518255916020019190600101906111c8565b506111ef9291506111f3565b5090565b5b808211156111ef57600081556001016111f4565b60006020828403121561121a57600080fd5b5035919050565b60005b8381101561123c578181015183820152602001611224565b8381111561124b576000848401525b50505050565b60008151808452611269816020860160208601611221565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015263ffffffff6020830151166040820152600060408301516101008060608501526112d4610120850183611251565b915060608501516080850152608085015160a085015260a0850151151560c085015260c085015161131160e086018267ffffffffffffffff169052565b5060e085015167ffffffffffffffff8116858301525090949350505050565b6020808252825182820181905260009190848201906040850190845b818110156113685783518352928401929184019160010161134c565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156113c7576113c7611374565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561141457611414611374565b604052919050565b63ffffffff811681146104b457600080fd5b80356114398161141c565b919050565b600067ffffffffffffffff82111561145857611458611374565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261149557600080fd5b81356114a86114a38261143e565b6113cd565b8181528460208386010111156114bd57600080fd5b816020850160208301376000918101602001919091529392505050565b80151581146104b457600080fd5b8035611439816114da565b67ffffffffffffffff811681146104b457600080fd5b8035611439816114f3565b6000806040838503121561152757600080fd5b82359150602083013567ffffffffffffffff8082111561154657600080fd5b90840190610100828703121561155b57600080fd5b6115636113a3565b823581526115736020840161142e565b602082015260408301358281111561158a57600080fd5b61159688828601611484565b60408301525060608301356060820152608083013560808201526115bc60a084016114e8565b60a08201526115cd60c08401611509565b60c08201526115de60e08401611509565b60e08201528093505050509250929050565b60006020828403121561160257600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461162657600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156116d1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526116bf868351611251565b95509382019390820190600101611685565b50508584038187015286518085528782019482019350915060005b8281101561173f5784516022811061172d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016116ec565b5091979650505050505050565b6000806040838503121561175f57600080fd5b82359150602083013567ffffffffffffffff81111561177d57600080fd5b61178985828601611484565b9150509250929050565b6000602082840312156117a557600080fd5b813567ffffffffffffffff8111156117bc57600080fd5b6117c884828501611484565b949350505050565b6020815260006116266020830184611251565b8051611439816114da565b8051611439816114f3565b600080600080600080600080610100898b03121561181657600080fd5b8851975060208901516118288161141c565b60408a015190975067ffffffffffffffff81111561184557600080fd5b8901601f81018b1361185657600080fd5b80516118646114a38261143e565b8181528c602083850101111561187957600080fd5b61188a826020830160208601611221565b80985050505060608901519450608089015193506118aa60a08a016117e3565b92506118b860c08a016117ee565b91506118c660e08a016117ee565b90509295985092959890939650565b60006101008a835263ffffffff8a1660208401528060408401526118fb8184018a611251565b60608401989098525050608081019490945291151560a084015267ffffffffffffffff90811660c08401521660e0909101529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061197757607f821691505b6020821081036119b0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006117c8604083018461125156fea2646970667358221220dec0849712417818470b0453e6c2555203cf6acec991974e8a55ad2367a2df9764736f6c634300080d0033";

type BuffComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuffComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuffComponent__factory extends ContractFactory {
  constructor(...args: BuffComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuffComponent> {
    return super.deploy(world, overrides || {}) as Promise<BuffComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BuffComponent {
    return super.attach(address) as BuffComponent;
  }
  override connect(signer: Signer): BuffComponent__factory {
    return super.connect(signer) as BuffComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuffComponentInterface {
    return new utils.Interface(_abi) as BuffComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuffComponent {
    return new Contract(address, _abi, signerOrProvider) as BuffComponent;
  }
}
