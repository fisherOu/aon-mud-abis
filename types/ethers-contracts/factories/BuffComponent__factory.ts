/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { BuffComponent, BuffComponentInterface } from "../BuffComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "buffType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "buffLevel",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "buffValue",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "buffTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Buff",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "buffType",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "buffLevel",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "source",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "sourceID",
            type: "uint256",
          },
          {
            internalType: "uint64",
            name: "buffValue",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "buffTimeout",
            type: "uint64",
          },
        ],
        internalType: "struct Buff",
        name: "buff",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a6138038062001a61833981016040819052620000349162000200565b807f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd062000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000dda1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000dda1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61181f80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b361be461461028a578063b8bc073d1461029d57600080fd5b80638b282947146102455780638da5cb5b146102585780639d2c76b414610260578063af640d0f1461027357600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101f957806375c0669c1461020f578063861eb9051461022257600080fd5b80634cc82215146101d35780634fef6a38146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a957806332043bea146101be575b600080fd5b61014e6101493660046110a1565b6102f6565b60405161015b9190611134565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b16103b7565b60405161015b91906111a4565b6101d16101cc36600461134b565b6103eb565b005b6101d16101e13660046110a1565b61043a565b6101d16101f4366004611422565b610485565b610201610563565b60405161015b92919061148e565b6101d161021d366004611422565b61094e565b610235610230366004611422565b610980565b604051901515815260200161015b565b6101d161025336600461159e565b610a0b565b610184610a54565b6101d161026e366004611422565b610a99565b61027c60025481565b60405190815260200161015b565b6101b16102983660046115e5565b6103b7565b6102b06102ab3660046110a1565b610bc2565b60405161015b9190611622565b6101d16102cb366004611422565b610c64565b6102356102de3660046110a1565b610d3f565b6101d16102f1366004611422565b610d61565b6103496040518060c0016040528060008152602001600063ffffffff1681526020016060815260200160008152602001600067ffffffffffffffff168152602001600067ffffffffffffffff1681525090565b60008060008060008061035b88610bc2565b80602001905181019061036e9190611640565b6040805160c08101825296875263ffffffff909516602087015293850192909252606084015267ffffffffffffffff90811660808401521660a082015298975050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043682826000015183602001518460400151856060015186608001518760a0015160405160200161042296959493929190611700565b604051602081830303815290604052610a0b565b5050565b61044333610980565b610479576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61048281610dfe565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104f5576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600680825260e08201909252606091829190816020015b606081526020019060019003908161057e57505060408051600680825260e082019092529193506020820160c0803683370190505090506040518060400160405280600881526020017f6275666654797065000000000000000000000000000000000000000000000000815250826000815181106105fe576105fe61174e565b6020026020010181905250600d8160008151811061061e5761061e61174e565b602002602001019060218111156106375761063761145f565b9081602181111561064a5761064a61145f565b815250506040518060400160405280600981526020017f627566664c6576656c0000000000000000000000000000000000000000000000815250826001815181106106975761069761174e565b6020026020010181905250600a816001815181106106b7576106b761174e565b602002602001019060218111156106d0576106d061145f565b908160218111156106e3576106e361145f565b815250506040518060400160405280600681526020017f736f757263650000000000000000000000000000000000000000000000000000815250826002815181106107305761073061174e565b6020026020010181905250600f816002815181106107505761075061174e565b602002602001019060218111156107695761076961145f565b9081602181111561077c5761077c61145f565b815250506040518060400160405280600881526020017f736f757263654944000000000000000000000000000000000000000000000000815250826003815181106107c9576107c961174e565b6020026020010181905250600d816003815181106107e9576107e961174e565b602002602001019060218111156108025761080261145f565b908160218111156108155761081561145f565b815250506040518060400160405280600981526020017f6275666656616c75650000000000000000000000000000000000000000000000815250826004815181106108625761086261174e565b6020026020010181905250600b816004815181106108825761088261174e565b6020026020010190602181111561089b5761089b61145f565b908160218111156108ae576108ae61145f565b815250506040518060400160405280600b81526020017f6275666654696d656f7574000000000000000000000000000000000000000000815250826005815181106108fb576108fb61174e565b6020026020010181905250600b8160058151811061091b5761091b61174e565b602002602001019060218111156109345761093461145f565b908160218111156109475761094761145f565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610a0557506109d6610a54565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a1433610980565b610a4a576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104368282610e6c565b6000610a947f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b09576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610ba757600080fd5b505af1158015610bbb573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610bdf9061177d565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0b9061177d565b8015610c585780601f10610c2d57610100808354040283529160200191610c58565b820191906000526020600020905b815481529060010190602001808311610c3b57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610cd4576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610d589061177d565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dd1576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61048281610f1a565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e1591610fce565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b8d565b60008281526001602090815260409091208251610e8b92840190611008565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610ee490859085906004016117d0565b600060405180830381600087803b158015610efe57600080fd5b505af1158015610f12573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610482928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610fda9061177d565b6000825580601f10610fea575050565b601f016020900490600052602060002090810190610482919061108c565b8280546110149061177d565b90600052602060002090601f016020900481019282611036576000855561107c565b82601f1061104f57805160ff191683800117855561107c565b8280016001018555821561107c579182015b8281111561107c578251825591602001919060010190611061565b5061108892915061108c565b5090565b5b80821115611088576000815560010161108d565b6000602082840312156110b357600080fd5b5035919050565b60005b838110156110d55781810151838201526020016110bd565b838111156110e4576000848401525b50505050565b600081518084526111028160208601602086016110ba565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081528151602082015263ffffffff60208301511660408201526000604083015160c0606084015261116a60e08401826110ea565b905060608401516080840152608084015167ffffffffffffffff80821660a08601528060a08701511660c086015250508091505092915050565b6020808252825182820181905260009190848201906040850190845b818110156111dc578351835292840192918401916001016111c0565b50909695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561123a5761123a6111e8565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611287576112876111e8565b604052919050565b63ffffffff8116811461048257600080fd5b600067ffffffffffffffff8211156112bb576112bb6111e8565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60006112fa6112f5846112a1565b611240565b905082815283838301111561130e57600080fd5b828260208301376000602084830101529392505050565b67ffffffffffffffff8116811461048257600080fd5b803561134681611325565b919050565b6000806040838503121561135e57600080fd5b82359150602083013567ffffffffffffffff8082111561137d57600080fd5b9084019060c0828703121561139157600080fd5b611399611217565b8235815260208301356113ab8161128f565b60208201526040830135828111156113c257600080fd5b83019150601f820187136113d557600080fd5b6113e4878335602085016112e7565b6040820152606083013560608201526113ff6080840161133b565b608082015261141060a0840161133b565b60a08201528093505050509250929050565b60006020828403121561143457600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461145857600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611503577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526114f18683516110ea565b955093820193908201906001016114b7565b50508584038187015286518085528782019482019350915060005b828110156115715784516022811061155f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161151e565b5091979650505050505050565b600082601f83011261158f57600080fd5b611458838335602085016112e7565b600080604083850312156115b157600080fd5b82359150602083013567ffffffffffffffff8111156115cf57600080fd5b6115db8582860161157e565b9150509250929050565b6000602082840312156115f757600080fd5b813567ffffffffffffffff81111561160e57600080fd5b61161a8482850161157e565b949350505050565b60208152600061145860208301846110ea565b805161134681611325565b60008060008060008060c0878903121561165957600080fd5b86519550602087015161166b8161128f565b604088015190955067ffffffffffffffff81111561168857600080fd5b8701601f8101891361169957600080fd5b80516116a76112f5826112a1565b8181528a60208385010111156116bc57600080fd5b6116cd8260208301602086016110ba565b809650505050606087015192506116e660808801611635565b91506116f460a08801611635565b90509295509295509295565b86815263ffffffff8616602082015260c06040820152600061172560c08301876110ea565b60608301959095525067ffffffffffffffff9283166080820152911660a0909101529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061179157607f821691505b6020821081036117ca577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061161a60408301846110ea56fea26469706673582212209efd7d73e8ebae7a64db0347ee248a6d166324668ef3ae8ffcc9dcf43e515a1264736f6c634300080d0033";

type BuffComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BuffComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BuffComponent__factory extends ContractFactory {
  constructor(...args: BuffComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BuffComponent> {
    return super.deploy(world, overrides || {}) as Promise<BuffComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): BuffComponent {
    return super.attach(address) as BuffComponent;
  }
  override connect(signer: Signer): BuffComponent__factory {
    return super.connect(signer) as BuffComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BuffComponentInterface {
    return new utils.Interface(_abi) as BuffComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BuffComponent {
    return new Contract(address, _abi, signerOrProvider) as BuffComponent;
  }
}
