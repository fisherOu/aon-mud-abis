/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  APLimitComponent,
  APLimitComponentInterface,
} from "../APLimitComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getBuffValue",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        internalType: "int32",
        name: "",
        type: "int32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "int32",
        name: "value",
        type: "int32",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001dca38038062001dca833981016040819052620000349162000343565b807f3c3102d48c6d31b1a70ddf8b23d300c759379d6506f2ef221cf3056d7c54dca781816200006333620001b4565b60028190556001600160a01b038216156200008357620000838262000228565b5050600580546001600160a01b0319166001600160a01b03841690811790915560408051632e98bef960e21b8152905163ba62fbe4916004808201926020929091908290030181865afa158015620000df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000105919062000343565b600380546001600160a01b0319166001600160a01b03928316179055600554604080516306ac999760e11b815290519190921691630d59332e9160048083019260209291908290030181865afa15801562000164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200018a919062000343565b600480546001600160a01b0319166001600160a01b0392909216919091179055506200036a915050565b6000620001cb620002e060201b62000a791760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b6200023262000304565b6001600160a01b0316336001600160a01b0316146200026457604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b158015620002c457600080fd5b505af1158015620002d9573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60006200031b620002e060201b62000a791760201c565b546001600160a01b0316919050565b6001600160a01b03811681146200034057600080fd5b50565b6000602082840312156200035657600080fd5b815162000363816200032a565b9392505050565b611a50806200037a6000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c80638b282947116100cd578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102ed578063d93c413f14610300578063f2fde38b1461031357600080fd5b8063b8bc073d146102ba578063bf4fe57e146102da57600080fd5b80639d2c76b4116100b25780639d2c76b41461027d578063af640d0f14610290578063b361be46146102a757600080fd5b80638b282947146102625780638da5cb5b1461027557600080fd5b80634fef6a38116101245780637203545311610109578063720354531461021957806375c0669c1461022c578063861eb9051461023f57600080fd5b80634fef6a38146101f05780636b122fe01461020357600080fd5b80630ff4c9161461015657806330b67baa1461018157806331b933b9146101c65780634cc82215146101db575b600080fd5b6101696101643660046111dd565b610326565b60405160039190910b81526020015b60405180910390f35b6000546101a19073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610178565b6101ce61034c565b60405161017891906111f6565b6101ee6101e93660046111dd565b610380565b005b6101ee6101fe36600461123a565b6103cb565b61020b6104a9565b604051610178929190611319565b6101696102273660046111dd565b610595565b6101ee61023a36600461123a565b6105c0565b61025261024d36600461123a565b6105f2565b6040519015158152602001610178565b6101ee61027036600461154d565b61067d565b6101a16106ca565b6101ee61028b36600461123a565b61070f565b61029960025481565b604051908152602001610178565b6101ce6102b5366004611594565b61034c565b6102cd6102c83660046111dd565b610838565b60405161017891906115c9565b6101ee6102e836600461123a565b6108da565b6102526102fb3660046111dd565b6109b5565b6101ee61030e3660046115eb565b6109d7565b6101ee61032136600461123a565b610a00565b60008061033283610838565b806020019051810190610345919061161b565b9392505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610389336105f2565b6103bf576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c881610a9d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461043b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b604080516001808252818301909252606091829190816020015b60608152602001906001900390816104c3575050604080516001808252818301909252919350602080830190803683370190505090506040518060400160405280600581526020017f76616c75650000000000000000000000000000000000000000000000000000008152508260008151811061054257610542611638565b602002602001018190525060038160008151811061056257610562611638565b6020026020010190602181111561057b5761057b6112ea565b9081602181111561058e5761058e6112ea565b9052509091565b6000806105a183610838565b8060200190518101906105b4919061161b565b90506103458382610b0b565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff168061067757506106486106ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610686336105f2565b6106bc576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106c68282610d74565b5050565b600061070a7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461077f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561081d57600080fd5b505af1158015610831573d6000803e3d6000fd5b5050505050565b600081815260016020526040902080546060919061085590611667565b80601f016020809104026020016040519081016040528092919081815260200182805461088190611667565b80156108ce5780601f106108a3576101008083540402835291602001916108ce565b820191906000526020600020905b8154815290600101906020018083116108b157829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461094a576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b600081815260016020526040812080546109ce90611667565b15159392505050565b60408051600383900b60208201526106c69184910160405160208183030381529060405261067d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a70576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c881610e22565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610ab49161110a565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610803565b6003546000908190610b539073ffffffffffffffffffffffffffffffffffffffff167f1f5722521ba251ca87967835668e1714c5eb024990bbd3f5f1dcdc98dc7cbbd0610e2b565b90506000610b6085610f7b565b905083925060005b8151811015610d6b578273ffffffffffffffffffffffffffffffffffffffff1663cccf7a8e838381518110610b9f57610b9f611638565b60200260200101516040518263ffffffff1660e01b8152600401610bc591815260200190565b602060405180830381865afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0691906116cf565b15610d595760008373ffffffffffffffffffffffffffffffffffffffff16630ff4c916848481518110610c3b57610c3b611638565b60200260200101516040518263ffffffff1660e01b8152600401610c6191815260200190565b600060405180830381865afa158015610c7e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610cc4919081019061175b565b90508060e0015167ffffffffffffffff1660001480610cf15750428160e0015167ffffffffffffffff1610155b8015610d20575060808101517f3c3102d48c6d31b1a70ddf8b23d300c759379d6506f2ef221cf3056d7c54dca7145b15610d57578060a0015115610d455760c0810151610d3e908661185a565b9450610d57565b60c0810151610d5490866118be565b94505b505b80610d6381611923565b915050610b68565b50505092915050565b60008281526001602090815260409091208251610d9392840190611144565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610dec908590859060040161195b565b600060405180830381600087803b158015610e0657600080fd5b505af1158015610e1a573d6000803e3d6000fd5b505050505050565b6103c88161105e565b6040517ffbdfa1ea00000000000000000000000000000000000000000000000000000000815260048101829052600090819073ffffffffffffffffffffffffffffffffffffffff85169063fbdfa1ea90602401600060405180830381865afa158015610e9b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ee19190810190611974565b90508051600003610f52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f6964206e6f742072656769737465726564000000000000000000000000000000604482015260640160405180910390fd5b610f7381600081518110610f6857610f68611638565b602002602001015190565b949350505050565b600354606090610fc19073ffffffffffffffffffffffffffffffffffffffff167f2d1944d7c92d4cf7892c9f8d3312e879c70e4e7904208d77f458b7bf7c952e19610e2b565b73ffffffffffffffffffffffffffffffffffffffff1663fbdfa1ea836040518263ffffffff1660e01b8152600401610ffb91815260200190565b600060405180830381865afa158015611018573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106779190810190611974565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f671680460805460405173ffffffffffffffffffffffffffffffffffffffff8481169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461111690611667565b6000825580601f10611126575050565b601f0160209004906000526020600020908101906103c891906111c8565b82805461115090611667565b90600052602060002090601f01602090048101928261117257600085556111b8565b82601f1061118b57805160ff19168380011785556111b8565b828001600101855582156111b8579182015b828111156111b857825182559160200191906001019061119d565b506111c49291506111c8565b5090565b5b808211156111c457600081556001016111c9565b6000602082840312156111ef57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b8181101561122e57835183529284019291840191600101611212565b50909695505050505050565b60006020828403121561124c57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461034557600080fd5b60005b8381101561128b578181015183820152602001611273565b8381111561129a576000848401525b50505050565b600081518084526112b8816020860160208601611270565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561138e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261137c8683516112a0565b95509382019390820190600101611342565b50508584038187015286518085528782019482019350915060005b828110156113fc578451602281106113ea577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016113a9565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff8111828210171561145c5761145c611409565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156114a9576114a9611409565b604052919050565b600067ffffffffffffffff8211156114cb576114cb611409565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261150857600080fd5b813561151b611516826114b1565b611462565b81815284602083860101111561153057600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561156057600080fd5b82359150602083013567ffffffffffffffff81111561157e57600080fd5b61158a858286016114f7565b9150509250929050565b6000602082840312156115a657600080fd5b813567ffffffffffffffff8111156115bd57600080fd5b610f73848285016114f7565b60208152600061034560208301846112a0565b8060030b81146103c857600080fd5b600080604083850312156115fe57600080fd5b823591506020830135611610816115dc565b809150509250929050565b60006020828403121561162d57600080fd5b8151610345816115dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061167b57607f821691505b6020821081036116b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b805180151581146116ca57600080fd5b919050565b6000602082840312156116e157600080fd5b610345826116ba565b805163ffffffff811681146116ca57600080fd5b600082601f83011261170f57600080fd5b815161171d611516826114b1565b81815284602083860101111561173257600080fd5b610f73826020830160208701611270565b805167ffffffffffffffff811681146116ca57600080fd5b60006020828403121561176d57600080fd5b815167ffffffffffffffff8082111561178557600080fd5b90830190610100828603121561179a57600080fd5b6117a2611438565b825181526117b2602084016116ea565b60208201526040830151828111156117c957600080fd5b6117d5878286016116fe565b60408301525060608301516060820152608083015160808201526117fb60a084016116ba565b60a082015261180c60c08401611743565b60c082015261181d60e08401611743565b60e082015295945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160030b8360030b6000821282637fffffff038213811516156118815761188161182b565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffff800000000382128116156118b5576118b561182b565b50019392505050565b60008160030b8360030b60008112817fffffffffffffffffffffffffffffffffffffffffffffffffffffffff80000000018312811516156119015761190161182b565b81637fffffff0183138116156119195761191961182b565b5090039392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036119545761195461182b565b5060010190565b828152604060208201526000610f7360408301846112a0565b6000602080838503121561198757600080fd5b825167ffffffffffffffff8082111561199f57600080fd5b818501915085601f8301126119b357600080fd5b8151818111156119c5576119c5611409565b8060051b91506119d6848301611462565b81815291830184019184810190888411156119f057600080fd5b938501935b83851015611a0e578451825293850193908501906119f5565b9897505050505050505056fea26469706673582212209e1281d1bf39b954f5250a90c9ec4f506c502b80831cbcc8b52e310a3e7fc14a64736f6c634300080d0033";

type APLimitComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: APLimitComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class APLimitComponent__factory extends ContractFactory {
  constructor(...args: APLimitComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<APLimitComponent> {
    return super.deploy(world, overrides || {}) as Promise<APLimitComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): APLimitComponent {
    return super.attach(address) as APLimitComponent;
  }
  override connect(signer: Signer): APLimitComponent__factory {
    return super.connect(signer) as APLimitComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): APLimitComponentInterface {
    return new utils.Interface(_abi) as APLimitComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): APLimitComponent {
    return new Contract(address, _abi, signerOrProvider) as APLimitComponent;
  }
}
