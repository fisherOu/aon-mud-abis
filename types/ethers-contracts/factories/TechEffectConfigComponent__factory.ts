/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TechEffectConfigComponent,
  TechEffectConfigComponentInterface,
} from "../TechEffectConfigComponent";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "world",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "BareComponent__NotImplemented",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnableWritable__NotWriter",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "Ownable__NotTransitiveOwner",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "authorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntities",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "getEntitiesWithValue",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getRawValue",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSchema",
    outputs: [
      {
        internalType: "string[]",
        name: "keys",
        type: "string[]",
      },
      {
        internalType: "enum LibTypes.SchemaValue[]",
        name: "values",
        type: "uint8[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "getValue",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "techEffectType",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "buffRareType",
            type: "uint64",
          },
        ],
        internalType: "struct TechEffectConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "has",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "id",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "registerIndexer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_world",
        type: "address",
      },
    ],
    name: "registerWorld",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
    ],
    name: "remove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "value",
        type: "bytes",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "entity",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "techEffectType",
            type: "uint32",
          },
          {
            internalType: "string",
            name: "asset",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint64",
            name: "buffRareType",
            type: "uint64",
          },
        ],
        internalType: "struct TechEffectConfig",
        name: "techEffect",
        type: "tuple",
      },
    ],
    name: "set",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "writer",
        type: "address",
      },
    ],
    name: "unauthorizeWriter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "world",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "writeAccess",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620018ea380380620018ea833981016040819052620000349162000200565b807f61d243c3575534ca25f26c7528dabf88c9841540ee76616c9c9e22a5603ab52e62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000c711760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000c711760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6116a880620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063c0f3d74611610066578063c0f3d746146102bd578063cccf7a8e146102d0578063f2fde38b146102e357600080fd5b8063b8bc073d1461028a578063bf4fe57e146102aa57600080fd5b80638da5cb5b146102455780639d2c76b41461024d578063af640d0f14610260578063b361be461461027757600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c146101fc578063861eb9051461020f5780638b2829471461023257600080fd5b80634fef6a38146101d35780636b122fe0146101e657600080fd5b80630ff4c9161461013b57806330b67baa1461016457806331b933b9146101a95780634cc82215146101be575b600080fd5b61014e610149366004610f38565b6102f6565b60405161015b9190610fcb565b60405180910390f35b6000546101849073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b6101b161038c565b60405161015b9190611053565b6101d16101cc366004610f38565b6103c0565b005b6101d16101e1366004611097565b61040b565b6101ee6104e9565b60405161015b929190611103565b6101d161020a366004611097565b6107a2565b61022261021d366004611097565b6107d4565b604051901515815260200161015b565b6101d1610240366004611336565b61085f565b6101846108ac565b6101d161025b366004611097565b6108f1565b61026960025481565b60405190815260200161015b565b6101b161028536600461137d565b61038c565b61029d610298366004610f38565b610a1a565b60405161015b91906113ba565b6101d16102b8366004611097565b610abc565b6101d16102cb3660046113f5565b610b97565b6102226102de366004610f38565b610bd6565b6101d16102f1366004611097565b610bf8565b6103316040518060800160405280600063ffffffff1681526020016060815260200160608152602001600067ffffffffffffffff1681525090565b60008060008061034086610a1a565b8060200190518101906103539190611500565b6040805160808101825263ffffffff909516855260208501939093529183015267ffffffffffffffff1660608201529695505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103c9336107d4565b6103ff576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040881610c95565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461047b576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600480825260a08201909252606091829190816020015b606081526020019060019003908161050457505060408051600480825260a08201909252919350602082016080803683370190505090506040518060400160405280600e81526020017f7465636845666665637454797065000000000000000000000000000000000000815250826000815181106105845761058461158a565b6020026020010181905250600a816000815181106105a4576105a461158a565b602002602001019060218111156105bd576105bd6110d4565b908160218111156105d0576105d06110d4565b815250506040518060400160405280600581526020017f61737365740000000000000000000000000000000000000000000000000000008152508260018151811061061d5761061d61158a565b6020026020010181905250600f8160018151811061063d5761063d61158a565b60200260200101906021811115610656576106566110d4565b90816021811115610669576106696110d4565b815250506040518060400160405280600481526020017f6e616d6500000000000000000000000000000000000000000000000000000000815250826002815181106106b6576106b661158a565b6020026020010181905250600f816002815181106106d6576106d661158a565b602002602001019060218111156106ef576106ef6110d4565b90816021811115610702576107026110d4565b815250506040518060400160405280600c81526020017f62756666526172655479706500000000000000000000000000000000000000008152508260038151811061074f5761074f61158a565b6020026020010181905250600b8160038151811061076f5761076f61158a565b60200260200101906021811115610788576107886110d4565b9081602181111561079b5761079b6110d4565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610859575061082a6108ac565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610868336107d4565b61089e576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6108a88282610d03565b5050565b60006108ec7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610961576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156109ff57600080fd5b505af1158015610a13573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610a37906115b9565b80601f0160208091040260200160405190810160405280929190818152602001828054610a63906115b9565b8015610ab05780601f10610a8557610100808354040283529160200191610ab0565b820191906000526020600020905b815481529060010190602001808311610a9357829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b2c576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6108a8828260000151836020015184604001518560600151604051602001610bc2949392919061160c565b60405160208183030381529060405261085f565b60008181526001602052604081208054610bef906115b9565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610c68576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61040881610db1565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610cac91610e65565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b5906024016109e5565b60008281526001602090815260409091208251610d2292840190610e9f565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610d7b9085908590600401611659565b600060405180830381600087803b158015610d9557600080fd5b505af1158015610da9573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610408928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610e71906115b9565b6000825580601f10610e81575050565b601f0160209004906000526020600020908101906104089190610f23565b828054610eab906115b9565b90600052602060002090601f016020900481019282610ecd5760008555610f13565b82601f10610ee657805160ff1916838001178555610f13565b82800160010185558215610f13579182015b82811115610f13578251825591602001919060010190610ef8565b50610f1f929150610f23565b5090565b5b80821115610f1f5760008155600101610f24565b600060208284031215610f4a57600080fd5b5035919050565b60005b83811015610f6c578181015183820152602001610f54565b83811115610f7b576000848401525b50505050565b60008151808452610f99816020860160208601610f51565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815263ffffffff82511660208201526000602083015160806040840152610ff760a0840182610f81565b905060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08483030160608501526110328282610f81565b91505067ffffffffffffffff60608501511660808401528091505092915050565b6020808252825182820181905260009190848201906040850190845b8181101561108b5783518352928401929184019160010161106f565b50909695505050505050565b6000602082840312156110a957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146110cd57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611178577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552611166868351610f81565b9550938201939082019060010161112c565b50508584038187015286518085528782019482019350915060005b828110156111e6578451602281106111d4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611193565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715611245576112456111f3565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611292576112926111f3565b604052919050565b600067ffffffffffffffff8211156112b4576112b46111f3565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126112f157600080fd5b81356113046112ff8261129a565b61124b565b81815284602083860101111561131957600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561134957600080fd5b82359150602083013567ffffffffffffffff81111561136757600080fd5b611373858286016112e0565b9150509250929050565b60006020828403121561138f57600080fd5b813567ffffffffffffffff8111156113a657600080fd5b6113b2848285016112e0565b949350505050565b6020815260006110cd6020830184610f81565b63ffffffff8116811461040857600080fd5b67ffffffffffffffff8116811461040857600080fd5b6000806040838503121561140857600080fd5b82359150602083013567ffffffffffffffff8082111561142757600080fd5b908401906080828703121561143b57600080fd5b611443611222565b823561144e816113cd565b815260208301358281111561146257600080fd5b61146e888286016112e0565b60208301525060408301358281111561148657600080fd5b611492888286016112e0565b604083015250606083013592506114a8836113df565b8260608201528093505050509250929050565b600082601f8301126114cc57600080fd5b81516114da6112ff8261129a565b8181528460208386010111156114ef57600080fd5b6113b2826020830160208701610f51565b6000806000806080858703121561151657600080fd5b8451611521816113cd565b602086015190945067ffffffffffffffff8082111561153f57600080fd5b61154b888389016114bb565b9450604087015191508082111561156157600080fd5b5061156e878288016114bb565b925050606085015161157f816113df565b939692955090935050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806115cd57607f821691505b602082108103611606577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b63ffffffff8516815260806020820152600061162b6080830186610f81565b828103604084015261163d8186610f81565b91505067ffffffffffffffff8316606083015295945050505050565b8281526040602082015260006113b26040830184610f8156fea2646970667358221220ea9c225b9138c226d8f263343209fcbc591da59510c4dd25a0259f9268cdc52664736f6c634300080d0033";

type TechEffectConfigComponentConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TechEffectConfigComponentConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TechEffectConfigComponent__factory extends ContractFactory {
  constructor(...args: TechEffectConfigComponentConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TechEffectConfigComponent> {
    return super.deploy(
      world,
      overrides || {}
    ) as Promise<TechEffectConfigComponent>;
  }
  override getDeployTransaction(
    world: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(world, overrides || {});
  }
  override attach(address: string): TechEffectConfigComponent {
    return super.attach(address) as TechEffectConfigComponent;
  }
  override connect(signer: Signer): TechEffectConfigComponent__factory {
    return super.connect(signer) as TechEffectConfigComponent__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TechEffectConfigComponentInterface {
    return new utils.Interface(_abi) as TechEffectConfigComponentInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TechEffectConfigComponent {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TechEffectConfigComponent;
  }
}
