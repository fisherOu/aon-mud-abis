{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attackPathVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "coordVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attackPathVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "coordVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "moveConfig",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001dad38038062001dad833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b620010e51760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b620010e51760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611b6b80620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b80630c95c26d1461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611450565b6102eb565b005b6101586103b6565b6040516101659190611518565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb6104a9565b6040516101659190611674565b61014e6101d63660046116b8565b6104dd565b61014e6101e93660046116d1565b610525565b6101f6610603565b60405161016592919061178f565b61014e6102123660046116d1565b610c55565b61022a6102253660046116d1565b610c87565b6040519015158152602001610165565b61014e61024836600461192a565b610d12565b61018e610d5f565b61014e6102633660046116d1565b610da4565b61027160025481565b604051908152602001610165565b6101bb61028d366004611971565b6104a9565b6102a56102a03660046116b8565b610ecd565b60405161016591906119ae565b61014e6102c03660046116d1565b610f6f565b61022a6102d33660046116b8565b61104a565b61014e6102e63660046116d1565b61106c565b6103b361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b610120015160405160200161039f9a999897969594939291909915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015296881660408a01529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201526101400190565b604051602081830303815290604052610d12565b50565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290529080808080808080808061041b61060d610ecd565b80602001905181019061042e91906119c1565b60408051610140810182529a15158b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c0152978916978a01979097529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201529b9a5050505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e633610c87565b61051c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611109565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610595576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600a8082526101608201909252606091829190816020015b606081526020019060019003908161061f57505060408051600a808252610160820190925291935060208201610140803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106106a1576106a1611a9a565b60200260200101819052506000816000815181106106c1576106c1611a9a565b602002602001019060218111156106da576106da611760565b908160218111156106ed576106ed611760565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061073a5761073a611a9a565b602002602001018190525060108160018151811061075a5761075a611a9a565b6020026020010190602181111561077357610773611760565b9081602181111561078657610786611760565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107d3576107d3611a9a565b60200260200101819052506010816002815181106107f3576107f3611a9a565b6020026020010190602181111561080c5761080c611760565b9081602181111561081f5761081f611760565b815250506040518060400160405280601181526020017f6d61726b566572696679416464726573730000000000000000000000000000008152508260038151811061086c5761086c611a9a565b602002602001018190525060108160038151811061088c5761088c611a9a565b602002602001019060218111156108a5576108a5611760565b908160218111156108b8576108b8611760565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061090557610905611a9a565b602002602001018190525060108160048151811061092557610925611a9a565b6020026020010190602181111561093e5761093e611760565b9081602181111561095157610951611760565b815250506040518060400160405280601781526020017f74726561737572655665726966797632416464726573730000000000000000008152508260058151811061099e5761099e611a9a565b60200260200101819052506010816005815181106109be576109be611a9a565b602002602001019060218111156109d7576109d7611760565b908160218111156109ea576109ea611760565b815250506040518060400160405280601581526020017f7265736f7572636556657269667941646472657373000000000000000000000081525082600681518110610a3757610a37611a9a565b6020026020010181905250601081600681518110610a5757610a57611a9a565b60200260200101906021811115610a7057610a70611760565b90816021811115610a8357610a83611760565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600781518110610ad057610ad0611a9a565b6020026020010181905250601081600781518110610af057610af0611a9a565b60200260200101906021811115610b0957610b09611760565b90816021811115610b1c57610b1c611760565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600881518110610b6957610b69611a9a565b6020026020010181905250601081600881518110610b8957610b89611a9a565b60200260200101906021811115610ba257610ba2611760565b90816021811115610bb557610bb5611760565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600981518110610c0257610c02611a9a565b6020026020010181905250601081600981518110610c2257610c22611a9a565b60200260200101906021811115610c3b57610c3b611760565b90816021811115610c4e57610c4e611760565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610d0c5750610cdd610d5f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610d1b33610c87565b610d51576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5b8282611177565b5050565b6000610d9f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e14576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610eb257600080fd5b505af1158015610ec6573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610eea90611ac9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1690611ac9565b8015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610fdf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461106390611ac9565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146110dc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611225565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120611120916112d9565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610e98565b6000828152600160209081526040909120825161119692840190611313565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111ef9085908590600401611b1c565b600060405180830381600087803b15801561120957600080fd5b505af115801561121d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103b3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546112e590611ac9565b6000825580601f106112f5575050565b601f0160209004906000526020600020908101906103b39190611397565b82805461131f90611ac9565b90600052602060002090601f0160209004810192826113415760008555611387565b82601f1061135a57805160ff1916838001178555611387565b82800160010185558215611387579182015b8281111561138757825182559160200191906001019061136c565b50611393929150611397565b5090565b5b808211156113935760008155600101611398565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156113ff576113ff6113ac565b60405290565b80151581146103b357600080fd5b803561141e81611405565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103b357600080fd5b803561141e81611423565b6000610140828403121561146357600080fd5b61146b6113db565b61147483611413565b815261148260208401611445565b602082015261149360408401611445565b60408201526114a460608401611445565b60608201526114b560808401611445565b60808201526114c660a08401611445565b60a08201526114d760c08401611445565b60c08201526114e860e08401611445565b60e08201526101006114fb818501611445565b9082015261012061150d848201611445565b908201529392505050565b8151151581526101408101602083015161154a602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611572604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015161159a606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516115c2608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516115ea60a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161161260c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161163a60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015173ffffffffffffffffffffffffffffffffffffffff908116918401919091526101209384015116929091019190915290565b6020808252825182820181905260009190848201906040850190845b818110156116ac57835183529284019291840191600101611690565b50909695505050505050565b6000602082840312156116ca57600080fd5b5035919050565b6000602082840312156116e357600080fd5b81356116ee81611423565b9392505050565b6000815180845260005b8181101561171b576020818501810151868301820152016116ff565b8181111561172d576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611804577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117f28683516116f5565b955093820193908201906001016117b8565b50508584038187015286518085528782019482019350915060005b8281101561187257845160228110611860577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161181f565b5091979650505050505050565b600082601f83011261189057600080fd5b813567ffffffffffffffff808211156118ab576118ab6113ac565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156118f1576118f16113ac565b8160405283815286602085880101111561190a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561193d57600080fd5b82359150602083013567ffffffffffffffff81111561195b57600080fd5b6119678582860161187f565b9150509250929050565b60006020828403121561198357600080fd5b813567ffffffffffffffff81111561199a57600080fd5b6119a68482850161187f565b949350505050565b6020815260006116ee60208301846116f5565b6000806000806000806000806000806101408b8d0312156119e157600080fd5b8a516119ec81611405565b60208c0151909a506119fd81611423565b60408c0151909950611a0e81611423565b60608c0151909850611a1f81611423565b60808c0151909750611a3081611423565b60a08c0151909650611a4181611423565b60c08c0151909550611a5281611423565b60e08c0151909450611a6381611423565b6101008c0151909350611a7581611423565b6101208c0151909250611a8781611423565b809150509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611add57607f821691505b602082108103611b16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006119a660408301846116f556fea2646970667358221220c18575ef6571a2de2f227d991eb74f28e9adb74c0774294782f8e410140e37f764736f6c634300080d0033",
    "sourceMap": "619:2753:162:-:0;;;669:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;710:5;242:31;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;669:54:162;619:2753;;1203:207:33;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:33;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:33;-1:-1:-1;;;;;1386:17:33;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:33;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:33;:10;-1:-1:-1;;;;;422:22:33;;418:54;;453:19;;-1:-1:-1;;;453:19:33;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:257::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:257;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:34:-;186:49;;242:159::o;647:111:33:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:33;;647:111;-1:-1:-1;647:111:33:o;14:290:257:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:257;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:257:o;309:274::-;619:2753:162;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b80630c95c26d1461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611450565b6102eb565b005b6101586103b6565b6040516101659190611518565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb6104a9565b6040516101659190611674565b61014e6101d63660046116b8565b6104dd565b61014e6101e93660046116d1565b610525565b6101f6610603565b60405161016592919061178f565b61014e6102123660046116d1565b610c55565b61022a6102253660046116d1565b610c87565b6040519015158152602001610165565b61014e61024836600461192a565b610d12565b61018e610d5f565b61014e6102633660046116d1565b610da4565b61027160025481565b604051908152602001610165565b6101bb61028d366004611971565b6104a9565b6102a56102a03660046116b8565b610ecd565b60405161016591906119ae565b61014e6102c03660046116d1565b610f6f565b61022a6102d33660046116b8565b61104a565b61014e6102e63660046116d1565b61106c565b6103b361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a61010001518b610120015160405160200161039f9a999897969594939291909915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b015296881660408a01529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201526101400190565b604051602081830303815290604052610d12565b50565b6040805161014081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081018290529080808080808080808061041b61060d610ecd565b80602001905181019061042e91906119c1565b60408051610140810182529a15158b5273ffffffffffffffffffffffffffffffffffffffff998a1660208c0152978916978a01979097529487166060890152928616608088015290851660a0870152841660c0860152831660e08501528216610100840152166101208201529b9a5050505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104e633610c87565b61051c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611109565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610595576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600a8082526101608201909252606091829190816020015b606081526020019060019003908161061f57505060408051600a808252610160820190925291935060208201610140803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106106a1576106a1611a9a565b60200260200101819052506000816000815181106106c1576106c1611a9a565b602002602001019060218111156106da576106da611760565b908160218111156106ed576106ed611760565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061073a5761073a611a9a565b602002602001018190525060108160018151811061075a5761075a611a9a565b6020026020010190602181111561077357610773611760565b9081602181111561078657610786611760565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107d3576107d3611a9a565b60200260200101819052506010816002815181106107f3576107f3611a9a565b6020026020010190602181111561080c5761080c611760565b9081602181111561081f5761081f611760565b815250506040518060400160405280601181526020017f6d61726b566572696679416464726573730000000000000000000000000000008152508260038151811061086c5761086c611a9a565b602002602001018190525060108160038151811061088c5761088c611a9a565b602002602001019060218111156108a5576108a5611760565b908160218111156108b8576108b8611760565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061090557610905611a9a565b602002602001018190525060108160048151811061092557610925611a9a565b6020026020010190602181111561093e5761093e611760565b9081602181111561095157610951611760565b815250506040518060400160405280601781526020017f74726561737572655665726966797632416464726573730000000000000000008152508260058151811061099e5761099e611a9a565b60200260200101819052506010816005815181106109be576109be611a9a565b602002602001019060218111156109d7576109d7611760565b908160218111156109ea576109ea611760565b815250506040518060400160405280601581526020017f7265736f7572636556657269667941646472657373000000000000000000000081525082600681518110610a3757610a37611a9a565b6020026020010181905250601081600681518110610a5757610a57611a9a565b60200260200101906021811115610a7057610a70611760565b90816021811115610a8357610a83611760565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600781518110610ad057610ad0611a9a565b6020026020010181905250601081600781518110610af057610af0611a9a565b60200260200101906021811115610b0957610b09611760565b90816021811115610b1c57610b1c611760565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600881518110610b6957610b69611a9a565b6020026020010181905250601081600881518110610b8957610b89611a9a565b60200260200101906021811115610ba257610ba2611760565b90816021811115610bb557610bb5611760565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600981518110610c0257610c02611a9a565b6020026020010181905250601081600981518110610c2257610c22611a9a565b60200260200101906021811115610c3b57610c3b611760565b90816021811115610c4e57610c4e611760565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610d0c5750610cdd610d5f565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610d1b33610c87565b610d51576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610d5b8282611177565b5050565b6000610d9f7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610e14576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610eb257600080fd5b505af1158015610ec6573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610eea90611ac9565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1690611ac9565b8015610f635780601f10610f3857610100808354040283529160200191610f63565b820191906000526020600020905b815481529060010190602001808311610f4657829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610fdf576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000818152600160205260408120805461106390611ac9565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146110dc576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103b381611225565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120611120916112d9565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610e98565b6000828152600160209081526040909120825161119692840190611313565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111ef9085908590600401611b1c565b600060405180830381600087803b15801561120957600080fd5b505af115801561121d573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103b3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b5080546112e590611ac9565b6000825580601f106112f5575050565b601f0160209004906000526020600020908101906103b39190611397565b82805461131f90611ac9565b90600052602060002090601f0160209004810192826113415760008555611387565b82601f1061135a57805160ff1916838001178555611387565b82800160010185558215611387579182015b8281111561138757825182559160200191906001019061136c565b50611393929150611397565b5090565b5b808211156113935760008155600101611398565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610140810167ffffffffffffffff811182821017156113ff576113ff6113ac565b60405290565b80151581146103b357600080fd5b803561141e81611405565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103b357600080fd5b803561141e81611423565b6000610140828403121561146357600080fd5b61146b6113db565b61147483611413565b815261148260208401611445565b602082015261149360408401611445565b60408201526114a460608401611445565b60608201526114b560808401611445565b60808201526114c660a08401611445565b60a08201526114d760c08401611445565b60c08201526114e860e08401611445565b60e08201526101006114fb818501611445565b9082015261012061150d848201611445565b908201529392505050565b8151151581526101408101602083015161154a602084018273ffffffffffffffffffffffffffffffffffffffff169052565b506040830151611572604084018273ffffffffffffffffffffffffffffffffffffffff169052565b50606083015161159a606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516115c2608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a08301516115ea60a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161161260c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161163a60e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101008381015173ffffffffffffffffffffffffffffffffffffffff908116918401919091526101209384015116929091019190915290565b6020808252825182820181905260009190848201906040850190845b818110156116ac57835183529284019291840191600101611690565b50909695505050505050565b6000602082840312156116ca57600080fd5b5035919050565b6000602082840312156116e357600080fd5b81356116ee81611423565b9392505050565b6000815180845260005b8181101561171b576020818501810151868301820152016116ff565b8181111561172d576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015611804577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526117f28683516116f5565b955093820193908201906001016117b8565b50508584038187015286518085528782019482019350915060005b8281101561187257845160228110611860577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8452938101939281019260010161181f565b5091979650505050505050565b600082601f83011261189057600080fd5b813567ffffffffffffffff808211156118ab576118ab6113ac565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156118f1576118f16113ac565b8160405283815286602085880101111561190a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561193d57600080fd5b82359150602083013567ffffffffffffffff81111561195b57600080fd5b6119678582860161187f565b9150509250929050565b60006020828403121561198357600080fd5b813567ffffffffffffffff81111561199a57600080fd5b6119a68482850161187f565b949350505050565b6020815260006116ee60208301846116f5565b6000806000806000806000806000806101408b8d0312156119e157600080fd5b8a516119ec81611405565b60208c0151909a506119fd81611423565b60408c0151909950611a0e81611423565b60608c0151909850611a1f81611423565b60808c0151909750611a3081611423565b60a08c0151909650611a4181611423565b60c08c0151909550611a5281611423565b60e08c0151909450611a6381611423565b6101008c0151909350611a7581611423565b6101208c0151909250611a8781611423565b809150509295989b9194979a5092959850565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680611add57607f821691505b602082108103611b16577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006119a660408301846116f556fea2646970667358221220c18575ef6571a2de2f227d991eb74f28e9adb74c0774294782f8e410140e37f764736f6c634300080d0033",
    "sourceMap": "619:2753:162:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1882:615;;;;;;:::i;:::-;;:::i;:::-;;2503:867;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:0;;;;;;;;;;;;3759:42:257;3747:55;;;3729:74;;3717:2;3702:18;870:20:0;3583:226:257;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;955:144:6:-;;;;;;:::i;:::-;;:::i;729:1147:162:-;;;:::i;:::-;;;;;;;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;7443:14:257;;7436:22;7418:41;;7406:2;7391:18;440:168:6;7278:187:257;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:32:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;8791:25:257;;;8779:2;8764:18;1052:17:0;8645:177:257;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;514:113:32:-;;;;;;:::i;:::-;;:::i;1882:615:162:-;1940:550;89:5:9;2010:10:162;:15;;;2043:10;:28;;;2089:10;:28;;;2135:10;:28;;;2181:10;:32;;;2231:10;:34;;;2283:10;:32;;;2333:10;:34;;;2385:10;:34;;;2437:10;:29;;;1982:498;;;;;;;;;;;;;;;;9793:14:257;;9786:22;9768:41;;9828:42;9906:15;;;9901:2;9886:18;;9879:43;9958:15;;;9953:2;9938:18;;9931:43;10010:15;;;10005:2;9990:18;;9983:43;10063:15;;;10057:3;10042:19;;10035:44;10116:15;;;10110:3;10095:19;;10088:44;10169:15;;10163:3;10148:19;;10141:44;10222:15;;10216:3;10201:19;;10194:44;10275:15;;10269:3;10254:19;;10247:44;10328:15;10322:3;10307:19;;10300:44;9755:3;9740:19;;9375:975;1982:498:162;;;;;;;;;;;;;1940:3;:550::i;:::-;1882:615;:::o;2503:867::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2991:24:162;89:5:9;2991:11:162;:24::i;:::-;2963:171;;;;;;;;;;;;:::i;:::-;3151:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2503:867;-1:-1:-1;;;;;;;;;;;2503:867:162:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;955:144:6:-:0;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;729:1147:162:-;893:16;;;906:2;893:16;;;;;;;;;812:20;;;;893:16;;;;;;;;;;;;;;;;;;-1:-1:-1;;928:30:162;;;955:2;928:30;;;;;;;;;886:23;;-1:-1:-1;928:30:162;;;;;;;;;;-1:-1:-1;928:30:162;919:39;;969:16;;;;;;;;;;;;;;;;;:4;974:1;969:7;;;;;;;;:::i;:::-;;;;;;:16;;;;1007:25;995:6;1002:1;995:9;;;;;;;;:::i;:::-;;;;;;:37;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1043:29;;;;;;;;;;;;;;;;;:4;1048:1;1043:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1094:28;1082:6;1089:1;1082:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1133:29;;;;;;;;;;;;;;;;;:4;1138:1;1133:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1184:28;1172:6;1179:1;1172:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1223:29;;;;;;;;;;;;;;;;;:4;1228:1;1223:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1274:28;1262:6;1269:1;1262:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1313:33;;;;;;;;;;;;;;;;;:4;1318:1;1313:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1368:28;1356:6;1363:1;1356:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1407:35;;;;;;;;;;;;;;;;;:4;1412:1;1407:7;;;;;;;;:::i;:::-;;;;;;:35;;;;1464:28;1452:6;1459:1;1452:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1503:33;;;;;;;;;;;;;;;;;:4;1508:1;1503:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1558:28;1546:6;1553:1;1546:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1597:35;;;;;;;;;;;;;;;;;:4;1602:1;1597:7;;;;;;;;:::i;:::-;;;;;;:35;;;;1654:28;1642:6;1649:1;1642:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1693:35;;;;;;;;;;;;;;;;;:4;1698:1;1693:7;;;;;;;;:::i;:::-;;;;;;:35;;;;1750:28;1738:6;1745:1;1738:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1789:30;;;;;;;;;;;;;;;;;:4;1794:1;1789:7;;;;;;;;:::i;:::-;;;;;;:30;;;;1841:28;1829:6;1836:1;1829:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;729:1147:162;;:::o;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:32:-;424:7;450:8;186:49:34;722:29:33;;;;647:111;450:8:32;443:15;;378:87;:::o;1302:137:0:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;12253:74:257::0;12343:18;;;12336:34;;;;1384:31:0::1;::::0;12226:18:257;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;514:113:32:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:32::1;612:7;593:18;:27::i;242:159:34:-:0;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;8791:25:257;;;4366:5:0;;;;;4359:43;;8764:18:257;;4359:51:0;8645:177:257;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:33:-;186:49:34;1359:7:33;;1338:38;;1172:18;;1182:7;;186:49:34;;1338:38:33;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:257;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:247;270:2;264:9;312:3;300:16;;346:18;331:34;;367:22;;;328:62;325:88;;;393:18;;:::i;:::-;429:2;422:22;203:247;:::o;455:118::-;541:5;534:13;527:21;520:5;517:32;507:60;;563:1;560;553:12;578:128;643:20;;672:28;643:20;672:28;:::i;:::-;578:128;;;:::o;711:154::-;797:42;790:5;786:54;779:5;776:65;766:93;;855:1;852;845:12;870:134;938:20;;967:31;938:20;967:31;:::i;1009:970::-;1095:6;1148:3;1136:9;1127:7;1123:23;1119:33;1116:53;;;1165:1;1162;1155:12;1116:53;1191:17;;:::i;:::-;1231:26;1247:9;1231:26;:::i;:::-;1224:5;1217:41;1290:38;1324:2;1313:9;1309:18;1290:38;:::i;:::-;1285:2;1278:5;1274:14;1267:62;1361:38;1395:2;1384:9;1380:18;1361:38;:::i;:::-;1356:2;1349:5;1345:14;1338:62;1432:38;1466:2;1455:9;1451:18;1432:38;:::i;:::-;1427:2;1420:5;1416:14;1409:62;1504:39;1538:3;1527:9;1523:19;1504:39;:::i;:::-;1498:3;1491:5;1487:15;1480:64;1577:39;1611:3;1600:9;1596:19;1577:39;:::i;:::-;1571:3;1564:5;1560:15;1553:64;1650:39;1684:3;1673:9;1669:19;1650:39;:::i;:::-;1644:3;1637:5;1633:15;1626:64;1723:39;1757:3;1746:9;1742:19;1723:39;:::i;:::-;1717:3;1710:5;1706:15;1699:64;1782:3;1817:38;1851:2;1840:9;1836:18;1817:38;:::i;:::-;1801:14;;;1794:62;1875:3;1910:38;1929:18;;;1910:38;:::i;:::-;1894:14;;;1887:62;1898:5;1009:970;-1:-1:-1;;;1009:970:257:o;2212:1366::-;2429:13;;2054;2047:21;2035:34;;2400:3;2385:19;;2501:4;2493:6;2489:17;2483:24;2516:54;2564:4;2553:9;2549:20;2535:12;2157:42;2146:54;2134:67;;2080:127;2516:54;;2619:4;2611:6;2607:17;2601:24;2634:56;2684:4;2673:9;2669:20;2653:14;2157:42;2146:54;2134:67;;2080:127;2634:56;;2739:4;2731:6;2727:17;2721:24;2754:56;2804:4;2793:9;2789:20;2773:14;2157:42;2146:54;2134:67;;2080:127;2754:56;;2859:4;2851:6;2847:17;2841:24;2874:56;2924:4;2913:9;2909:20;2893:14;2157:42;2146:54;2134:67;;2080:127;2874:56;;2979:4;2971:6;2967:17;2961:24;2994:56;3044:4;3033:9;3029:20;3013:14;2157:42;2146:54;2134:67;;2080:127;2994:56;;3099:4;3091:6;3087:17;3081:24;3114:56;3164:4;3153:9;3149:20;3133:14;2157:42;2146:54;2134:67;;2080:127;3114:56;;3219:4;3211:6;3207:17;3201:24;3234:56;3284:4;3273:9;3269:20;3253:14;2157:42;2146:54;2134:67;;2080:127;3234:56;-1:-1:-1;3309:6:257;3352:15;;;3346:22;2157:42;2146:54;;;3412:18;;;2134:67;;;;3450:6;3493:15;;;3487:22;2146:54;3553:18;;;;2134:67;;;;2212:1366;:::o;3814:632::-;3985:2;4037:21;;;4107:13;;4010:18;;;4129:22;;;3956:4;;3985:2;4208:15;;;;4182:2;4167:18;;;3956:4;4251:169;4265:6;4262:1;4259:13;4251:169;;;4326:13;;4314:26;;4395:15;;;;4360:12;;;;4287:1;4280:9;4251:169;;;-1:-1:-1;4437:3:257;;3814:632;-1:-1:-1;;;;;;3814:632:257:o;4451:180::-;4510:6;4563:2;4551:9;4542:7;4538:23;4534:32;4531:52;;;4579:1;4576;4569:12;4531:52;-1:-1:-1;4602:23:257;;4451:180;-1:-1:-1;4451:180:257:o;4636:247::-;4695:6;4748:2;4736:9;4727:7;4723:23;4719:32;4716:52;;;4764:1;4761;4754:12;4716:52;4803:9;4790:23;4822:31;4847:5;4822:31;:::i;:::-;4872:5;4636:247;-1:-1:-1;;;4636:247:257:o;4888:531::-;4930:3;4968:5;4962:12;4995:6;4990:3;4983:19;5020:1;5030:162;5044:6;5041:1;5038:13;5030:162;;;5106:4;5162:13;;;5158:22;;5152:29;5134:11;;;5130:20;;5123:59;5059:12;5030:162;;;5210:6;5207:1;5204:13;5201:87;;;5276:1;5269:4;5260:6;5255:3;5251:16;5247:27;5240:38;5201:87;-1:-1:-1;5333:2:257;5321:15;5338:66;5317:88;5308:98;;;;5408:4;5304:109;;4888:531;-1:-1:-1;;4888:531:257:o;5424:184::-;5476:77;5473:1;5466:88;5573:4;5570:1;5563:15;5597:4;5594:1;5587:15;5613:1660;5866:4;5914:2;5903:9;5899:18;5944:2;5933:9;5926:21;5967:6;6002;5996:13;6033:6;6025;6018:22;6071:2;6060:9;6056:18;6049:25;;6133:2;6123:6;6120:1;6116:14;6105:9;6101:30;6097:39;6083:53;;6155:4;6194:2;6186:6;6182:15;6215:1;6225:314;6239:6;6236:1;6233:13;6225:314;;;6328:66;6316:9;6308:6;6304:22;6300:95;6295:3;6288:108;6419:40;6452:6;6443;6437:13;6419:40;:::i;:::-;6409:50;-1:-1:-1;6517:12:257;;;;6482:15;;;;6261:1;6254:9;6225:314;;;-1:-1:-1;;6575:22:257;;;6555:18;;;6548:50;6651:13;;6673:24;;;6755:15;;;;6715;;;-1:-1:-1;6651:13:257;-1:-1:-1;6790:1:257;6800:445;6816:8;6811:3;6808:17;6800:445;;;6887:8;6881:15;6926:2;6922;6919:10;6909:218;;6971:77;6968:1;6961:88;7076:4;7073:1;7066:15;7108:4;7105:1;7098:15;6909:218;7140:17;;7218;;;;7179:14;;;;6844:1;6835:11;6800:445;;;-1:-1:-1;7262:5:257;;5613:1660;-1:-1:-1;;;;;;;5613:1660:257:o;7470:777::-;7512:5;7565:3;7558:4;7550:6;7546:17;7542:27;7532:55;;7583:1;7580;7573:12;7532:55;7619:6;7606:20;7645:18;7682:2;7678;7675:10;7672:36;;;7688:18;;:::i;:::-;7822:2;7816:9;7884:4;7876:13;;7727:66;7872:22;;;7896:2;7868:31;7864:40;7852:53;;;7920:18;;;7940:22;;;7917:46;7914:72;;;7966:18;;:::i;:::-;8006:10;8002:2;7995:22;8041:2;8033:6;8026:18;8087:3;8080:4;8075:2;8067:6;8063:15;8059:26;8056:35;8053:55;;;8104:1;8101;8094:12;8053:55;8168:2;8161:4;8153:6;8149:17;8142:4;8134:6;8130:17;8117:54;8215:1;8208:4;8203:2;8195:6;8191:15;8187:26;8180:37;8235:6;8226:15;;;;;;7470:777;;;;:::o;8252:388::-;8329:6;8337;8390:2;8378:9;8369:7;8365:23;8361:32;8358:52;;;8406:1;8403;8396:12;8358:52;8442:9;8429:23;8419:33;;8503:2;8492:9;8488:18;8475:32;8530:18;8522:6;8519:30;8516:50;;;8562:1;8559;8552:12;8516:50;8585:49;8626:7;8617:6;8606:9;8602:22;8585:49;:::i;:::-;8575:59;;;8252:388;;;;;:::o;8827:320::-;8895:6;8948:2;8936:9;8927:7;8923:23;8919:32;8916:52;;;8964:1;8961;8954:12;8916:52;9004:9;8991:23;9037:18;9029:6;9026:30;9023:50;;;9069:1;9066;9059:12;9023:50;9092:49;9133:7;9124:6;9113:9;9109:22;9092:49;:::i;:::-;9082:59;8827:320;-1:-1:-1;;;;8827:320:257:o;9152:218::-;9299:2;9288:9;9281:21;9262:4;9319:45;9360:2;9349:9;9345:18;9337:6;9319:45;:::i;10355:1530::-;10575:6;10583;10591;10599;10607;10615;10623;10631;10639;10647;10700:3;10688:9;10679:7;10675:23;10671:33;10668:53;;;10717:1;10714;10707:12;10668:53;10749:9;10743:16;10768:28;10790:5;10768:28;:::i;:::-;10865:2;10850:18;;10844:25;10815:5;;-1:-1:-1;10878:33:257;10844:25;10878:33;:::i;:::-;10982:2;10967:18;;10961:25;10930:7;;-1:-1:-1;10995:33:257;10961:25;10995:33;:::i;:::-;11099:2;11084:18;;11078:25;11047:7;;-1:-1:-1;11112:33:257;11078:25;11112:33;:::i;:::-;11216:3;11201:19;;11195:26;11164:7;;-1:-1:-1;11230:33:257;11195:26;11230:33;:::i;:::-;11334:3;11319:19;;11313:26;11282:7;;-1:-1:-1;11348:33:257;11313:26;11348:33;:::i;:::-;11452:3;11437:19;;11431:26;11400:7;;-1:-1:-1;11466:33:257;11431:26;11466:33;:::i;:::-;11570:3;11555:19;;11549:26;11518:7;;-1:-1:-1;11584:33:257;11549:26;11584:33;:::i;:::-;11688:3;11673:19;;11667:26;11636:7;;-1:-1:-1;11702:33:257;11667:26;11702:33;:::i;:::-;11806:3;11791:19;;11785:26;11754:7;;-1:-1:-1;11820:33:257;11785:26;11820:33;:::i;:::-;11872:7;11862:17;;;10355:1530;;;;;;;;;;;;;:::o;11890:184::-;11942:77;11939:1;11932:88;12039:4;12036:1;12029:15;12063:4;12060:1;12053:15;12381:437;12460:1;12456:12;;;;12503;;;12524:61;;12578:4;12570:6;12566:17;12556:27;;12524:61;12631:2;12623:6;12620:14;12600:18;12597:38;12594:218;;12668:77;12665:1;12658:88;12769:4;12766:1;12759:15;12797:4;12794:1;12787:15;12594:218;;12381:437;;;:::o;12823:289::-;12998:6;12987:9;12980:25;13041:2;13036;13025:9;13021:18;13014:30;12961:4;13061:45;13102:2;13091:9;13087:18;13079:6;13061:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue()": "20965255",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set((bool,address,address,address,address,address,address,address,address,address))": "0c95c26d",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attackPathVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attackPathVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"moveConfig\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/ZKConfigComponent.sol\":\"ZKConfigComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":expension/=src/expension/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\",\":verifiers/=src/verifiers/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/SingletonID.sol\":{\"keccak256\":\"0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9\",\"dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/ZKConfigComponent.sol\":{\"keccak256\":\"0x6903c30c2e73e199d2696ecccfc3ea1092bbba15c0a50497c33afc1d41ddcb42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cd1b0d23dabfd081280789a620199b11361c633dbefe8f080f2cc061128280a0\",\"dweb:/ipfs/QmQCNnbckN3hBM9gxtPyPYQecAsFwtua3G7GSmA9BGXJJH\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attackPathVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "moveConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attackPathVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":expension/=src/expension/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/",
        ":verifiers/=src/verifiers/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/ZKConfigComponent.sol": "ZKConfigComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/SingletonID.sol": {
        "keccak256": "0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2",
        "urls": [
          "bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9",
          "dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/ZKConfigComponent.sol": {
        "keccak256": "0x6903c30c2e73e199d2696ecccfc3ea1092bbba15c0a50497c33afc1d41ddcb42",
        "urls": [
          "bzz-raw://cd1b0d23dabfd081280789a620199b11361c633dbefe8f080f2cc061128280a0",
          "dweb:/ipfs/QmQCNnbckN3hBM9gxtPyPYQecAsFwtua3G7GSmA9BGXJJH"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/ZKConfigComponent.sol",
    "id": 17124,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        16818
      ],
      "LibTypes": [
        522
      ],
      "SingletonID": [
        527
      ],
      "ZKConfig": [
        16839
      ],
      "ZKConfigComponent": [
        17123
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3341:162",
    "nodes": [
      {
        "id": 16804,
        "nodeType": "PragmaDirective",
        "src": "32:24:162",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 16806,
        "nodeType": "ImportDirective",
        "src": "57:55:162",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17124,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16805,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "65:13:162",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16808,
        "nodeType": "ImportDirective",
        "src": "113:45:162",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17124,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16807,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "121:8:162",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16810,
        "nodeType": "ImportDirective",
        "src": "159:51:162",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/SingletonID.sol",
        "file": "solecs/SingletonID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 17124,
        "sourceUnit": 528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 16809,
              "name": "SingletonID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 527,
              "src": "167:11:162",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 16818,
        "nodeType": "VariableDeclaration",
        "src": "212:62:162",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "229:2:162",
        "scope": 17124,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 16811,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "212:7:162",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e5a4b436f6e666967",
                  "id": 16815,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "252:20:162",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  },
                  "value": "component.ZKConfig"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  }
                ],
                "id": 16814,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "242:9:162",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 16816,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "242:31:162",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 16813,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "234:7:162",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 16812,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:162",
              "typeDescriptions": {}
            }
          },
          "id": 16817,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "234:40:162",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 16839,
        "nodeType": "StructDefinition",
        "src": "277:340:162",
        "nodes": [],
        "canonicalName": "ZKConfig",
        "members": [
          {
            "constant": false,
            "id": 16820,
            "mutability": "mutable",
            "name": "open",
            "nameLocation": "304:4:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "299:9:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 16819,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "299:4:162",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16822,
            "mutability": "mutable",
            "name": "initVerifyAddress",
            "nameLocation": "322:17:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "314:25:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16821,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16824,
            "mutability": "mutable",
            "name": "moveVerifyAddress",
            "nameLocation": "353:17:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "345:25:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16823,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16826,
            "mutability": "mutable",
            "name": "markVerifyAddress",
            "nameLocation": "384:17:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "376:25:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16825,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16828,
            "mutability": "mutable",
            "name": "treasureVerifyAddress",
            "nameLocation": "415:21:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "407:29:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16827,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "407:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16830,
            "mutability": "mutable",
            "name": "treasureVerifyv2Address",
            "nameLocation": "450:23:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "442:31:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16829,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16832,
            "mutability": "mutable",
            "name": "resourceVerifyAddress",
            "nameLocation": "487:21:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "479:29:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16831,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "479:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16834,
            "mutability": "mutable",
            "name": "resourceVerifyv2Address",
            "nameLocation": "522:23:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "514:31:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16833,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "514:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16836,
            "mutability": "mutable",
            "name": "attackPathVerifyAddress",
            "nameLocation": "559:23:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "551:31:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16835,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 16838,
            "mutability": "mutable",
            "name": "coordVerifyAddress",
            "nameLocation": "596:18:162",
            "nodeType": "VariableDeclaration",
            "scope": 16839,
            "src": "588:26:162",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16837,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "588:7:162",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ZKConfig",
        "nameLocation": "284:8:162",
        "scope": 17124,
        "visibility": "public"
      },
      {
        "id": 17123,
        "nodeType": "ContractDefinition",
        "src": "619:2753:162",
        "nodes": [
          {
            "id": 16851,
            "nodeType": "FunctionDefinition",
            "src": "669:54:162",
            "nodes": [],
            "body": {
              "id": 16850,
              "nodeType": "Block",
              "src": "721:2:162",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 16846,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16843,
                    "src": "710:5:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 16847,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16818,
                    "src": "717:2:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 16848,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 16845,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "696:13:162"
                },
                "nodeType": "ModifierInvocation",
                "src": "696:24:162"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 16844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16843,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "689:5:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 16851,
                  "src": "681:13:162",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16842,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "681:7:162",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "680:15:162"
            },
            "returnParameters": {
              "id": 16849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "721:0:162"
            },
            "scope": 17123,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17020,
            "nodeType": "FunctionDefinition",
            "src": "729:1147:162",
            "nodes": [],
            "body": {
              "id": 17019,
              "nodeType": "Block",
              "src": "876:1000:162",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 16868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16862,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16856,
                      "src": "886:4:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 16866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "906:2:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 16865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "893:12:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 16863,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "897:6:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 16864,
                          "nodeType": "ArrayTypeName",
                          "src": "897:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 16867,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "893:16:162",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "886:23:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 16869,
                  "nodeType": "ExpressionStatement",
                  "src": "886:23:162"
                },
                {
                  "expression": {
                    "id": 16877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16870,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16860,
                      "src": "919:6:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "3130",
                          "id": 16875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "955:2:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          }
                        ],
                        "id": 16874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "928:26:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 16872,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 16871,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "932:20:162"
                            },
                            "referencedDeclaration": 521,
                            "src": "932:20:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 16873,
                          "nodeType": "ArrayTypeName",
                          "src": "932:22:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 16876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "928:30:162",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "919:39:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 16878,
                  "nodeType": "ExpressionStatement",
                  "src": "919:39:162"
                },
                {
                  "expression": {
                    "id": 16883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16879,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "969:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16881,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 16880,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "974:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "969:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6f70656e",
                      "id": 16882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "979:6:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_99f30275ab70dd1890c0789c4570632b6f0b0284d11c2d9e587d0368f7027018",
                        "typeString": "literal_string \"open\""
                      },
                      "value": "open"
                    },
                    "src": "969:16:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16884,
                  "nodeType": "ExpressionStatement",
                  "src": "969:16:162"
                },
                {
                  "expression": {
                    "id": 16891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16885,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "995:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16887,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 16886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1002:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "995:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16888,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1007:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16889,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1007:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BOOL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "1007:25:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "995:37:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16892,
                  "nodeType": "ExpressionStatement",
                  "src": "995:37:162"
                },
                {
                  "expression": {
                    "id": 16897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16893,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1043:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16895,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1048:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1043:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "696e697456657269667941646472657373",
                      "id": 16896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1053:19:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8b2ce8b46d39c70a86f6273423bfdf41f18ce395d60e5f09477c5335f4b57348",
                        "typeString": "literal_string \"initVerifyAddress\""
                      },
                      "value": "initVerifyAddress"
                    },
                    "src": "1043:29:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16898,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:29:162"
                },
                {
                  "expression": {
                    "id": 16905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16899,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1082:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16901,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 16900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1089:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1082:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16902,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1094:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1094:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1094:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1082:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16906,
                  "nodeType": "ExpressionStatement",
                  "src": "1082:40:162"
                },
                {
                  "expression": {
                    "id": 16911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16907,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1133:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16909,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 16908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1138:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1133:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6f766556657269667941646472657373",
                      "id": 16910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1143:19:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_41c19086631a255931824eef818b26f2a7d17ad6f3f19e6a876fc9989c797296",
                        "typeString": "literal_string \"moveVerifyAddress\""
                      },
                      "value": "moveVerifyAddress"
                    },
                    "src": "1133:29:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16912,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:29:162"
                },
                {
                  "expression": {
                    "id": 16919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16913,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1172:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16915,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 16914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1179:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1172:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16916,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1184:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1184:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1184:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1172:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16920,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:40:162"
                },
                {
                  "expression": {
                    "id": 16925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16921,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1223:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16923,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 16922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1228:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1223:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d61726b56657269667941646472657373",
                      "id": 16924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1233:19:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5809d430f8281dd0a6ad5fb3d9b1d7e9d5297d6dfbef6d542c3f687c4c9414e6",
                        "typeString": "literal_string \"markVerifyAddress\""
                      },
                      "value": "markVerifyAddress"
                    },
                    "src": "1223:29:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16926,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:29:162"
                },
                {
                  "expression": {
                    "id": 16933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16927,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1262:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16929,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 16928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1269:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1262:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16930,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1274:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1274:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1274:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1262:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16934,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:40:162"
                },
                {
                  "expression": {
                    "id": 16939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16935,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1313:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16937,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 16936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1313:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "747265617375726556657269667941646472657373",
                      "id": 16938,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1323:23:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02857dbdb80ce598b5734f3ddf0201cb4adb883ed2aec9b6862cae1c0d47e68d",
                        "typeString": "literal_string \"treasureVerifyAddress\""
                      },
                      "value": "treasureVerifyAddress"
                    },
                    "src": "1313:33:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16940,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:33:162"
                },
                {
                  "expression": {
                    "id": 16947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16941,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1356:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16943,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 16942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1363:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1356:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16944,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1368:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1368:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16946,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1368:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1356:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16948,
                  "nodeType": "ExpressionStatement",
                  "src": "1356:40:162"
                },
                {
                  "expression": {
                    "id": 16953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16949,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1407:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16951,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 16950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1412:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1407:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7472656173757265566572696679763241646472657373",
                      "id": 16952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1417:25:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_858bf5d41c942dd5ccc2ca04494ac3922f6c5e0d59d8a87e166f138c4a188e72",
                        "typeString": "literal_string \"treasureVerifyv2Address\""
                      },
                      "value": "treasureVerifyv2Address"
                    },
                    "src": "1407:35:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16954,
                  "nodeType": "ExpressionStatement",
                  "src": "1407:35:162"
                },
                {
                  "expression": {
                    "id": 16961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16955,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1452:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16957,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 16956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1452:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16958,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1464:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16959,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1464:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16960,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1464:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1452:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16962,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:40:162"
                },
                {
                  "expression": {
                    "id": 16967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16963,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1503:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16965,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 16964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1508:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1503:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7265736f7572636556657269667941646472657373",
                      "id": 16966,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1513:23:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_78feae2985db2067b0dc32697212d32316ae9837a2960512c2e983e19d445160",
                        "typeString": "literal_string \"resourceVerifyAddress\""
                      },
                      "value": "resourceVerifyAddress"
                    },
                    "src": "1503:33:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16968,
                  "nodeType": "ExpressionStatement",
                  "src": "1503:33:162"
                },
                {
                  "expression": {
                    "id": 16975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16969,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1546:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16971,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 16970,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1553:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1546:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16972,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1558:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1558:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16974,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1558:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1546:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16976,
                  "nodeType": "ExpressionStatement",
                  "src": "1546:40:162"
                },
                {
                  "expression": {
                    "id": 16981,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16977,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1597:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16979,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 16978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1597:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7265736f75726365566572696679763241646472657373",
                      "id": 16980,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1607:25:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0f9b74e1f94911ff9093aa817bac53b6eb4385b17df6db1f5948ebbbb74900ac",
                        "typeString": "literal_string \"resourceVerifyv2Address\""
                      },
                      "value": "resourceVerifyv2Address"
                    },
                    "src": "1597:35:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16982,
                  "nodeType": "ExpressionStatement",
                  "src": "1597:35:162"
                },
                {
                  "expression": {
                    "id": 16989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16983,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1642:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16985,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 16984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1642:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 16986,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1654:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 16987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1654:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 16988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1654:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1642:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 16990,
                  "nodeType": "ExpressionStatement",
                  "src": "1642:40:162"
                },
                {
                  "expression": {
                    "id": 16995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16991,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1693:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 16993,
                      "indexExpression": {
                        "hexValue": "38",
                        "id": 16992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1698:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1693:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "61747461636b5061746856657269667941646472657373",
                      "id": 16994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1703:25:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a27d6aca1ce8b76bc48ea72b459bc9406cf30df750230a939c9bffd344841eda",
                        "typeString": "literal_string \"attackPathVerifyAddress\""
                      },
                      "value": "attackPathVerifyAddress"
                    },
                    "src": "1693:35:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 16996,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:35:162"
                },
                {
                  "expression": {
                    "id": 17003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 16997,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1738:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 16999,
                      "indexExpression": {
                        "hexValue": "38",
                        "id": 16998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1745:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1738:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 17000,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1750:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 17001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1750:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 17002,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1750:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1738:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 17004,
                  "nodeType": "ExpressionStatement",
                  "src": "1738:40:162"
                },
                {
                  "expression": {
                    "id": 17009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 17005,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16856,
                        "src": "1789:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 17007,
                      "indexExpression": {
                        "hexValue": "39",
                        "id": 17006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1794:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1789:7:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "636f6f726456657269667941646472657373",
                      "id": 17008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1799:20:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1b0e24459314fd9416e3391c47453676dc4a1c138ed81c9cfd22bf87bd5510dd",
                        "typeString": "literal_string \"coordVerifyAddress\""
                      },
                      "value": "coordVerifyAddress"
                    },
                    "src": "1789:30:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 17010,
                  "nodeType": "ExpressionStatement",
                  "src": "1789:30:162"
                },
                {
                  "expression": {
                    "id": 17017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 17011,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16860,
                        "src": "1829:6:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 17013,
                      "indexExpression": {
                        "hexValue": "39",
                        "id": 17012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1836:1:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9_by_1",
                          "typeString": "int_const 9"
                        },
                        "value": "9"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1829:9:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 17014,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1841:8:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 17015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1841:20:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 17016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1841:28:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1829:40:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 17018,
                  "nodeType": "ExpressionStatement",
                  "src": "1829:40:162"
                }
              ]
            },
            "baseFunctions": [
              1267
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "738:9:162",
            "overrides": {
              "id": 16853,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "786:8:162"
            },
            "parameters": {
              "id": 16852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:2:162"
            },
            "returnParameters": {
              "id": 16861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16856,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "828:4:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 17020,
                  "src": "812:20:162",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16854,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "812:6:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 16855,
                    "nodeType": "ArrayTypeName",
                    "src": "812:8:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16860,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "864:6:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 17020,
                  "src": "834:36:162",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 16858,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 16857,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "834:20:162"
                      },
                      "referencedDeclaration": 521,
                      "src": "834:20:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 16859,
                    "nodeType": "ArrayTypeName",
                    "src": "834:22:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "811:60:162"
            },
            "scope": 17123,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17054,
            "nodeType": "FunctionDefinition",
            "src": "1882:615:162",
            "nodes": [],
            "body": {
              "id": 17053,
              "nodeType": "Block",
              "src": "1930:567:162",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17027,
                        "name": "SingletonID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1957:11:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 17030,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2010:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17031,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16820,
                            "src": "2010:15:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "expression": {
                              "id": 17032,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2043:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17033,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16822,
                            "src": "2043:28:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17034,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2089:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17035,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "moveVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16824,
                            "src": "2089:28:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17036,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2135:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17037,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "markVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16826,
                            "src": "2135:28:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17038,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2181:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasureVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16828,
                            "src": "2181:32:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17040,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2231:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17041,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasureVerifyv2Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16830,
                            "src": "2231:34:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17042,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2283:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17043,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resourceVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16832,
                            "src": "2283:32:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17044,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2333:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17045,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resourceVerifyv2Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16834,
                            "src": "2333:34:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17046,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2385:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17047,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "attackPathVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16836,
                            "src": "2385:34:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 17048,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17023,
                              "src": "2437:10:162",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 17049,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "coordVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 16838,
                            "src": "2437:29:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 17028,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1982:3:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1982:10:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 17050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1982:498:162",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 17026,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17054,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "1940:3:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 17051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1940:550:162",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17052,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:550:162"
                }
              ]
            },
            "functionSelector": "0c95c26d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1891:3:162",
            "parameters": {
              "id": 17024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17023,
                  "mutability": "mutable",
                  "name": "moveConfig",
                  "nameLocation": "1911:10:162",
                  "nodeType": "VariableDeclaration",
                  "scope": 17054,
                  "src": "1895:26:162",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 17022,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17021,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16839,
                      "src": "1895:8:162"
                    },
                    "referencedDeclaration": 16839,
                    "src": "1895:8:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$16839_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:28:162"
            },
            "returnParameters": {
              "id": 17025,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1930:0:162"
            },
            "scope": 17123,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 17122,
            "nodeType": "FunctionDefinition",
            "src": "2503:867:162",
            "nodes": [],
            "body": {
              "id": 17121,
              "nodeType": "Block",
              "src": "2561:809:162",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    17061,
                    17063,
                    17065,
                    17067,
                    17069,
                    17071,
                    17073,
                    17075,
                    17077,
                    17079
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17061,
                      "mutability": "mutable",
                      "name": "open",
                      "nameLocation": "2577:4:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2572:9:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 17060,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2572:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17063,
                      "mutability": "mutable",
                      "name": "initVerifyAddress",
                      "nameLocation": "2603:17:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2595:25:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2595:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17065,
                      "mutability": "mutable",
                      "name": "moveVerifyAddress",
                      "nameLocation": "2642:17:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2634:25:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2634:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17067,
                      "mutability": "mutable",
                      "name": "markVerifyAddress",
                      "nameLocation": "2681:17:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2673:25:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17066,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2673:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17069,
                      "mutability": "mutable",
                      "name": "treasureVerifyAddress",
                      "nameLocation": "2720:21:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2712:29:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17068,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2712:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17071,
                      "mutability": "mutable",
                      "name": "treasureVerifyv2Address",
                      "nameLocation": "2763:23:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2755:31:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17070,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2755:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17073,
                      "mutability": "mutable",
                      "name": "resourceVerifyAddress",
                      "nameLocation": "2808:21:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2800:29:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17072,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2800:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17075,
                      "mutability": "mutable",
                      "name": "resourceVerifyv2Address",
                      "nameLocation": "2851:23:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2843:31:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17074,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2843:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17077,
                      "mutability": "mutable",
                      "name": "attackPathVerifyAddress",
                      "nameLocation": "2896:23:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2888:31:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17076,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2888:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17079,
                      "mutability": "mutable",
                      "name": "coordVerifyAddress",
                      "nameLocation": "2941:18:162",
                      "nodeType": "VariableDeclaration",
                      "scope": 17121,
                      "src": "2933:26:162",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17078,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2933:7:162",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 17107,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 17083,
                            "name": "SingletonID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "3003:11:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 17082,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2991:11:162",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 17084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2991:24:162",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 17086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3034:4:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 17085,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3034:4:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17088,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3040:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17087,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3040:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3049:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17089,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3049:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3058:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3058:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17094,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3067:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17093,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3067:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3076:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17095,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3076:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3085:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17097,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3085:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3094:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17099,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3094:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3103:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17101,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3103:7:162",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 17104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3112:7:162",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17103,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3112:7:162",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 17105,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3033:87:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address))"
                        }
                      ],
                      "expression": {
                        "id": 17080,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2963:3:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 17081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2963:10:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 17106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2963:171:162",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$",
                      "typeString": "tuple(bool,address payable,address payable,address payable,address payable,address payable,address payable,address payable,address payable,address payable)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2571:563:162"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 17109,
                        "name": "open",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17061,
                        "src": "3160:4:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 17110,
                        "name": "initVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17063,
                        "src": "3166:17:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17111,
                        "name": "moveVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17065,
                        "src": "3185:17:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17112,
                        "name": "markVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17067,
                        "src": "3204:17:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17113,
                        "name": "treasureVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17069,
                        "src": "3223:21:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17114,
                        "name": "treasureVerifyv2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17071,
                        "src": "3246:23:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17115,
                        "name": "resourceVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17073,
                        "src": "3271:21:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17116,
                        "name": "resourceVerifyv2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17075,
                        "src": "3294:23:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17117,
                        "name": "attackPathVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17077,
                        "src": "3319:23:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 17118,
                        "name": "coordVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17079,
                        "src": "3344:18:162",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 17108,
                      "name": "ZKConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16839,
                      "src": "3151:8:162",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ZKConfig_$16839_storage_ptr_$",
                        "typeString": "type(struct ZKConfig storage pointer)"
                      }
                    },
                    "id": 17119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3151:212:162",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                      "typeString": "struct ZKConfig memory"
                    }
                  },
                  "functionReturnParameters": 17059,
                  "id": 17120,
                  "nodeType": "Return",
                  "src": "3144:219:162"
                }
              ]
            },
            "functionSelector": "20965255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "2512:8:162",
            "parameters": {
              "id": 17055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2520:2:162"
            },
            "returnParameters": {
              "id": 17059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17058,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 17122,
                  "src": "2544:15:162",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$16839_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 17057,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 17056,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 16839,
                      "src": "2544:8:162"
                    },
                    "referencedDeclaration": 16839,
                    "src": "2544:8:162",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$16839_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2543:17:162"
            },
            "scope": 17123,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 16840,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "649:13:162"
            },
            "id": 16841,
            "nodeType": "InheritanceSpecifier",
            "src": "649:13:162"
          }
        ],
        "canonicalName": "ZKConfigComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          17123,
          220,
          49638,
          49842,
          2161,
          51669,
          52088,
          51545,
          1318,
          51538,
          2204,
          51679
        ],
        "name": "ZKConfigComponent",
        "nameLocation": "628:17:162",
        "scope": 17124,
        "usedErrors": [
          20,
          49563,
          52085,
          52087
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 162
}