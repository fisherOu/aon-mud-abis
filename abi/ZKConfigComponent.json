{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attackPathVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "coordVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyv2Address",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "attackPathVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "coordVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "moveConfig",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162001cb238038062001cb2833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b620010291760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b620010291760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b611a7080620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b8063108f31e91461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611394565b6102eb565b005b6101586103a6565b604051610165919061144a565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb610486565b604051610165919061158e565b61014e6101d63660046115d2565b6104ba565b61014e6101e93660046115eb565b610502565b6101f66105e0565b6040516101659291906116a9565b61014e6102123660046115eb565b610b99565b61022a6102253660046115eb565b610bcb565b6040519015158152602001610165565b61014e610248366004611844565b610c56565b61018e610ca3565b61014e6102633660046115eb565b610ce8565b61027160025481565b604051908152602001610165565b6101bb61028d36600461188b565b610486565b6102a56102a03660046115d2565b610e11565b60405161016591906118c8565b61014e6102c03660046115eb565b610eb3565b61022a6102d33660046115d2565b610f8e565b61014e6102e63660046115eb565b610fb0565b6103a361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a610100015160405160200161038f99989796959493929190981515895273ffffffffffffffffffffffffffffffffffffffff97881660208a0152958716604089015293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201526101200190565b604051602081830303815290604052610c56565b50565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905290808080808080808061040261060d610e11565b80602001905181019061041591906118db565b60408051610120810182529915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b01529688169689019690965293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c333610bcb565b6104f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a38161104d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610572576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b60608152602001906001900390816105fc575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600481526020017f6f70656e000000000000000000000000000000000000000000000000000000008152508260008151811061067e5761067e61199f565b602002602001018190525060008160008151811061069e5761069e61199f565b602002602001019060218111156106b7576106b761167a565b908160218111156106ca576106ca61167a565b815250506040518060400160405280601181526020017f696e697456657269667941646472657373000000000000000000000000000000815250826001815181106107175761071761199f565b60200260200101819052506010816001815181106107375761073761199f565b602002602001019060218111156107505761075061167a565b908160218111156107635761076361167a565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107b0576107b061199f565b60200260200101819052506010816002815181106107d0576107d061199f565b602002602001019060218111156107e9576107e961167a565b908160218111156107fc576107fc61167a565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106108495761084961199f565b60200260200101819052506010816003815181106108695761086961199f565b602002602001019060218111156108825761088261167a565b908160218111156108955761089561167a565b815250506040518060400160405280601581526020017f7472656173757265566572696679416464726573730000000000000000000000815250826004815181106108e2576108e261199f565b60200260200101819052506010816004815181106109025761090261199f565b6020026020010190602181111561091b5761091b61167a565b9081602181111561092e5761092e61167a565b815250506040518060400160405280601581526020017f7265736f757263655665726966794164647265737300000000000000000000008152508260058151811061097b5761097b61199f565b602002602001018190525060108160058151811061099b5761099b61199f565b602002602001019060218111156109b4576109b461167a565b908160218111156109c7576109c761167a565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600681518110610a1457610a1461199f565b6020026020010181905250601081600681518110610a3457610a3461199f565b60200260200101906021811115610a4d57610a4d61167a565b90816021811115610a6057610a6061167a565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600781518110610aad57610aad61199f565b6020026020010181905250601081600781518110610acd57610acd61199f565b60200260200101906021811115610ae657610ae661167a565b90816021811115610af957610af961167a565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600881518110610b4657610b4661199f565b6020026020010181905250601081600881518110610b6657610b6661199f565b60200260200101906021811115610b7f57610b7f61167a565b90816021811115610b9257610b9261167a565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610c505750610c21610ca3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610c5f33610bcb565b610c95576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c9f82826110bb565b5050565b6000610ce37f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d58576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610e2e906119ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5a906119ce565b8015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f23576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610fa7906119ce565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314611020576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a381611169565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60008181526001602052604081206110649161121d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ddc565b600082815260016020908152604090912082516110da92840190611257565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111339085908590600401611a21565b600060405180830381600087803b15801561114d57600080fd5b505af1158015611161573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103a3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054611229906119ce565b6000825580601f10611239575050565b601f0160209004906000526020600020908101906103a391906112db565b828054611263906119ce565b90600052602060002090601f01602090048101928261128557600085556112cb565b82601f1061129e57805160ff19168380011785556112cb565b828001600101855582156112cb579182015b828111156112cb5782518255916020019190600101906112b0565b506112d79291506112db565b5090565b5b808211156112d757600081556001016112dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611343576113436112f0565b60405290565b80151581146103a357600080fd5b803561136281611349565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103a357600080fd5b803561136281611367565b600061012082840312156113a757600080fd5b6113af61131f565b6113b883611357565b81526113c660208401611389565b60208201526113d760408401611389565b60408201526113e860608401611389565b60608201526113f960808401611389565b608082015261140a60a08401611389565b60a082015261141b60c08401611389565b60c082015261142c60e08401611389565b60e082015261010061143f818501611389565b908201529392505050565b60006101208201905082511515825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015260408301516114a0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516114c8606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516114f0608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161151860a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161154060c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161156860e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101009283015173ffffffffffffffffffffffffffffffffffffffff16919092015290565b6020808252825182820181905260009190848201906040850190845b818110156115c6578351835292840192918401916001016115aa565b50909695505050505050565b6000602082840312156115e457600080fd5b5035919050565b6000602082840312156115fd57600080fd5b813561160881611367565b9392505050565b6000815180845260005b8181101561163557602081850181015186830182015201611619565b81811115611647576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561171e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261170c86835161160f565b955093820193908201906001016116d2565b50508584038187015286518085528782019482019350915060005b8281101561178c5784516022811061177a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611739565b5091979650505050505050565b600082601f8301126117aa57600080fd5b813567ffffffffffffffff808211156117c5576117c56112f0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561180b5761180b6112f0565b8160405283815286602085880101111561182457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561185757600080fd5b82359150602083013567ffffffffffffffff81111561187557600080fd5b61188185828601611799565b9150509250929050565b60006020828403121561189d57600080fd5b813567ffffffffffffffff8111156118b457600080fd5b6118c084828501611799565b949350505050565b602081526000611608602083018461160f565b60008060008060008060008060006101208a8c0312156118fa57600080fd5b895161190581611349565b60208b015190995061191681611367565b60408b015190985061192781611367565b60608b015190975061193881611367565b60808b015190965061194981611367565b60a08b015190955061195a81611367565b60c08b015190945061196b81611367565b60e08b015190935061197c81611367565b6101008b015190925061198e81611367565b809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806119e257607f821691505b602082108103611a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006118c0604083018461160f56fea26469706673582212206890b2ec3378acd7b7799dd3ef1867b0214e677486fb6f5bcd7f1ae91ab6934e64736f6c634300080d0033",
    "sourceMap": "582:2524:121:-:0;;;632:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;673:5;242:31;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;632:54:121;582:2524;;1203:207:35;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:35;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:35;-1:-1:-1;;;;;1386:17:35;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:35;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:35;:10;-1:-1:-1;;;;;422:22:35;;418:54;;453:19;;-1:-1:-1;;;453:19:35;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:158::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:158;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:36:-;186:49;;242:159::o;647:111:35:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:35;;647:111;-1:-1:-1;647:111:35:o;14:290:158:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:158;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:158:o;309:274::-;582:2524:121;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634cc82215116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634cc82215146101c85780634fef6a38146101db57600080fd5b8063108f31e91461013b578063209652551461015057806330b67baa1461016e57806331b933b9146101b3575b600080fd5b61014e610149366004611394565b6102eb565b005b6101586103a6565b604051610165919061144a565b60405180910390f35b60005461018e9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610165565b6101bb610486565b604051610165919061158e565b61014e6101d63660046115d2565b6104ba565b61014e6101e93660046115eb565b610502565b6101f66105e0565b6040516101659291906116a9565b61014e6102123660046115eb565b610b99565b61022a6102253660046115eb565b610bcb565b6040519015158152602001610165565b61014e610248366004611844565b610c56565b61018e610ca3565b61014e6102633660046115eb565b610ce8565b61027160025481565b604051908152602001610165565b6101bb61028d36600461188b565b610486565b6102a56102a03660046115d2565b610e11565b60405161016591906118c8565b61014e6102c03660046115eb565b610eb3565b61022a6102d33660046115d2565b610f8e565b61014e6102e63660046115eb565b610fb0565b6103a361060d826000015183602001518460400151856060015186608001518760a001518860c001518960e001518a610100015160405160200161038f99989796959493929190981515895273ffffffffffffffffffffffffffffffffffffffff97881660208a0152958716604089015293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201526101200190565b604051602081830303815290604052610c56565b50565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905290808080808080808061040261060d610e11565b80602001905181019061041591906118db565b60408051610120810182529915158a5273ffffffffffffffffffffffffffffffffffffffff98891660208b01529688169689019690965293861660608801529185166080870152841660a0860152831660c0850152821660e0840152166101008201529a9950505050505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104c333610bcb565b6104f9576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a38161104d565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610572576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160098082526101408201909252606091829190816020015b60608152602001906001900390816105fc575050604080516009808252610140820190925291935060208201610120803683370190505090506040518060400160405280600481526020017f6f70656e000000000000000000000000000000000000000000000000000000008152508260008151811061067e5761067e61199f565b602002602001018190525060008160008151811061069e5761069e61199f565b602002602001019060218111156106b7576106b761167a565b908160218111156106ca576106ca61167a565b815250506040518060400160405280601181526020017f696e697456657269667941646472657373000000000000000000000000000000815250826001815181106107175761071761199f565b60200260200101819052506010816001815181106107375761073761199f565b602002602001019060218111156107505761075061167a565b908160218111156107635761076361167a565b815250506040518060400160405280601181526020017f6d6f766556657269667941646472657373000000000000000000000000000000815250826002815181106107b0576107b061199f565b60200260200101819052506010816002815181106107d0576107d061199f565b602002602001019060218111156107e9576107e961167a565b908160218111156107fc576107fc61167a565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106108495761084961199f565b60200260200101819052506010816003815181106108695761086961199f565b602002602001019060218111156108825761088261167a565b908160218111156108955761089561167a565b815250506040518060400160405280601581526020017f7472656173757265566572696679416464726573730000000000000000000000815250826004815181106108e2576108e261199f565b60200260200101819052506010816004815181106109025761090261199f565b6020026020010190602181111561091b5761091b61167a565b9081602181111561092e5761092e61167a565b815250506040518060400160405280601581526020017f7265736f757263655665726966794164647265737300000000000000000000008152508260058151811061097b5761097b61199f565b602002602001018190525060108160058151811061099b5761099b61199f565b602002602001019060218111156109b4576109b461167a565b908160218111156109c7576109c761167a565b815250506040518060400160405280601781526020017f7265736f7572636556657269667976324164647265737300000000000000000081525082600681518110610a1457610a1461199f565b6020026020010181905250601081600681518110610a3457610a3461199f565b60200260200101906021811115610a4d57610a4d61167a565b90816021811115610a6057610a6061167a565b815250506040518060400160405280601781526020017f61747461636b506174685665726966794164647265737300000000000000000081525082600781518110610aad57610aad61199f565b6020026020010181905250601081600781518110610acd57610acd61199f565b60200260200101906021811115610ae657610ae661167a565b90816021811115610af957610af961167a565b815250506040518060400160405280601281526020017f636f6f726456657269667941646472657373000000000000000000000000000081525082600881518110610b4657610b4661199f565b6020026020010181905250601081600881518110610b6657610b6661199f565b60200260200101906021811115610b7f57610b7f61167a565b90816021811115610b9257610b9261167a565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff1680610c505750610c21610ca3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610c5f33610bcb565b610c95576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610c9f82826110bb565b5050565b6000610ce37f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610d58576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610df657600080fd5b505af1158015610e0a573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610e2e906119ce565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5a906119ce565b8015610ea75780601f10610e7c57610100808354040283529160200191610ea7565b820191906000526020600020905b815481529060010190602001808311610e8a57829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610f23576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610fa7906119ce565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314611020576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103a381611169565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b60008181526001602052604081206110649161121d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610ddc565b600082815260016020908152604090912082516110da92840190611257565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f906111339085908590600401611a21565b600060405180830381600087803b15801561114d57600080fd5b505af1158015611161573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103a3928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054611229906119ce565b6000825580601f10611239575050565b601f0160209004906000526020600020908101906103a391906112db565b828054611263906119ce565b90600052602060002090601f01602090048101928261128557600085556112cb565b82601f1061129e57805160ff19168380011785556112cb565b828001600101855582156112cb579182015b828111156112cb5782518255916020019190600101906112b0565b506112d79291506112db565b5090565b5b808211156112d757600081556001016112dc565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611343576113436112f0565b60405290565b80151581146103a357600080fd5b803561136281611349565b919050565b73ffffffffffffffffffffffffffffffffffffffff811681146103a357600080fd5b803561136281611367565b600061012082840312156113a757600080fd5b6113af61131f565b6113b883611357565b81526113c660208401611389565b60208201526113d760408401611389565b60408201526113e860608401611389565b60608201526113f960808401611389565b608082015261140a60a08401611389565b60a082015261141b60c08401611389565b60c082015261142c60e08401611389565b60e082015261010061143f818501611389565b908201529392505050565b60006101208201905082511515825273ffffffffffffffffffffffffffffffffffffffff602084015116602083015260408301516114a0604084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060608301516114c8606084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060808301516114f0608084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060a083015161151860a084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060c083015161154060c084018273ffffffffffffffffffffffffffffffffffffffff169052565b5060e083015161156860e084018273ffffffffffffffffffffffffffffffffffffffff169052565b506101009283015173ffffffffffffffffffffffffffffffffffffffff16919092015290565b6020808252825182820181905260009190848201906040850190845b818110156115c6578351835292840192918401916001016115aa565b50909695505050505050565b6000602082840312156115e457600080fd5b5035919050565b6000602082840312156115fd57600080fd5b813561160881611367565b9392505050565b6000815180845260005b8181101561163557602081850181015186830182015201611619565b81811115611647576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561171e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261170c86835161160f565b955093820193908201906001016116d2565b50508584038187015286518085528782019482019350915060005b8281101561178c5784516022811061177a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611739565b5091979650505050505050565b600082601f8301126117aa57600080fd5b813567ffffffffffffffff808211156117c5576117c56112f0565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561180b5761180b6112f0565b8160405283815286602085880101111561182457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561185757600080fd5b82359150602083013567ffffffffffffffff81111561187557600080fd5b61188185828601611799565b9150509250929050565b60006020828403121561189d57600080fd5b813567ffffffffffffffff8111156118b457600080fd5b6118c084828501611799565b949350505050565b602081526000611608602083018461160f565b60008060008060008060008060006101208a8c0312156118fa57600080fd5b895161190581611349565b60208b015190995061191681611367565b60408b015190985061192781611367565b60608b015190975061193881611367565b60808b015190965061194981611367565b60a08b015190955061195a81611367565b60c08b015190945061196b81611367565b60e08b015190935061197c81611367565b6101008b015190925061198e81611367565b809150509295985092959850929598565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c908216806119e257607f821691505b602082108103611a1b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006118c0604083018461160f56fea26469706673582212206890b2ec3378acd7b7799dd3ef1867b0214e677486fb6f5bcd7f1ae91ab6934e64736f6c634300080d0033",
    "sourceMap": "582:2524:121:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1747:563;;;;;;:::i;:::-;;:::i;:::-;;2316:788;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:0;;;;;;;;;;;;3428:42:158;3416:55;;;3398:74;;3386:2;3371:18;870:20:0;3252:226:158;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;955:144:6:-;;;;;;:::i;:::-;;:::i;692:1049:121:-;;;:::i;:::-;;;;;;;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;7112:14:158;;7105:22;7087:41;;7075:2;7060:18;440:168:6;6947:187:158;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:34:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;8460:25:158;;;8448:2;8433:18;1052:17:0;8314:177:158;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;514:113:34:-;;;;;;:::i;:::-;;:::i;1747:563:121:-;1805:498;89:5:9;1875:10:121;:15;;;1908:10;:28;;;1954:10;:28;;;2000:10;:28;;;2046:10;:32;;;2096:10;:32;;;2146:10;:34;;;2198:10;:34;;;2250:10;:29;;;1847:446;;;;;;;;;;;;;;;9434:14:158;;9427:22;9409:41;;9469:42;9547:15;;;9542:2;9527:18;;9520:43;9599:15;;;9594:2;9579:18;;9572:43;9651:15;;;9646:2;9631:18;;9624:43;9704:15;;;9698:3;9683:19;;9676:44;9757:15;;9751:3;9736:19;;9729:44;9810:15;;9804:3;9789:19;;9782:44;9863:15;;9857:3;9842:19;;9835:44;9916:15;9910:3;9895:19;;9888:44;9396:3;9381:19;;9044:894;1847:446:121;;;;;;;;;;;;;1805:3;:498::i;:::-;1747:563;:::o;2316:788::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2759:24:121;89:5:9;2759:11:121;:24::i;:::-;2731:162;;;;;;;;;;;;:::i;:::-;2910:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2316:788;-1:-1:-1;;;;;;;;;;2316:788:121:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;955:144:6:-:0;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;692:1049:121:-;856:15;;;869:1;856:15;;;;;;;;;775:20;;;;856:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;890:29:121;;;917:1;890:29;;;;;;;;;849:22;;-1:-1:-1;890:29:121;;;;;;;;;;-1:-1:-1;890:29:121;881:38;;930:16;;;;;;;;;;;;;;;;;:4;935:1;930:7;;;;;;;;:::i;:::-;;;;;;:16;;;;968:25;956:6;963:1;956:9;;;;;;;;:::i;:::-;;;;;;:37;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1004:29;;;;;;;;;;;;;;;;;:4;1009:1;1004:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1055:28;1043:6;1050:1;1043:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1094:29;;;;;;;;;;;;;;;;;:4;1099:1;1094:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1145:28;1133:6;1140:1;1133:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1184:29;;;;;;;;;;;;;;;;;:4;1189:1;1184:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1235:28;1223:6;1230:1;1223:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1274:33;;;;;;;;;;;;;;;;;:4;1279:1;1274:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1329:28;1317:6;1324:1;1317:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1368:33;;;;;;;;;;;;;;;;;:4;1373:1;1368:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1423:28;1411:6;1418:1;1411:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1462:35;;;;;;;;;;;;;;;;;:4;1467:1;1462:7;;;;;;;;:::i;:::-;;;;;;:35;;;;1519:28;1507:6;1514:1;1507:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1558:35;;;;;;;;;;;;;;;;;:4;1563:1;1558:7;;;;;;;;:::i;:::-;;;;;;:35;;;;1615:28;1603:6;1610:1;1603:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1654:30;;;;;;;;;;;;;;;;;:4;1659:1;1654:7;;;;;;;;:::i;:::-;;;;;;:30;;;;1706:28;1694:6;1701:1;1694:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;692:1049:121;;:::o;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:34:-;424:7;450:8;186:49:36;722:29:35;;;;647:111;450:8:34;443:15;;378:87;:::o;1302:137:0:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;11698:74:158::0;11788:18;;;11781:34;;;;1384:31:0::1;::::0;11671:18:158;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;514:113:34:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:34::1;612:7;593:18;:27::i;242:159:36:-:0;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;8460:25:158;;;4366:5:0;;;;;4359:43;;8433:18:158;;4359:51:0;8314:177:158;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:35:-;186:49:36;1359:7:35;;1338:38;;1172:18;;1182:7;;186:49:36;;1338:38:35;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:184:158;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:247;270:2;264:9;312:3;300:16;;346:18;331:34;;367:22;;;328:62;325:88;;;393:18;;:::i;:::-;429:2;422:22;203:247;:::o;455:118::-;541:5;534:13;527:21;520:5;517:32;507:60;;563:1;560;553:12;578:128;643:20;;672:28;643:20;672:28;:::i;:::-;578:128;;;:::o;711:154::-;797:42;790:5;786:54;779:5;776:65;766:93;;855:1;852;845:12;870:134;938:20;;967:31;938:20;967:31;:::i;1009:877::-;1095:6;1148:3;1136:9;1127:7;1123:23;1119:33;1116:53;;;1165:1;1162;1155:12;1116:53;1191:17;;:::i;:::-;1231:26;1247:9;1231:26;:::i;:::-;1224:5;1217:41;1290:38;1324:2;1313:9;1309:18;1290:38;:::i;:::-;1285:2;1278:5;1274:14;1267:62;1361:38;1395:2;1384:9;1380:18;1361:38;:::i;:::-;1356:2;1349:5;1345:14;1338:62;1432:38;1466:2;1455:9;1451:18;1432:38;:::i;:::-;1427:2;1420:5;1416:14;1409:62;1504:39;1538:3;1527:9;1523:19;1504:39;:::i;:::-;1498:3;1491:5;1487:15;1480:64;1577:39;1611:3;1600:9;1596:19;1577:39;:::i;:::-;1571:3;1564:5;1560:15;1553:64;1650:39;1684:3;1673:9;1669:19;1650:39;:::i;:::-;1644:3;1637:5;1633:15;1626:64;1723:39;1757:3;1746:9;1742:19;1723:39;:::i;:::-;1717:3;1710:5;1706:15;1699:64;1782:3;1817:38;1851:2;1840:9;1836:18;1817:38;:::i;:::-;1801:14;;;1794:62;1805:5;1009:877;-1:-1:-1;;;1009:877:158:o;2023:1224::-;2169:4;2211:3;2200:9;2196:19;2188:27;;2262:6;2256:13;2249:21;2242:29;2231:9;2224:48;2340:42;2332:4;2324:6;2320:17;2314:24;2310:73;2303:4;2292:9;2288:20;2281:103;2431:4;2423:6;2419:17;2413:24;2446:54;2494:4;2483:9;2479:20;2465:12;1968:42;1957:54;1945:67;;1891:127;2446:54;;2549:4;2541:6;2537:17;2531:24;2564:56;2614:4;2603:9;2599:20;2583:14;1968:42;1957:54;1945:67;;1891:127;2564:56;;2669:4;2661:6;2657:17;2651:24;2684:56;2734:4;2723:9;2719:20;2703:14;1968:42;1957:54;1945:67;;1891:127;2684:56;;2789:4;2781:6;2777:17;2771:24;2804:56;2854:4;2843:9;2839:20;2823:14;1968:42;1957:54;1945:67;;1891:127;2804:56;;2909:4;2901:6;2897:17;2891:24;2924:56;2974:4;2963:9;2959:20;2943:14;1968:42;1957:54;1945:67;;1891:127;2924:56;;3029:4;3021:6;3017:17;3011:24;3044:56;3094:4;3083:9;3079:20;3063:14;1968:42;1957:54;1945:67;;1891:127;3044:56;-1:-1:-1;3119:6:158;3162:15;;;3156:22;1968:42;1957:54;3222:18;;;;1945:67;2023:1224;:::o;3483:632::-;3654:2;3706:21;;;3776:13;;3679:18;;;3798:22;;;3625:4;;3654:2;3877:15;;;;3851:2;3836:18;;;3625:4;3920:169;3934:6;3931:1;3928:13;3920:169;;;3995:13;;3983:26;;4064:15;;;;4029:12;;;;3956:1;3949:9;3920:169;;;-1:-1:-1;4106:3:158;;3483:632;-1:-1:-1;;;;;;3483:632:158:o;4120:180::-;4179:6;4232:2;4220:9;4211:7;4207:23;4203:32;4200:52;;;4248:1;4245;4238:12;4200:52;-1:-1:-1;4271:23:158;;4120:180;-1:-1:-1;4120:180:158:o;4305:247::-;4364:6;4417:2;4405:9;4396:7;4392:23;4388:32;4385:52;;;4433:1;4430;4423:12;4385:52;4472:9;4459:23;4491:31;4516:5;4491:31;:::i;:::-;4541:5;4305:247;-1:-1:-1;;;4305:247:158:o;4557:531::-;4599:3;4637:5;4631:12;4664:6;4659:3;4652:19;4689:1;4699:162;4713:6;4710:1;4707:13;4699:162;;;4775:4;4831:13;;;4827:22;;4821:29;4803:11;;;4799:20;;4792:59;4728:12;4699:162;;;4879:6;4876:1;4873:13;4870:87;;;4945:1;4938:4;4929:6;4924:3;4920:16;4916:27;4909:38;4870:87;-1:-1:-1;5002:2:158;4990:15;5007:66;4986:88;4977:98;;;;5077:4;4973:109;;4557:531;-1:-1:-1;;4557:531:158:o;5093:184::-;5145:77;5142:1;5135:88;5242:4;5239:1;5232:15;5266:4;5263:1;5256:15;5282:1660;5535:4;5583:2;5572:9;5568:18;5613:2;5602:9;5595:21;5636:6;5671;5665:13;5702:6;5694;5687:22;5740:2;5729:9;5725:18;5718:25;;5802:2;5792:6;5789:1;5785:14;5774:9;5770:30;5766:39;5752:53;;5824:4;5863:2;5855:6;5851:15;5884:1;5894:314;5908:6;5905:1;5902:13;5894:314;;;5997:66;5985:9;5977:6;5973:22;5969:95;5964:3;5957:108;6088:40;6121:6;6112;6106:13;6088:40;:::i;:::-;6078:50;-1:-1:-1;6186:12:158;;;;6151:15;;;;5930:1;5923:9;5894:314;;;-1:-1:-1;;6244:22:158;;;6224:18;;;6217:50;6320:13;;6342:24;;;6424:15;;;;6384;;;-1:-1:-1;6320:13:158;-1:-1:-1;6459:1:158;6469:445;6485:8;6480:3;6477:17;6469:445;;;6556:8;6550:15;6595:2;6591;6588:10;6578:218;;6640:77;6637:1;6630:88;6745:4;6742:1;6735:15;6777:4;6774:1;6767:15;6578:218;6809:17;;6887;;;;6848:14;;;;6513:1;6504:11;6469:445;;;-1:-1:-1;6931:5:158;;5282:1660;-1:-1:-1;;;;;;;5282:1660:158:o;7139:777::-;7181:5;7234:3;7227:4;7219:6;7215:17;7211:27;7201:55;;7252:1;7249;7242:12;7201:55;7288:6;7275:20;7314:18;7351:2;7347;7344:10;7341:36;;;7357:18;;:::i;:::-;7491:2;7485:9;7553:4;7545:13;;7396:66;7541:22;;;7565:2;7537:31;7533:40;7521:53;;;7589:18;;;7609:22;;;7586:46;7583:72;;;7635:18;;:::i;:::-;7675:10;7671:2;7664:22;7710:2;7702:6;7695:18;7756:3;7749:4;7744:2;7736:6;7732:15;7728:26;7725:35;7722:55;;;7773:1;7770;7763:12;7722:55;7837:2;7830:4;7822:6;7818:17;7811:4;7803:6;7799:17;7786:54;7884:1;7877:4;7872:2;7864:6;7860:15;7856:26;7849:37;7904:6;7895:15;;;;;;7139:777;;;;:::o;7921:388::-;7998:6;8006;8059:2;8047:9;8038:7;8034:23;8030:32;8027:52;;;8075:1;8072;8065:12;8027:52;8111:9;8098:23;8088:33;;8172:2;8161:9;8157:18;8144:32;8199:18;8191:6;8188:30;8185:50;;;8231:1;8228;8221:12;8185:50;8254:49;8295:7;8286:6;8275:9;8271:22;8254:49;:::i;:::-;8244:59;;;7921:388;;;;;:::o;8496:320::-;8564:6;8617:2;8605:9;8596:7;8592:23;8588:32;8585:52;;;8633:1;8630;8623:12;8585:52;8673:9;8660:23;8706:18;8698:6;8695:30;8692:50;;;8738:1;8735;8728:12;8692:50;8761:49;8802:7;8793:6;8782:9;8778:22;8761:49;:::i;:::-;8751:59;8496:320;-1:-1:-1;;;;8496:320:158:o;8821:218::-;8968:2;8957:9;8950:21;8931:4;8988:45;9029:2;9018:9;9014:18;9006:6;8988:45;:::i;9943:1387::-;10146:6;10154;10162;10170;10178;10186;10194;10202;10210;10263:3;10251:9;10242:7;10238:23;10234:33;10231:53;;;10280:1;10277;10270:12;10231:53;10312:9;10306:16;10331:28;10353:5;10331:28;:::i;:::-;10428:2;10413:18;;10407:25;10378:5;;-1:-1:-1;10441:33:158;10407:25;10441:33;:::i;:::-;10545:2;10530:18;;10524:25;10493:7;;-1:-1:-1;10558:33:158;10524:25;10558:33;:::i;:::-;10662:2;10647:18;;10641:25;10610:7;;-1:-1:-1;10675:33:158;10641:25;10675:33;:::i;:::-;10779:3;10764:19;;10758:26;10727:7;;-1:-1:-1;10793:33:158;10758:26;10793:33;:::i;:::-;10897:3;10882:19;;10876:26;10845:7;;-1:-1:-1;10911:33:158;10876:26;10911:33;:::i;:::-;11015:3;11000:19;;10994:26;10963:7;;-1:-1:-1;11029:33:158;10994:26;11029:33;:::i;:::-;11133:3;11118:19;;11112:26;11081:7;;-1:-1:-1;11147:33:158;11112:26;11147:33;:::i;:::-;11251:3;11236:19;;11230:26;11199:7;;-1:-1:-1;11265:33:158;11230:26;11265:33;:::i;:::-;11317:7;11307:17;;;9943:1387;;;;;;;;;;;:::o;11335:184::-;11387:77;11384:1;11377:88;11484:4;11481:1;11474:15;11508:4;11505:1;11498:15;11826:437;11905:1;11901:12;;;;11948;;;11969:61;;12023:4;12015:6;12011:17;12001:27;;11969:61;12076:2;12068:6;12065:14;12045:18;12042:38;12039:218;;12113:77;12110:1;12103:88;12214:4;12211:1;12204:15;12242:4;12239:1;12232:15;12039:218;;11826:437;;;:::o;12268:289::-;12443:6;12432:9;12425:25;12486:2;12481;12470:9;12466:18;12459:30;12406:4;12506:45;12547:2;12536:9;12532:18;12524:6;12506:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue()": "20965255",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set((bool,address,address,address,address,address,address,address,address))": "108f31e9",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attackPathVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyv2Address\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"attackPathVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"coordVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"moveConfig\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/ZKConfigComponent.sol\":\"ZKConfigComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\",\":verifiers/=src/verifiers/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/SingletonID.sol\":{\"keccak256\":\"0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9\",\"dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/ZKConfigComponent.sol\":{\"keccak256\":\"0xdad2553aa8d56004f765a7a5f0150dd288c3819e0cbee2c395a68b5ee8676214\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3141844e4bd6211432af26b5ea69739ad1fa9c313f165cbff80a8414548a6462\",\"dweb:/ipfs/QmZJZSg8RLA4S4HXPE2WMEMHjKurEWkKNzscw4o2xuGLug\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attackPathVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "moveConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyv2Address",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "attackPathVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "coordVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/",
        ":verifiers/=src/verifiers/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/ZKConfigComponent.sol": "ZKConfigComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/SingletonID.sol": {
        "keccak256": "0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2",
        "urls": [
          "bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9",
          "dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/ZKConfigComponent.sol": {
        "keccak256": "0xdad2553aa8d56004f765a7a5f0150dd288c3819e0cbee2c395a68b5ee8676214",
        "urls": [
          "bzz-raw://3141844e4bd6211432af26b5ea69739ad1fa9c313f165cbff80a8414548a6462",
          "dweb:/ipfs/QmZJZSg8RLA4S4HXPE2WMEMHjKurEWkKNzscw4o2xuGLug"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/ZKConfigComponent.sol",
    "id": 23318,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        23035
      ],
      "LibTypes": [
        522
      ],
      "SingletonID": [
        527
      ],
      "ZKConfig": [
        23054
      ],
      "ZKConfigComponent": [
        23317
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3075:121",
    "nodes": [
      {
        "id": 23021,
        "nodeType": "PragmaDirective",
        "src": "32:24:121",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 23023,
        "nodeType": "ImportDirective",
        "src": "57:55:121",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23318,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23022,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "65:13:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23025,
        "nodeType": "ImportDirective",
        "src": "113:45:121",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23318,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23024,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "121:8:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23027,
        "nodeType": "ImportDirective",
        "src": "159:51:121",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/SingletonID.sol",
        "file": "solecs/SingletonID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 23318,
        "sourceUnit": 528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 23026,
              "name": "SingletonID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 527,
              "src": "167:11:121",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 23035,
        "nodeType": "VariableDeclaration",
        "src": "212:62:121",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "229:2:121",
        "scope": 23318,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 23028,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "212:7:121",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e5a4b436f6e666967",
                  "id": 23032,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "252:20:121",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  },
                  "value": "component.ZKConfig"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  }
                ],
                "id": 23031,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "242:9:121",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 23033,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "242:31:121",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 23030,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "234:7:121",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 23029,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:121",
              "typeDescriptions": {}
            }
          },
          "id": 23034,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "234:40:121",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 23054,
        "nodeType": "StructDefinition",
        "src": "277:303:121",
        "nodes": [],
        "canonicalName": "ZKConfig",
        "members": [
          {
            "constant": false,
            "id": 23037,
            "mutability": "mutable",
            "name": "open",
            "nameLocation": "304:4:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "299:9:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 23036,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "299:4:121",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23039,
            "mutability": "mutable",
            "name": "initVerifyAddress",
            "nameLocation": "322:17:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "314:25:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23038,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23041,
            "mutability": "mutable",
            "name": "moveVerifyAddress",
            "nameLocation": "353:17:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "345:25:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23040,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23043,
            "mutability": "mutable",
            "name": "markVerifyAddress",
            "nameLocation": "384:17:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "376:25:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23042,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23045,
            "mutability": "mutable",
            "name": "treasureVerifyAddress",
            "nameLocation": "415:21:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "407:29:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23044,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "407:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23047,
            "mutability": "mutable",
            "name": "resourceVerifyAddress",
            "nameLocation": "450:21:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "442:29:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23046,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23049,
            "mutability": "mutable",
            "name": "resourceVerifyv2Address",
            "nameLocation": "485:23:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "477:31:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23048,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "477:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23051,
            "mutability": "mutable",
            "name": "attackPathVerifyAddress",
            "nameLocation": "522:23:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "514:31:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23050,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "514:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 23053,
            "mutability": "mutable",
            "name": "coordVerifyAddress",
            "nameLocation": "559:18:121",
            "nodeType": "VariableDeclaration",
            "scope": 23054,
            "src": "551:26:121",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23052,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "551:7:121",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ZKConfig",
        "nameLocation": "284:8:121",
        "scope": 23318,
        "visibility": "public"
      },
      {
        "id": 23317,
        "nodeType": "ContractDefinition",
        "src": "582:2524:121",
        "nodes": [
          {
            "id": 23066,
            "nodeType": "FunctionDefinition",
            "src": "632:54:121",
            "nodes": [],
            "body": {
              "id": 23065,
              "nodeType": "Block",
              "src": "684:2:121",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 23061,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23058,
                    "src": "673:5:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 23062,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23035,
                    "src": "680:2:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 23063,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23060,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "659:13:121"
                },
                "nodeType": "ModifierInvocation",
                "src": "659:24:121"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 23059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23058,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "652:5:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 23066,
                  "src": "644:13:121",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "644:7:121",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "643:15:121"
            },
            "returnParameters": {
              "id": 23064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "684:0:121"
            },
            "scope": 23317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23221,
            "nodeType": "FunctionDefinition",
            "src": "692:1049:121",
            "nodes": [],
            "body": {
              "id": 23220,
              "nodeType": "Block",
              "src": "839:902:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 23083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23077,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23071,
                      "src": "849:4:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "39",
                          "id": 23081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "869:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          }
                        ],
                        "id": 23080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "856:12:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 23078,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "860:6:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 23079,
                          "nodeType": "ArrayTypeName",
                          "src": "860:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 23082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "856:15:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "849:22:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 23084,
                  "nodeType": "ExpressionStatement",
                  "src": "849:22:121"
                },
                {
                  "expression": {
                    "id": 23092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23085,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23075,
                      "src": "881:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "39",
                          "id": 23090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "917:1:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          },
                          "value": "9"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_9_by_1",
                            "typeString": "int_const 9"
                          }
                        ],
                        "id": 23089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "890:26:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 23087,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 23086,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "894:20:121"
                            },
                            "referencedDeclaration": 521,
                            "src": "894:20:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 23088,
                          "nodeType": "ArrayTypeName",
                          "src": "894:22:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 23091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "890:29:121",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "881:38:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 23093,
                  "nodeType": "ExpressionStatement",
                  "src": "881:38:121"
                },
                {
                  "expression": {
                    "id": 23098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23094,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "930:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23096,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 23095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "935:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "930:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6f70656e",
                      "id": 23097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "940:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_99f30275ab70dd1890c0789c4570632b6f0b0284d11c2d9e587d0368f7027018",
                        "typeString": "literal_string \"open\""
                      },
                      "value": "open"
                    },
                    "src": "930:16:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23099,
                  "nodeType": "ExpressionStatement",
                  "src": "930:16:121"
                },
                {
                  "expression": {
                    "id": 23106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23100,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "956:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23102,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 23101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "963:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "956:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23103,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "968:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "968:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BOOL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "968:25:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "956:37:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23107,
                  "nodeType": "ExpressionStatement",
                  "src": "956:37:121"
                },
                {
                  "expression": {
                    "id": 23112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23108,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1004:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23110,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 23109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1009:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1004:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "696e697456657269667941646472657373",
                      "id": 23111,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1014:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8b2ce8b46d39c70a86f6273423bfdf41f18ce395d60e5f09477c5335f4b57348",
                        "typeString": "literal_string \"initVerifyAddress\""
                      },
                      "value": "initVerifyAddress"
                    },
                    "src": "1004:29:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23113,
                  "nodeType": "ExpressionStatement",
                  "src": "1004:29:121"
                },
                {
                  "expression": {
                    "id": 23120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23114,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1043:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23116,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 23115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1050:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1043:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23117,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1055:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1055:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23119,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1055:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1043:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23121,
                  "nodeType": "ExpressionStatement",
                  "src": "1043:40:121"
                },
                {
                  "expression": {
                    "id": 23126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23122,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1094:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23124,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 23123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1099:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1094:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6f766556657269667941646472657373",
                      "id": 23125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1104:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_41c19086631a255931824eef818b26f2a7d17ad6f3f19e6a876fc9989c797296",
                        "typeString": "literal_string \"moveVerifyAddress\""
                      },
                      "value": "moveVerifyAddress"
                    },
                    "src": "1094:29:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23127,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:29:121"
                },
                {
                  "expression": {
                    "id": 23134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23128,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1133:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23130,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 23129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1140:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1133:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23131,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1145:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1145:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23133,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1145:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1133:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23135,
                  "nodeType": "ExpressionStatement",
                  "src": "1133:40:121"
                },
                {
                  "expression": {
                    "id": 23140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23136,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1184:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23138,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 23137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1189:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1184:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d61726b56657269667941646472657373",
                      "id": 23139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1194:19:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5809d430f8281dd0a6ad5fb3d9b1d7e9d5297d6dfbef6d542c3f687c4c9414e6",
                        "typeString": "literal_string \"markVerifyAddress\""
                      },
                      "value": "markVerifyAddress"
                    },
                    "src": "1184:29:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23141,
                  "nodeType": "ExpressionStatement",
                  "src": "1184:29:121"
                },
                {
                  "expression": {
                    "id": 23148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23142,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1223:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23144,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 23143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1230:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1223:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23145,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1235:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1235:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1235:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1223:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23149,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:40:121"
                },
                {
                  "expression": {
                    "id": 23154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23150,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1274:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23152,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 23151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1279:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1274:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "747265617375726556657269667941646472657373",
                      "id": 23153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1284:23:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02857dbdb80ce598b5734f3ddf0201cb4adb883ed2aec9b6862cae1c0d47e68d",
                        "typeString": "literal_string \"treasureVerifyAddress\""
                      },
                      "value": "treasureVerifyAddress"
                    },
                    "src": "1274:33:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23155,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:33:121"
                },
                {
                  "expression": {
                    "id": 23162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23156,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1317:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23158,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 23157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1324:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1317:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23159,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1329:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1329:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1329:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1317:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23163,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:40:121"
                },
                {
                  "expression": {
                    "id": 23168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23164,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1368:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23166,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 23165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1373:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1368:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7265736f7572636556657269667941646472657373",
                      "id": 23167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1378:23:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_78feae2985db2067b0dc32697212d32316ae9837a2960512c2e983e19d445160",
                        "typeString": "literal_string \"resourceVerifyAddress\""
                      },
                      "value": "resourceVerifyAddress"
                    },
                    "src": "1368:33:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23169,
                  "nodeType": "ExpressionStatement",
                  "src": "1368:33:121"
                },
                {
                  "expression": {
                    "id": 23176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23170,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1411:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23172,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 23171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1418:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1411:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23173,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1423:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1423:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1423:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1411:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23177,
                  "nodeType": "ExpressionStatement",
                  "src": "1411:40:121"
                },
                {
                  "expression": {
                    "id": 23182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23178,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1462:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23180,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 23179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1467:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1462:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7265736f75726365566572696679763241646472657373",
                      "id": 23181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1472:25:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_0f9b74e1f94911ff9093aa817bac53b6eb4385b17df6db1f5948ebbbb74900ac",
                        "typeString": "literal_string \"resourceVerifyv2Address\""
                      },
                      "value": "resourceVerifyv2Address"
                    },
                    "src": "1462:35:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23183,
                  "nodeType": "ExpressionStatement",
                  "src": "1462:35:121"
                },
                {
                  "expression": {
                    "id": 23190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23184,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1507:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23186,
                      "indexExpression": {
                        "hexValue": "36",
                        "id": 23185,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1514:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_6_by_1",
                          "typeString": "int_const 6"
                        },
                        "value": "6"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1507:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23187,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1519:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23188,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1519:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1519:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1507:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23191,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:40:121"
                },
                {
                  "expression": {
                    "id": 23196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23192,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1558:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23194,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 23193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1563:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1558:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "61747461636b5061746856657269667941646472657373",
                      "id": 23195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1568:25:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a27d6aca1ce8b76bc48ea72b459bc9406cf30df750230a939c9bffd344841eda",
                        "typeString": "literal_string \"attackPathVerifyAddress\""
                      },
                      "value": "attackPathVerifyAddress"
                    },
                    "src": "1558:35:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23197,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:35:121"
                },
                {
                  "expression": {
                    "id": 23204,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23198,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1603:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23200,
                      "indexExpression": {
                        "hexValue": "37",
                        "id": 23199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1610:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_7_by_1",
                          "typeString": "int_const 7"
                        },
                        "value": "7"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1603:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23201,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1615:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1615:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23203,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1615:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1603:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23205,
                  "nodeType": "ExpressionStatement",
                  "src": "1603:40:121"
                },
                {
                  "expression": {
                    "id": 23210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23206,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23071,
                        "src": "1654:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 23208,
                      "indexExpression": {
                        "hexValue": "38",
                        "id": 23207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1659:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1654:7:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "636f6f726456657269667941646472657373",
                      "id": 23209,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1664:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1b0e24459314fd9416e3391c47453676dc4a1c138ed81c9cfd22bf87bd5510dd",
                        "typeString": "literal_string \"coordVerifyAddress\""
                      },
                      "value": "coordVerifyAddress"
                    },
                    "src": "1654:30:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 23211,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:30:121"
                },
                {
                  "expression": {
                    "id": 23218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23212,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23075,
                        "src": "1694:6:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 23214,
                      "indexExpression": {
                        "hexValue": "38",
                        "id": 23213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1701:1:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_8_by_1",
                          "typeString": "int_const 8"
                        },
                        "value": "8"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1694:9:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 23215,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1706:8:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 23216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1706:20:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 23217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1706:28:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1694:40:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 23219,
                  "nodeType": "ExpressionStatement",
                  "src": "1694:40:121"
                }
              ]
            },
            "baseFunctions": [
              33293
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "701:9:121",
            "overrides": {
              "id": 23068,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "749:8:121"
            },
            "parameters": {
              "id": 23067,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "710:2:121"
            },
            "returnParameters": {
              "id": 23076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23071,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "791:4:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 23221,
                  "src": "775:20:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23069,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "775:6:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 23070,
                    "nodeType": "ArrayTypeName",
                    "src": "775:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23075,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "827:6:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 23221,
                  "src": "797:36:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23073,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23072,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "797:20:121"
                      },
                      "referencedDeclaration": 521,
                      "src": "797:20:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 23074,
                    "nodeType": "ArrayTypeName",
                    "src": "797:22:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "774:60:121"
            },
            "scope": 23317,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23253,
            "nodeType": "FunctionDefinition",
            "src": "1747:563:121",
            "nodes": [],
            "body": {
              "id": 23252,
              "nodeType": "Block",
              "src": "1795:515:121",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23228,
                        "name": "SingletonID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1822:11:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 23231,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "1875:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23232,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23037,
                            "src": "1875:15:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "expression": {
                              "id": 23233,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "1908:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23234,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23039,
                            "src": "1908:28:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23235,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "1954:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23236,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "moveVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23041,
                            "src": "1954:28:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23237,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2000:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "markVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23043,
                            "src": "2000:28:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23239,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2046:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23240,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasureVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23045,
                            "src": "2046:32:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23241,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2096:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resourceVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23047,
                            "src": "2096:32:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23243,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2146:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23244,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resourceVerifyv2Address",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23049,
                            "src": "2146:34:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23245,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2198:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23246,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "attackPathVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23051,
                            "src": "2198:34:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 23247,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23224,
                              "src": "2250:10:121",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 23248,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "coordVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23053,
                            "src": "2250:29:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23229,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1847:3:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1847:10:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 23249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1847:446:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23227,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23253,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "1805:3:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 23250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1805:498:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23251,
                  "nodeType": "ExpressionStatement",
                  "src": "1805:498:121"
                }
              ]
            },
            "functionSelector": "108f31e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1756:3:121",
            "parameters": {
              "id": 23225,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23224,
                  "mutability": "mutable",
                  "name": "moveConfig",
                  "nameLocation": "1776:10:121",
                  "nodeType": "VariableDeclaration",
                  "scope": 23253,
                  "src": "1760:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 23223,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23222,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23054,
                      "src": "1760:8:121"
                    },
                    "referencedDeclaration": 23054,
                    "src": "1760:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$23054_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1759:28:121"
            },
            "returnParameters": {
              "id": 23226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1795:0:121"
            },
            "scope": 23317,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 23316,
            "nodeType": "FunctionDefinition",
            "src": "2316:788:121",
            "nodes": [],
            "body": {
              "id": 23315,
              "nodeType": "Block",
              "src": "2374:730:121",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    23260,
                    23262,
                    23264,
                    23266,
                    23268,
                    23270,
                    23272,
                    23274,
                    23276
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23260,
                      "mutability": "mutable",
                      "name": "open",
                      "nameLocation": "2390:4:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2385:9:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 23259,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2385:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23262,
                      "mutability": "mutable",
                      "name": "initVerifyAddress",
                      "nameLocation": "2416:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2408:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23261,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2408:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23264,
                      "mutability": "mutable",
                      "name": "moveVerifyAddress",
                      "nameLocation": "2455:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2447:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23263,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2447:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23266,
                      "mutability": "mutable",
                      "name": "markVerifyAddress",
                      "nameLocation": "2494:17:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2486:25:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23265,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2486:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23268,
                      "mutability": "mutable",
                      "name": "treasureVerifyAddress",
                      "nameLocation": "2533:21:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2525:29:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23267,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2525:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23270,
                      "mutability": "mutable",
                      "name": "resourceVerifyAddress",
                      "nameLocation": "2576:21:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2568:29:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23269,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2568:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23272,
                      "mutability": "mutable",
                      "name": "resourceVerifyv2Address",
                      "nameLocation": "2619:23:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2611:31:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23271,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2611:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23274,
                      "mutability": "mutable",
                      "name": "attackPathVerifyAddress",
                      "nameLocation": "2664:23:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2656:31:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23273,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2656:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 23276,
                      "mutability": "mutable",
                      "name": "coordVerifyAddress",
                      "nameLocation": "2709:18:121",
                      "nodeType": "VariableDeclaration",
                      "scope": 23315,
                      "src": "2701:26:121",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 23275,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2701:7:121",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23302,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23280,
                            "name": "SingletonID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "2771:11:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 23279,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2759:11:121",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 23281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2759:24:121",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 23283,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2802:4:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 23282,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2802:4:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23285,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2808:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23284,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2808:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23287,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2817:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23286,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2817:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2826:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23288,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2826:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23291,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2835:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23290,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2835:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2844:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23292,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2844:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2853:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23294,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2853:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2862:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23296,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2862:7:121",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 23299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2871:7:121",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23298,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2871:7:121",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 23300,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2801:78:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address),type(address),type(address),type(address))"
                        }
                      ],
                      "expression": {
                        "id": 23277,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2731:3:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 23278,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2731:10:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 23301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:162:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$",
                      "typeString": "tuple(bool,address payable,address payable,address payable,address payable,address payable,address payable,address payable,address payable)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2384:509:121"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 23304,
                        "name": "open",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23260,
                        "src": "2919:4:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 23305,
                        "name": "initVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23262,
                        "src": "2925:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23306,
                        "name": "moveVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23264,
                        "src": "2944:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23307,
                        "name": "markVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23266,
                        "src": "2963:17:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23308,
                        "name": "treasureVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23268,
                        "src": "2982:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23309,
                        "name": "resourceVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23270,
                        "src": "3005:21:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23310,
                        "name": "resourceVerifyv2Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23272,
                        "src": "3028:23:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23311,
                        "name": "attackPathVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23274,
                        "src": "3053:23:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23312,
                        "name": "coordVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23276,
                        "src": "3078:18:121",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23303,
                      "name": "ZKConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23054,
                      "src": "2910:8:121",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ZKConfig_$23054_storage_ptr_$",
                        "typeString": "type(struct ZKConfig storage pointer)"
                      }
                    },
                    "id": 23313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2910:187:121",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                      "typeString": "struct ZKConfig memory"
                    }
                  },
                  "functionReturnParameters": 23258,
                  "id": 23314,
                  "nodeType": "Return",
                  "src": "2903:194:121"
                }
              ]
            },
            "functionSelector": "20965255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "2325:8:121",
            "parameters": {
              "id": 23254,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:2:121"
            },
            "returnParameters": {
              "id": 23258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23316,
                  "src": "2357:15:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$23054_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 23256,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23255,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 23054,
                      "src": "2357:8:121"
                    },
                    "referencedDeclaration": 23054,
                    "src": "2357:8:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$23054_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2356:17:121"
            },
            "scope": 23317,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23055,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "612:13:121"
            },
            "id": 23056,
            "nodeType": "InheritanceSpecifier",
            "src": "612:13:121"
          }
        ],
        "canonicalName": "ZKConfigComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          23317,
          220,
          33108,
          33382,
          2367,
          35196,
          35632,
          35072,
          33344,
          35593,
          2410,
          35206
        ],
        "name": "ZKConfigComponent",
        "nameLocation": "591:17:121",
        "scope": 23318,
        "usedErrors": [
          20,
          33033,
          35629,
          35631
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 121
}