{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "address",
              "name": "initVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "moveVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "markVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "treasureVerifyAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "resourceVerifyAddress",
              "type": "address"
            }
          ],
          "internalType": "struct ZKConfig",
          "name": "moveConfig",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200191638038062001916833981016040819052620000349162000200565b807fd0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d362000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000e5e1760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000e5e1760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b6116d480620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e14610315578063f2fde38b14610328578063fc93190f1461033b57600080fd5b8063b8bc073d146102e2578063bf4fe57e1461030257600080fd5b80638da5cb5b1461029d5780639d2c76b4146102a5578063af640d0f146102b8578063b361be46146102cf57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610254578063861eb905146102675780638b2829471461028a57600080fd5b80634fef6a381461022b5780636b122fe01461023e57600080fd5b8063209652551461013b57806330b67baa146101bc57806331b933b9146102015780634cc8221514610216575b600080fd5b61014361034e565b6040516101b39190600060c082019050825115158252602083015173ffffffffffffffffffffffffffffffffffffffff80821660208501528060408601511660408501528060608601511660608501528060808601511660808501528060a08601511660a0850152505092915050565b60405180910390f35b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b3565b6102096103f9565b6040516101b39190611125565b610229610224366004611169565b61042d565b005b6102296102393660046111a4565b610478565b610246610556565b6040516101b3929190611262565b6102296102623660046111a4565b610941565b61027a6102753660046111a4565b610973565b60405190151581526020016101b3565b61022961029836600461142c565b6109fe565b6101dc610a4b565b6102296102b33660046111a4565b610a90565b6102c160025481565b6040519081526020016101b3565b6102096102dd366004611473565b6103f9565b6102f56102f0366004611169565b610bb9565b6040516101b391906114b0565b6102296103103660046111a4565b610c5b565b61027a610323366004611169565b610d36565b6102296103363660046111a4565b610d58565b6102296103493660046114d1565b610dd1565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905290808080808061039061060d610bb9565b8060200190518101906103a3919061157c565b6040805160c081018252961515875273ffffffffffffffffffffffffffffffffffffffff9586166020880152938516938601939093529083166060850152821660808401521660a0820152979650505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043633610973565b61046c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610e82565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104e8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600580825260c08201909252606091829190816020015b606081526020019060019003908161057157505060408051600580825260c082019092529193506020820160a0803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106105f1576105f1611603565b602002602001018190525060008160008151811061061157610611611603565b6020026020010190602181111561062a5761062a611233565b9081602181111561063d5761063d611233565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061068a5761068a611603565b60200260200101819052506010816001815181106106aa576106aa611603565b602002602001019060218111156106c3576106c3611233565b908160218111156106d6576106d6611233565b815250506040518060400160405280601181526020017f6d6f7665566572696679416464726573730000000000000000000000000000008152508260028151811061072357610723611603565b602002602001018190525060108160028151811061074357610743611603565b6020026020010190602181111561075c5761075c611233565b9081602181111561076f5761076f611233565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106107bc576107bc611603565b60200260200101819052506010816003815181106107dc576107dc611603565b602002602001019060218111156107f5576107f5611233565b9081602181111561080857610808611233565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061085557610855611603565b602002602001018190525060108160048151811061087557610875611603565b6020026020010190602181111561088e5761088e611233565b908160218111156108a1576108a1611233565b815250506040518060400160405280601581526020017f7265736f75726365566572696679416464726573730000000000000000000000815250826005815181106108ee576108ee611603565b602002602001018190525060108160058151811061090e5761090e611603565b6020026020010190602181111561092757610927611233565b9081602181111561093a5761093a611233565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806109f857506109c9610a4b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a0733610973565b610a3d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a478282610ef0565b5050565b6000610a8b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b00576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610bd690611632565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0290611632565b8015610c4f5780601f10610c2457610100808354040283529160200191610c4f565b820191906000526020600020905b815481529060010190602001808311610c3257829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ccb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610d4f90611632565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dc8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610f9e565b61047561060d826000015183602001518460400151856060015186608001518760a00151604051602001610e4a96959493929190951515865273ffffffffffffffffffffffffffffffffffffffff948516602087015292841660408601529083166060850152821660808401521660a082015260c00190565b6040516020818303038152906040526109fe565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e9991611052565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b84565b60008281526001602090815260409091208251610f0f9284019061108c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f689085908590600401611685565b600060405180830381600087803b158015610f8257600080fd5b505af1158015610f96573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610475928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461105e90611632565b6000825580601f1061106e575050565b601f0160209004906000526020600020908101906104759190611110565b82805461109890611632565b90600052602060002090601f0160209004810192826110ba5760008555611100565b82601f106110d357805160ff1916838001178555611100565b82800160010185558215611100579182015b828111156111005782518255916020019190600101906110e5565b5061110c929150611110565b5090565b5b8082111561110c5760008155600101611111565b6020808252825182820181905260009190848201906040850190845b8181101561115d57835183529284019291840191600101611141565b50909695505050505050565b60006020828403121561117b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461047557600080fd5b6000602082840312156111b657600080fd5b81356111c181611182565b9392505050565b6000815180845260005b818110156111ee576020818501810151868301820152016111d2565b81811115611200576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526112c58683516111c8565b9550938201939082019060010161128b565b50508584038187015286518085528782019482019350915060005b8281101561134557845160228110611333577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016112f2565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261139257600080fd5b813567ffffffffffffffff808211156113ad576113ad611352565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156113f3576113f3611352565b8160405283815286602085880101111561140c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561143f57600080fd5b82359150602083013567ffffffffffffffff81111561145d57600080fd5b61146985828601611381565b9150509250929050565b60006020828403121561148557600080fd5b813567ffffffffffffffff81111561149c57600080fd5b6114a884828501611381565b949350505050565b6020815260006111c160208301846111c8565b801515811461047557600080fd5b600060c082840312156114e357600080fd5b60405160c0810181811067ffffffffffffffff8211171561150657611506611352565b6040528235611514816114c3565b8152602083013561152481611182565b6020820152604083013561153781611182565b6040820152606083013561154a81611182565b6060820152608083013561155d81611182565b608082015260a083013561157081611182565b60a08201529392505050565b60008060008060008060c0878903121561159557600080fd5b86516115a0816114c3565b60208801519096506115b181611182565b60408801519095506115c281611182565b60608801519094506115d381611182565b60808801519093506115e481611182565b60a08801519092506115f581611182565b809150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061164657607f821691505b60208210810361167f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006114a860408301846111c856fea264697066735822122057d55a85172397e4266cf9b0c6822a3865b448d0d946a69c1f04dfef49b096a564736f6c634300080d0033",
    "sourceMap": "476:1863:90:-:0;;;526:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;567:5;242:31;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;526:54:90;476:1863;;1203:207:33;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:33;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:33;-1:-1:-1;;;;;1386:17:33;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:33;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:33;:10;-1:-1:-1;;;;;422:22:33;;418:54;;453:19;;-1:-1:-1;;;453:19:33;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:105::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:105;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:34:-;186:49;;242:159::o;647:111:33:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:33;;647:111;-1:-1:-1;647:111:33:o;14:290:105:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:105;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:105:o;309:274::-;476:1863:90;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e14610315578063f2fde38b14610328578063fc93190f1461033b57600080fd5b8063b8bc073d146102e2578063bf4fe57e1461030257600080fd5b80638da5cb5b1461029d5780639d2c76b4146102a5578063af640d0f146102b8578063b361be46146102cf57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610254578063861eb905146102675780638b2829471461028a57600080fd5b80634fef6a381461022b5780636b122fe01461023e57600080fd5b8063209652551461013b57806330b67baa146101bc57806331b933b9146102015780634cc8221514610216575b600080fd5b61014361034e565b6040516101b39190600060c082019050825115158252602083015173ffffffffffffffffffffffffffffffffffffffff80821660208501528060408601511660408501528060608601511660608501528060808601511660808501528060a08601511660a0850152505092915050565b60405180910390f35b6000546101dc9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b3565b6102096103f9565b6040516101b39190611125565b610229610224366004611169565b61042d565b005b6102296102393660046111a4565b610478565b610246610556565b6040516101b3929190611262565b6102296102623660046111a4565b610941565b61027a6102753660046111a4565b610973565b60405190151581526020016101b3565b61022961029836600461142c565b6109fe565b6101dc610a4b565b6102296102b33660046111a4565b610a90565b6102c160025481565b6040519081526020016101b3565b6102096102dd366004611473565b6103f9565b6102f56102f0366004611169565b610bb9565b6040516101b391906114b0565b6102296103103660046111a4565b610c5b565b61027a610323366004611169565b610d36565b6102296103363660046111a4565b610d58565b6102296103493660046114d1565b610dd1565b6040805160c081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905290808080808061039061060d610bb9565b8060200190518101906103a3919061157c565b6040805160c081018252961515875273ffffffffffffffffffffffffffffffffffffffff9586166020880152938516938601939093529083166060850152821660808401521660a0820152979650505050505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61043633610973565b61046c576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610e82565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146104e8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b60408051600580825260c08201909252606091829190816020015b606081526020019060019003908161057157505060408051600580825260c082019092529193506020820160a0803683370190505090506040518060400160405280600481526020017f6f70656e00000000000000000000000000000000000000000000000000000000815250826000815181106105f1576105f1611603565b602002602001018190525060008160008151811061061157610611611603565b6020026020010190602181111561062a5761062a611233565b9081602181111561063d5761063d611233565b815250506040518060400160405280601181526020017f696e6974566572696679416464726573730000000000000000000000000000008152508260018151811061068a5761068a611603565b60200260200101819052506010816001815181106106aa576106aa611603565b602002602001019060218111156106c3576106c3611233565b908160218111156106d6576106d6611233565b815250506040518060400160405280601181526020017f6d6f7665566572696679416464726573730000000000000000000000000000008152508260028151811061072357610723611603565b602002602001018190525060108160028151811061074357610743611603565b6020026020010190602181111561075c5761075c611233565b9081602181111561076f5761076f611233565b815250506040518060400160405280601181526020017f6d61726b56657269667941646472657373000000000000000000000000000000815250826003815181106107bc576107bc611603565b60200260200101819052506010816003815181106107dc576107dc611603565b602002602001019060218111156107f5576107f5611233565b9081602181111561080857610808611233565b815250506040518060400160405280601581526020017f74726561737572655665726966794164647265737300000000000000000000008152508260048151811061085557610855611603565b602002602001018190525060108160048151811061087557610875611603565b6020026020010190602181111561088e5761088e611233565b908160218111156108a1576108a1611233565b815250506040518060400160405280601581526020017f7265736f75726365566572696679416464726573730000000000000000000000815250826005815181106108ee576108ee611603565b602002602001018190525060108160058151811061090e5761090e611603565b6020026020010190602181111561092757610927611233565b9081602181111561093a5761093a611233565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806109f857506109c9610a4b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b610a0733610973565b610a3d576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a478282610ef0565b5050565b6000610a8b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b00576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b158015610b9e57600080fd5b505af1158015610bb2573d6000803e3d6000fd5b5050505050565b6000818152600160205260409020805460609190610bd690611632565b80601f0160208091040260200160405190810160405280929190818152602001828054610c0290611632565b8015610c4f5780601f10610c2457610100808354040283529160200191610c4f565b820191906000526020600020905b815481529060010190602001808311610c3257829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610ccb576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610d4f90611632565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610dc8576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61047581610f9e565b61047561060d826000015183602001518460400151856060015186608001518760a00151604051602001610e4a96959493929190951515865273ffffffffffffffffffffffffffffffffffffffff948516602087015292841660408601529083166060850152821660808401521660a082015260c00190565b6040516020818303038152906040526109fe565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610e9991611052565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610b84565b60008281526001602090815260409091208251610f0f9284019061108c565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610f689085908590600401611685565b600060405180830381600087803b158015610f8257600080fd5b505af1158015610f96573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804608054604051610475928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b50805461105e90611632565b6000825580601f1061106e575050565b601f0160209004906000526020600020908101906104759190611110565b82805461109890611632565b90600052602060002090601f0160209004810192826110ba5760008555611100565b82601f106110d357805160ff1916838001178555611100565b82800160010185558215611100579182015b828111156111005782518255916020019190600101906110e5565b5061110c929150611110565b5090565b5b8082111561110c5760008155600101611111565b6020808252825182820181905260009190848201906040850190845b8181101561115d57835183529284019291840191600101611141565b50909695505050505050565b60006020828403121561117b57600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8116811461047557600080fd5b6000602082840312156111b657600080fd5b81356111c181611182565b9392505050565b6000815180845260005b818110156111ee576020818501810151868301820152016111d2565b81811115611200576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b838110156112d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526112c58683516111c8565b9550938201939082019060010161128b565b50508584038187015286518085528782019482019350915060005b8281101561134557845160228110611333577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b845293810193928101926001016112f2565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261139257600080fd5b813567ffffffffffffffff808211156113ad576113ad611352565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156113f3576113f3611352565b8160405283815286602085880101111561140c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561143f57600080fd5b82359150602083013567ffffffffffffffff81111561145d57600080fd5b61146985828601611381565b9150509250929050565b60006020828403121561148557600080fd5b813567ffffffffffffffff81111561149c57600080fd5b6114a884828501611381565b949350505050565b6020815260006111c160208301846111c8565b801515811461047557600080fd5b600060c082840312156114e357600080fd5b60405160c0810181811067ffffffffffffffff8211171561150657611506611352565b6040528235611514816114c3565b8152602083013561152481611182565b6020820152604083013561153781611182565b6040820152606083013561154a81611182565b6060820152608083013561155d81611182565b608082015260a083013561157081611182565b60a08201529392505050565b60008060008060008060c0878903121561159557600080fd5b86516115a0816114c3565b60208801519096506115b181611182565b60408801519095506115c281611182565b60608801519094506115d381611182565b60808801519093506115e481611182565b60a08801519092506115f581611182565b809150509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061164657607f821691505b60208210810361167f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b8281526040602082015260006114a860408301846111c856fea264697066735822122057d55a85172397e4266cf9b0c6822a3865b448d0d946a69c1f04dfef49b096a564736f6c634300080d0033",
    "sourceMap": "476:1863:90:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:561;;;:::i;:::-;;;;;;160:4:105;202:3;191:9;187:19;179:27;;253:6;247:13;240:21;233:29;222:9;215:48;310:4;302:6;298:17;292:24;335:42;433:2;419:12;415:21;408:4;397:9;393:20;386:51;505:2;497:4;489:6;485:17;479:24;475:33;468:4;457:9;453:20;446:63;577:2;569:4;561:6;557:17;551:24;547:33;540:4;529:9;525:20;518:63;649:2;641:4;633:6;629:17;623:24;619:33;612:4;601:9;597:20;590:63;721:2;713:4;705:6;701:17;695:24;691:33;684:4;673:9;669:20;662:63;;;14:717;;;;;1776:561:90;;;;;;;;870:20:0;;;;;;;;;;;;912:42:105;900:55;;;882:74;;870:2;855:18;870:20:0;736:226:105;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;:::-;;955:144:6;;;;;;:::i;:::-;;:::i;586:766:90:-;;;:::i;:::-;;;;;;;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;4755:14:105;;4748:22;4730:41;;4718:2;4703:18;440:168:6;4590:187:105;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:32:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;6292:25:105;;;6280:2;6265:18;1052:17:0;6146:177:105;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;514:113:32:-;;;;;;:::i;:::-;;:::i;1358:412:90:-;;;;;;:::i;:::-;;:::i;1776:561::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:24:90;89:5:9;2089:11:90;:24::i;:::-;2061:135;;;;;;;;;;;;:::i;:::-;2213:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1776:561;-1:-1:-1;;;;;;;1776:561:90:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;586:766:90:-;750:15;;;763:1;750:15;;;;;;;;;669:20;;;;750:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;784:29:90;;;811:1;784:29;;;;;;;;;743:22;;-1:-1:-1;784:29:90;;;;;;;;;;-1:-1:-1;784:29:90;775:38;;824:16;;;;;;;;;;;;;;;;;:4;829:1;824:7;;;;;;;;:::i;:::-;;;;;;:16;;;;862:25;850:6;857:1;850:9;;;;;;;;:::i;:::-;;;;;;:37;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;898:29;;;;;;;;;;;;;;;;;:4;903:1;898:7;;;;;;;;:::i;:::-;;;;;;:29;;;;949:28;937:6;944:1;937:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;988:29;;;;;;;;;;;;;;;;;:4;993:1;988:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1039:28;1027:6;1034:1;1027:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1078:29;;;;;;;;;;;;;;;;;:4;1083:1;1078:7;;;;;;;;:::i;:::-;;;;;;:29;;;;1129:28;1117:6;1124:1;1117:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1168:33;;;;;;;;;;;;;;;;;:4;1173:1;1168:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1223:28;1211:6;1218:1;1211:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1262:33;;;;;;;;;;;;;;;;;:4;1267:1;1262:7;;;;;;;;:::i;:::-;;;;;;:33;;;;1317:28;1305:6;1312:1;1305:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;586:766:90;;:::o;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:32:-;424:7;450:8;186:49:34;722:29:33;;;;647:111;450:8:32;443:15;;378:87;:::o;1302:137:0:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9535:74:105::0;9625:18;;;9618:34;;;;1384:31:0::1;::::0;9508:18:105;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;514:113:32:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:32::1;612:7;593:18;:27::i;1358:412:90:-:0;1416:347;89:5:9;1486:10:90;:15;;;1519:10;:28;;;1565:10;:28;;;1611:10;:28;;;1657:10;:32;;;1707:10;:32;;;1458:295;;;;;;;;;;;;10411:14:105;;10404:22;10386:41;;10446:42;10524:15;;;10519:2;10504:18;;10497:43;10576:15;;;10571:2;10556:18;;10549:43;10628:15;;;10623:2;10608:18;;10601:43;10681:15;;10675:3;10660:19;;10653:44;10734:15;10728:3;10713:19;;10706:44;10373:3;10358:19;;10105:651;1458:295:90;;;;;;;;;;;;;1416:3;:347::i;242:159:34:-;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;6292:25:105;;;4366:5:0;;;;;4359:43;;6265:18:105;;4359:51:0;6146:177:105;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:33:-;186:49:34;1359:7:33;;1338:38;;1172:18;;1182:7;;186:49:34;;1338:38:33;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;967:632:105;1138:2;1190:21;;;1260:13;;1163:18;;;1282:22;;;1109:4;;1138:2;1361:15;;;;1335:2;1320:18;;;1109:4;1404:169;1418:6;1415:1;1412:13;1404:169;;;1479:13;;1467:26;;1548:15;;;;1513:12;;;;1440:1;1433:9;1404:169;;;-1:-1:-1;1590:3:105;;967:632;-1:-1:-1;;;;;;967:632:105:o;1604:180::-;1663:6;1716:2;1704:9;1695:7;1691:23;1687:32;1684:52;;;1732:1;1729;1722:12;1684:52;-1:-1:-1;1755:23:105;;1604:180;-1:-1:-1;1604:180:105:o;1789:154::-;1875:42;1868:5;1864:54;1857:5;1854:65;1844:93;;1933:1;1930;1923:12;1948:247;2007:6;2060:2;2048:9;2039:7;2035:23;2031:32;2028:52;;;2076:1;2073;2066:12;2028:52;2115:9;2102:23;2134:31;2159:5;2134:31;:::i;:::-;2184:5;1948:247;-1:-1:-1;;;1948:247:105:o;2200:531::-;2242:3;2280:5;2274:12;2307:6;2302:3;2295:19;2332:1;2342:162;2356:6;2353:1;2350:13;2342:162;;;2418:4;2474:13;;;2470:22;;2464:29;2446:11;;;2442:20;;2435:59;2371:12;2342:162;;;2522:6;2519:1;2516:13;2513:87;;;2588:1;2581:4;2572:6;2567:3;2563:16;2559:27;2552:38;2513:87;-1:-1:-1;2645:2:105;2633:15;2650:66;2629:88;2620:98;;;;2720:4;2616:109;;2200:531;-1:-1:-1;;2200:531:105:o;2736:184::-;2788:77;2785:1;2778:88;2885:4;2882:1;2875:15;2909:4;2906:1;2899:15;2925:1660;3178:4;3226:2;3215:9;3211:18;3256:2;3245:9;3238:21;3279:6;3314;3308:13;3345:6;3337;3330:22;3383:2;3372:9;3368:18;3361:25;;3445:2;3435:6;3432:1;3428:14;3417:9;3413:30;3409:39;3395:53;;3467:4;3506:2;3498:6;3494:15;3527:1;3537:314;3551:6;3548:1;3545:13;3537:314;;;3640:66;3628:9;3620:6;3616:22;3612:95;3607:3;3600:108;3731:40;3764:6;3755;3749:13;3731:40;:::i;:::-;3721:50;-1:-1:-1;3829:12:105;;;;3794:15;;;;3573:1;3566:9;3537:314;;;-1:-1:-1;;3887:22:105;;;3867:18;;;3860:50;3963:13;;3985:24;;;4067:15;;;;4027;;;-1:-1:-1;3963:13:105;-1:-1:-1;4102:1:105;4112:445;4128:8;4123:3;4120:17;4112:445;;;4199:8;4193:15;4238:2;4234;4231:10;4221:218;;4283:77;4280:1;4273:88;4388:4;4385:1;4378:15;4420:4;4417:1;4410:15;4221:218;4452:17;;4530;;;;4491:14;;;;4156:1;4147:11;4112:445;;;-1:-1:-1;4574:5:105;;2925:1660;-1:-1:-1;;;;;;;2925:1660:105:o;4782:184::-;4834:77;4831:1;4824:88;4931:4;4928:1;4921:15;4955:4;4952:1;4945:15;4971:777;5013:5;5066:3;5059:4;5051:6;5047:17;5043:27;5033:55;;5084:1;5081;5074:12;5033:55;5120:6;5107:20;5146:18;5183:2;5179;5176:10;5173:36;;;5189:18;;:::i;:::-;5323:2;5317:9;5385:4;5377:13;;5228:66;5373:22;;;5397:2;5369:31;5365:40;5353:53;;;5421:18;;;5441:22;;;5418:46;5415:72;;;5467:18;;:::i;:::-;5507:10;5503:2;5496:22;5542:2;5534:6;5527:18;5588:3;5581:4;5576:2;5568:6;5564:15;5560:26;5557:35;5554:55;;;5605:1;5602;5595:12;5554:55;5669:2;5662:4;5654:6;5650:17;5643:4;5635:6;5631:17;5618:54;5716:1;5709:4;5704:2;5696:6;5692:15;5688:26;5681:37;5736:6;5727:15;;;;;;4971:777;;;;:::o;5753:388::-;5830:6;5838;5891:2;5879:9;5870:7;5866:23;5862:32;5859:52;;;5907:1;5904;5897:12;5859:52;5943:9;5930:23;5920:33;;6004:2;5993:9;5989:18;5976:32;6031:18;6023:6;6020:30;6017:50;;;6063:1;6060;6053:12;6017:50;6086:49;6127:7;6118:6;6107:9;6103:22;6086:49;:::i;:::-;6076:59;;;5753:388;;;;;:::o;6328:320::-;6396:6;6449:2;6437:9;6428:7;6424:23;6420:32;6417:52;;;6465:1;6462;6455:12;6417:52;6505:9;6492:23;6538:18;6530:6;6527:30;6524:50;;;6570:1;6567;6560:12;6524:50;6593:49;6634:7;6625:6;6614:9;6610:22;6593:49;:::i;:::-;6583:59;6328:320;-1:-1:-1;;;;6328:320:105:o;6653:218::-;6800:2;6789:9;6782:21;6763:4;6820:45;6861:2;6850:9;6846:18;6838:6;6820:45;:::i;6876:118::-;6962:5;6955:13;6948:21;6941:5;6938:32;6928:60;;6984:1;6981;6974:12;6999:1205;7085:6;7138:3;7126:9;7117:7;7113:23;7109:33;7106:53;;;7155:1;7152;7145:12;7106:53;7188:2;7182:9;7230:3;7222:6;7218:16;7300:6;7288:10;7285:22;7264:18;7252:10;7249:34;7246:62;7243:88;;;7311:18;;:::i;:::-;7347:2;7340:22;7384:23;;7416:28;7384:23;7416:28;:::i;:::-;7453:21;;7526:2;7511:18;;7498:32;7539:33;7498:32;7539:33;:::i;:::-;7600:2;7588:15;;7581:32;7665:2;7650:18;;7637:32;7678:33;7637:32;7678:33;:::i;:::-;7739:2;7727:15;;7720:32;7804:2;7789:18;;7776:32;7817:33;7776:32;7817:33;:::i;:::-;7878:2;7866:15;;7859:32;7943:3;7928:19;;7915:33;7957;7915;7957;:::i;:::-;8018:3;8006:16;;7999:33;8084:3;8069:19;;8056:33;8098;8056;8098;:::i;:::-;8159:3;8147:16;;8140:33;8151:6;6999:1205;-1:-1:-1;;;6999:1205:105:o;8209:958::-;8361:6;8369;8377;8385;8393;8401;8454:3;8442:9;8433:7;8429:23;8425:33;8422:53;;;8471:1;8468;8461:12;8422:53;8503:9;8497:16;8522:28;8544:5;8522:28;:::i;:::-;8619:2;8604:18;;8598:25;8569:5;;-1:-1:-1;8632:33:105;8598:25;8632:33;:::i;:::-;8736:2;8721:18;;8715:25;8684:7;;-1:-1:-1;8749:33:105;8715:25;8749:33;:::i;:::-;8853:2;8838:18;;8832:25;8801:7;;-1:-1:-1;8866:33:105;8832:25;8866:33;:::i;:::-;8970:3;8955:19;;8949:26;8918:7;;-1:-1:-1;8984:33:105;8949:26;8984:33;:::i;:::-;9088:3;9073:19;;9067:26;9036:7;;-1:-1:-1;9102:33:105;9067:26;9102:33;:::i;:::-;9154:7;9144:17;;;8209:958;;;;;;;;:::o;9172:184::-;9224:77;9221:1;9214:88;9321:4;9318:1;9311:15;9345:4;9342:1;9335:15;9663:437;9742:1;9738:12;;;;9785;;;9806:61;;9860:4;9852:6;9848:17;9838:27;;9806:61;9913:2;9905:6;9902:14;9882:18;9879:38;9876:218;;9950:77;9947:1;9940:88;10051:4;10048:1;10041:15;10079:4;10076:1;10069:15;9876:218;;9663:437;;;:::o;10761:289::-;10936:6;10925:9;10918:25;10979:2;10974;10963:9;10959:18;10952:30;10899:4;10999:45;11040:2;11029:9;11025:18;11017:6;10999:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue()": "20965255",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set((bool,address,address,address,address,address))": "fc93190f",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"initVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"moveVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"markVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"treasureVerifyAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resourceVerifyAddress\",\"type\":\"address\"}],\"internalType\":\"struct ZKConfig\",\"name\":\"moveConfig\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/ZKConfigComponent.sol\":\"ZKConfigComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/SingletonID.sol\":{\"keccak256\":\"0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9\",\"dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/ZKConfigComponent.sol\":{\"keccak256\":\"0xd7822718f60b06e696d0a45ee5f0c09b8a01ca0470ebb0bf86cce722335e1a58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84d87a4eaa3c695b44691d6ac0f68a8f63c6045c5ee81d52fbe6ed38870b2517\",\"dweb:/ipfs/QmWEa9EAFRsyFJxLEngSaDMSDdBzKsGy8hFTaLWs1TxQZy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "struct ZKConfig",
              "name": "moveConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "open",
                  "type": "bool"
                },
                {
                  "internalType": "address",
                  "name": "initVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "moveVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "markVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "treasureVerifyAddress",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "resourceVerifyAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/ZKConfigComponent.sol": "ZKConfigComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/SingletonID.sol": {
        "keccak256": "0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2",
        "urls": [
          "bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9",
          "dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/ZKConfigComponent.sol": {
        "keccak256": "0xd7822718f60b06e696d0a45ee5f0c09b8a01ca0470ebb0bf86cce722335e1a58",
        "urls": [
          "bzz-raw://84d87a4eaa3c695b44691d6ac0f68a8f63c6045c5ee81d52fbe6ed38870b2517",
          "dweb:/ipfs/QmWEa9EAFRsyFJxLEngSaDMSDdBzKsGy8hFTaLWs1TxQZy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/ZKConfigComponent.sol",
    "id": 19921,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        19707
      ],
      "LibTypes": [
        522
      ],
      "SingletonID": [
        527
      ],
      "ZKConfig": [
        19720
      ],
      "ZKConfigComponent": [
        19920
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2308:90",
    "nodes": [
      {
        "id": 19693,
        "nodeType": "PragmaDirective",
        "src": "32:24:90",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 19695,
        "nodeType": "ImportDirective",
        "src": "57:55:90",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19921,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19694,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "65:13:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19697,
        "nodeType": "ImportDirective",
        "src": "113:45:90",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19921,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19696,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "121:8:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19699,
        "nodeType": "ImportDirective",
        "src": "159:51:90",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/SingletonID.sol",
        "file": "solecs/SingletonID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19921,
        "sourceUnit": 528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19698,
              "name": "SingletonID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 527,
              "src": "167:11:90",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19707,
        "nodeType": "VariableDeclaration",
        "src": "212:62:90",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "229:2:90",
        "scope": 19921,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 19700,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "212:7:90",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e5a4b436f6e666967",
                  "id": 19704,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "252:20:90",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  },
                  "value": "component.ZKConfig"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d0deb8af54f5692432398f7f62bf53c9e54e6d6a9b4dbccb012b3fe04ea432d3",
                    "typeString": "literal_string \"component.ZKConfig\""
                  }
                ],
                "id": 19703,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "242:9:90",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19705,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "242:31:90",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 19702,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "234:7:90",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 19701,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:90",
              "typeDescriptions": {}
            }
          },
          "id": 19706,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "234:40:90",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 19720,
        "nodeType": "StructDefinition",
        "src": "277:197:90",
        "nodes": [],
        "canonicalName": "ZKConfig",
        "members": [
          {
            "constant": false,
            "id": 19709,
            "mutability": "mutable",
            "name": "open",
            "nameLocation": "304:4:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "299:9:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 19708,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "299:4:90",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19711,
            "mutability": "mutable",
            "name": "initVerifyAddress",
            "nameLocation": "322:17:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "314:25:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19710,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "314:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19713,
            "mutability": "mutable",
            "name": "moveVerifyAddress",
            "nameLocation": "353:17:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "345:25:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19712,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19715,
            "mutability": "mutable",
            "name": "markVerifyAddress",
            "nameLocation": "384:17:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "376:25:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19714,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "376:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19717,
            "mutability": "mutable",
            "name": "treasureVerifyAddress",
            "nameLocation": "415:21:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "407:29:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19716,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "407:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19719,
            "mutability": "mutable",
            "name": "resourceVerifyAddress",
            "nameLocation": "450:21:90",
            "nodeType": "VariableDeclaration",
            "scope": 19720,
            "src": "442:29:90",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19718,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:90",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ZKConfig",
        "nameLocation": "284:8:90",
        "scope": 19921,
        "visibility": "public"
      },
      {
        "id": 19920,
        "nodeType": "ContractDefinition",
        "src": "476:1863:90",
        "nodes": [
          {
            "id": 19732,
            "nodeType": "FunctionDefinition",
            "src": "526:54:90",
            "nodes": [],
            "body": {
              "id": 19731,
              "nodeType": "Block",
              "src": "578:2:90",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19727,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19724,
                    "src": "567:5:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 19728,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19707,
                    "src": "574:2:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 19729,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19726,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "553:13:90"
                },
                "nodeType": "ModifierInvocation",
                "src": "553:24:90"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 19725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19724,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "546:5:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 19732,
                  "src": "538:13:90",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:90",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "537:15:90"
            },
            "returnParameters": {
              "id": 19730,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:90"
            },
            "scope": 19920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19845,
            "nodeType": "FunctionDefinition",
            "src": "586:766:90",
            "nodes": [],
            "body": {
              "id": 19844,
              "nodeType": "Block",
              "src": "733:619:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 19749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19743,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19737,
                      "src": "743:4:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 19747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "763:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 19746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "750:12:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 19744,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "754:6:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 19745,
                          "nodeType": "ArrayTypeName",
                          "src": "754:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 19748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "750:15:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "743:22:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 19750,
                  "nodeType": "ExpressionStatement",
                  "src": "743:22:90"
                },
                {
                  "expression": {
                    "id": 19758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19751,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19741,
                      "src": "775:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "35",
                          "id": 19756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "811:1:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          },
                          "value": "5"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_5_by_1",
                            "typeString": "int_const 5"
                          }
                        ],
                        "id": 19755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "784:26:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 19753,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 19752,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "788:20:90"
                            },
                            "referencedDeclaration": 521,
                            "src": "788:20:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 19754,
                          "nodeType": "ArrayTypeName",
                          "src": "788:22:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 19757,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "784:29:90",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "775:38:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 19759,
                  "nodeType": "ExpressionStatement",
                  "src": "775:38:90"
                },
                {
                  "expression": {
                    "id": 19764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19760,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "824:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19762,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 19761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "829:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "824:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6f70656e",
                      "id": 19763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "834:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_99f30275ab70dd1890c0789c4570632b6f0b0284d11c2d9e587d0368f7027018",
                        "typeString": "literal_string \"open\""
                      },
                      "value": "open"
                    },
                    "src": "824:16:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19765,
                  "nodeType": "ExpressionStatement",
                  "src": "824:16:90"
                },
                {
                  "expression": {
                    "id": 19772,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19766,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "850:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19768,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 19767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "857:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "850:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19769,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "862:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "862:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19771,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "BOOL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "862:25:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "850:37:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19773,
                  "nodeType": "ExpressionStatement",
                  "src": "850:37:90"
                },
                {
                  "expression": {
                    "id": 19778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19774,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "898:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19776,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 19775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "903:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "898:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "696e697456657269667941646472657373",
                      "id": 19777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "908:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_8b2ce8b46d39c70a86f6273423bfdf41f18ce395d60e5f09477c5335f4b57348",
                        "typeString": "literal_string \"initVerifyAddress\""
                      },
                      "value": "initVerifyAddress"
                    },
                    "src": "898:29:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19779,
                  "nodeType": "ExpressionStatement",
                  "src": "898:29:90"
                },
                {
                  "expression": {
                    "id": 19786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19780,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "937:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19782,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 19781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "944:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "937:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19783,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "949:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "949:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "949:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "937:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19787,
                  "nodeType": "ExpressionStatement",
                  "src": "937:40:90"
                },
                {
                  "expression": {
                    "id": 19792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19788,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "988:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19790,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 19789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "993:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "988:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6f766556657269667941646472657373",
                      "id": 19791,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "998:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_41c19086631a255931824eef818b26f2a7d17ad6f3f19e6a876fc9989c797296",
                        "typeString": "literal_string \"moveVerifyAddress\""
                      },
                      "value": "moveVerifyAddress"
                    },
                    "src": "988:29:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19793,
                  "nodeType": "ExpressionStatement",
                  "src": "988:29:90"
                },
                {
                  "expression": {
                    "id": 19800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19794,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1027:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19796,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 19795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1027:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19797,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1039:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1039:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1039:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1027:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19801,
                  "nodeType": "ExpressionStatement",
                  "src": "1027:40:90"
                },
                {
                  "expression": {
                    "id": 19806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19802,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "1078:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19804,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 19803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1083:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1078:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d61726b56657269667941646472657373",
                      "id": 19805,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1088:19:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_5809d430f8281dd0a6ad5fb3d9b1d7e9d5297d6dfbef6d542c3f687c4c9414e6",
                        "typeString": "literal_string \"markVerifyAddress\""
                      },
                      "value": "markVerifyAddress"
                    },
                    "src": "1078:29:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19807,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:29:90"
                },
                {
                  "expression": {
                    "id": 19814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19808,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1117:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19810,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 19809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1124:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1117:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19811,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1129:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19812,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1129:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19813,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1129:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1117:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19815,
                  "nodeType": "ExpressionStatement",
                  "src": "1117:40:90"
                },
                {
                  "expression": {
                    "id": 19820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19816,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "1168:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19818,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 19817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1173:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1168:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "747265617375726556657269667941646472657373",
                      "id": 19819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1178:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_02857dbdb80ce598b5734f3ddf0201cb4adb883ed2aec9b6862cae1c0d47e68d",
                        "typeString": "literal_string \"treasureVerifyAddress\""
                      },
                      "value": "treasureVerifyAddress"
                    },
                    "src": "1168:33:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19821,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:33:90"
                },
                {
                  "expression": {
                    "id": 19828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19822,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1211:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19824,
                      "indexExpression": {
                        "hexValue": "34",
                        "id": 19823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1218:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_4_by_1",
                          "typeString": "int_const 4"
                        },
                        "value": "4"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1211:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19825,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1223:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1223:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1223:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1211:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19829,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:40:90"
                },
                {
                  "expression": {
                    "id": 19834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19830,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19737,
                        "src": "1262:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19832,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 19831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1267:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1262:7:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7265736f7572636556657269667941646472657373",
                      "id": 19833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1272:23:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_78feae2985db2067b0dc32697212d32316ae9837a2960512c2e983e19d445160",
                        "typeString": "literal_string \"resourceVerifyAddress\""
                      },
                      "value": "resourceVerifyAddress"
                    },
                    "src": "1262:33:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19835,
                  "nodeType": "ExpressionStatement",
                  "src": "1262:33:90"
                },
                {
                  "expression": {
                    "id": 19842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19836,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19741,
                        "src": "1305:6:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19838,
                      "indexExpression": {
                        "hexValue": "35",
                        "id": 19837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1312:1:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1305:9:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19839,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1317:8:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1317:20:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19841,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ADDRESS",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 503,
                      "src": "1317:28:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1305:40:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19843,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:40:90"
                }
              ]
            },
            "baseFunctions": [
              24512
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "595:9:90",
            "overrides": {
              "id": 19734,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "643:8:90"
            },
            "parameters": {
              "id": 19733,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "604:2:90"
            },
            "returnParameters": {
              "id": 19742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19737,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "685:4:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 19845,
                  "src": "669:20:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19735,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "669:6:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 19736,
                    "nodeType": "ArrayTypeName",
                    "src": "669:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19741,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "721:6:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 19845,
                  "src": "691:36:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19739,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 19738,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "691:20:90"
                      },
                      "referencedDeclaration": 521,
                      "src": "691:20:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 19740,
                    "nodeType": "ArrayTypeName",
                    "src": "691:22:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "668:60:90"
            },
            "scope": 19920,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19871,
            "nodeType": "FunctionDefinition",
            "src": "1358:412:90",
            "nodes": [],
            "body": {
              "id": 19870,
              "nodeType": "Block",
              "src": "1406:364:90",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19852,
                        "name": "SingletonID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1433:11:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 19855,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1486:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19856,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "open",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19709,
                            "src": "1486:15:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "expression": {
                              "id": 19857,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1519:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19858,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19711,
                            "src": "1519:28:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 19859,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1565:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19860,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "moveVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19713,
                            "src": "1565:28:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 19861,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1611:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19862,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "markVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19715,
                            "src": "1611:28:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 19863,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1657:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19864,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "treasureVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19717,
                            "src": "1657:32:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 19865,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19848,
                              "src": "1707:10:90",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                                "typeString": "struct ZKConfig memory"
                              }
                            },
                            "id": 19866,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "resourceVerifyAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19719,
                            "src": "1707:32:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 19853,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1458:3:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1458:10:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1458:295:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19851,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19871,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "1416:3:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 19868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1416:347:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19869,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:347:90"
                }
              ]
            },
            "functionSelector": "fc93190f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1367:3:90",
            "parameters": {
              "id": 19849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19848,
                  "mutability": "mutable",
                  "name": "moveConfig",
                  "nameLocation": "1387:10:90",
                  "nodeType": "VariableDeclaration",
                  "scope": 19871,
                  "src": "1371:26:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 19847,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19846,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19720,
                      "src": "1371:8:90"
                    },
                    "referencedDeclaration": 19720,
                    "src": "1371:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$19720_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1370:28:90"
            },
            "returnParameters": {
              "id": 19850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1406:0:90"
            },
            "scope": 19920,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19919,
            "nodeType": "FunctionDefinition",
            "src": "1776:561:90",
            "nodes": [],
            "body": {
              "id": 19918,
              "nodeType": "Block",
              "src": "1834:503:90",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    19878,
                    19880,
                    19882,
                    19884,
                    19886,
                    19888
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19878,
                      "mutability": "mutable",
                      "name": "open",
                      "nameLocation": "1850:4:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "1845:9:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 19877,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1845:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19880,
                      "mutability": "mutable",
                      "name": "initVerifyAddress",
                      "nameLocation": "1876:17:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "1868:25:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19879,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1868:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19882,
                      "mutability": "mutable",
                      "name": "moveVerifyAddress",
                      "nameLocation": "1915:17:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "1907:25:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19881,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1907:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19884,
                      "mutability": "mutable",
                      "name": "markVerifyAddress",
                      "nameLocation": "1954:17:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "1946:25:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19883,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1946:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19886,
                      "mutability": "mutable",
                      "name": "treasureVerifyAddress",
                      "nameLocation": "1993:21:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "1985:29:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19885,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1985:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19888,
                      "mutability": "mutable",
                      "name": "resourceVerifyAddress",
                      "nameLocation": "2036:21:90",
                      "nodeType": "VariableDeclaration",
                      "scope": 19918,
                      "src": "2028:29:90",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 19887,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2028:7:90",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19908,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19892,
                            "name": "SingletonID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "2101:11:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19891,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2089:11:90",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 19893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2089:24:90",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 19895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2132:4:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bool_$",
                              "typeString": "type(bool)"
                            },
                            "typeName": {
                              "id": 19894,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2132:4:90",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19897,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2138:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19896,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2138:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19899,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2147:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19898,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2147:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19901,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2156:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19900,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2156:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2165:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19902,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2165:7:90",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19905,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2174:7:90",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 19904,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2174:7:90",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 19906,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2131:51:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_bool_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$_t_type$_t_address_$_$",
                          "typeString": "tuple(type(bool),type(address),type(address),type(address),type(address),type(address))"
                        }
                      ],
                      "expression": {
                        "id": 19889,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "2061:3:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 19890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "2061:10:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 19907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2061:135:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$_t_address_payable_$",
                      "typeString": "tuple(bool,address payable,address payable,address payable,address payable,address payable)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1844:352:90"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19910,
                        "name": "open",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19878,
                        "src": "2222:4:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 19911,
                        "name": "initVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19880,
                        "src": "2228:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19912,
                        "name": "moveVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19882,
                        "src": "2247:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19913,
                        "name": "markVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19884,
                        "src": "2266:17:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19914,
                        "name": "treasureVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19886,
                        "src": "2285:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 19915,
                        "name": "resourceVerifyAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19888,
                        "src": "2308:21:90",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19909,
                      "name": "ZKConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19720,
                      "src": "2213:8:90",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ZKConfig_$19720_storage_ptr_$",
                        "typeString": "type(struct ZKConfig storage pointer)"
                      }
                    },
                    "id": 19916,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:117:90",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                      "typeString": "struct ZKConfig memory"
                    }
                  },
                  "functionReturnParameters": 19876,
                  "id": 19917,
                  "nodeType": "Return",
                  "src": "2206:124:90"
                }
              ]
            },
            "functionSelector": "20965255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1785:8:90",
            "parameters": {
              "id": 19872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1793:2:90"
            },
            "returnParameters": {
              "id": 19876,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19875,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19919,
                  "src": "1817:15:90",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ZKConfig_$19720_memory_ptr",
                    "typeString": "struct ZKConfig"
                  },
                  "typeName": {
                    "id": 19874,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19873,
                      "name": "ZKConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19720,
                      "src": "1817:8:90"
                    },
                    "referencedDeclaration": 19720,
                    "src": "1817:8:90",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ZKConfig_$19720_storage_ptr",
                      "typeString": "struct ZKConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1816:17:90"
            },
            "scope": 19920,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19721,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "506:13:90"
            },
            "id": 19722,
            "nodeType": "InheritanceSpecifier",
            "src": "506:13:90"
          }
        ],
        "canonicalName": "ZKConfigComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          19920,
          220,
          24327,
          24601,
          2086,
          26437,
          26873,
          26313,
          24563,
          26834,
          2129,
          26447
        ],
        "name": "ZKConfigComponent",
        "nameLocation": "485:17:90",
        "scope": 19921,
        "usedErrors": [
          20,
          24252,
          26870,
          26872
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 90
}