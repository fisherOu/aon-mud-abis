{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "initPoints",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "increaseCooldown",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "maxPoints",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "maxDistance",
              "type": "uint64"
            }
          ],
          "internalType": "struct MoveConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint64",
              "name": "initPoints",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "increaseCooldown",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "maxPoints",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "maxDistance",
              "type": "uint64"
            }
          ],
          "internalType": "struct MoveConfig",
          "name": "moveConfig",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "400:1394:104:-:0;;;452:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;493:5;242:33;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;452:54:104;400:1394;;1203:207:33;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:33;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:33;-1:-1:-1;;;;;1386:17:33;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:33;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:33;:10;-1:-1:-1;;;;;422:22:33;;418:54;;453:19;;-1:-1:-1;;;453:19:33;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:242::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:242;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:34:-;186:49;;242:159::o;647:111:33:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:33;;647:111;-1:-1:-1;647:111:33:o;14:290:242:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:242;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:242:o;309:274::-;400:1394:104;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "400:1394:104:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:395;;;:::i;:::-;;;;;;278:13:242;;229:18;274:22;;;256:41;;357:4;345:17;;;339:24;335:33;;313:20;;;306:63;429:4;417:17;;;411:24;407:33;;385:20;;;378:63;501:4;489:17;;;483:24;479:33;457:20;;;450:63;;;;206:3;191:19;;14:505;1397:395:104;;;;;;;;870:20:0;;;;;;;;;;;;700:42:242;688:55;;;670:74;;658:2;643:18;870:20:0;524:226:242;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;:::-;;955:144:6;;;;;;:::i;:::-;;:::i;512:568:104:-;;;:::i;:::-;;;;;;;;:::i;1086:305::-;;;;;;:::i;:::-;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;5698:14:242;;5691:22;5673:41;;5661:2;5646:18;440:168:6;5533:187:242;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:32:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;7046:25:242;;;7034:2;7019:18;1052:17:0;6900:177:242;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;514:113:32:-;;;;;;:::i;:::-;;:::i;1397:395:104:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:24:104;89:5:9;1616:11:104;:24::i;:::-;1588:116;;;;;;;;;;;;:::i;:::-;1721:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1397:395:104:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;512:568:104:-;676:15;;;689:1;676:15;;;;;;;;;595:20;;;;676:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;710:29:104;;;737:1;710:29;;;;;;;;;669:22;;-1:-1:-1;710:29:104;;;;;;;;;;-1:-1:-1;710:29:104;701:38;;750:22;;;;;;;;;;;;;;;;;:4;755:1;750:7;;;;;;;;:::i;:::-;;;;;;:22;;;;794:27;782:6;789:1;782:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;832:28;;;;;;;;;;;;;;;;;:4;837:1;832:7;;;;;;;;:::i;:::-;;;;;;:28;;;;882:27;870:6;877:1;870:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;920:21;;;;;;;;;;;;;;;;;:4;925:1;920:7;;;;;;;;:::i;:::-;;;;;;:21;;;;963:27;951:6;958:1;951:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;1001:23;;;;;;;;;;;;;;;;;:4;1006:1;1001:7;;;;;;;;:::i;:::-;;;;;;:23;;;;1046:27;1034:6;1041:1;1034:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;512:568:104;;:::o;1086:305::-;1146:238;89:5:9;1216:10:104;:21;;;1255:10;:27;;;1300:10;:20;;;1338:10;:22;;;1188:186;;;;;;;;;;8703:18:242;8748:15;;;8730:34;;8800:15;;;8795:2;8780:18;;8773:43;8852:15;;;8847:2;8832:18;;8825:43;8904:15;;;8899:2;8884:18;;8877:43;8680:3;8665:19;;8470:456;1188:186:104;;;;;;;;;;;;;1146:3;:238::i;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:32:-;424:7;450:8;186:49:34;722:29:33;;;;647:111;450:8:32;443:15;;378:87;:::o;1302:137:0:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9105:74:242::0;9195:18;;;9188:34;;;;1384:31:0::1;::::0;9078:18:242;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;514:113:32:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:32::1;612:7;593:18;:27::i;242:159:34:-:0;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;7046:25:242;;;4366:5:0;;;;;4359:43;;7019:18:242;;4359:51:0;6900:177:242;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:33:-;186:49:34;1359:7:33;;1338:38;;1172:18;;1182:7;;186:49:34;;1338:38:33;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;755:632:242;926:2;978:21;;;1048:13;;951:18;;;1070:22;;;897:4;;926:2;1149:15;;;;1123:2;1108:18;;;897:4;1192:169;1206:6;1203:1;1200:13;1192:169;;;1267:13;;1255:26;;1336:15;;;;1301:12;;;;1228:1;1221:9;1192:169;;;-1:-1:-1;1378:3:242;;755:632;-1:-1:-1;;;;;;755:632:242:o;1392:180::-;1451:6;1504:2;1492:9;1483:7;1479:23;1475:32;1472:52;;;1520:1;1517;1510:12;1472:52;-1:-1:-1;1543:23:242;;1392:180;-1:-1:-1;1392:180:242:o;1577:309::-;1636:6;1689:2;1677:9;1668:7;1664:23;1660:32;1657:52;;;1705:1;1702;1695:12;1657:52;1744:9;1731:23;1794:42;1787:5;1783:54;1776:5;1773:65;1763:93;;1852:1;1849;1842:12;1763:93;1875:5;1577:309;-1:-1:-1;;;1577:309:242:o;1891:531::-;1933:3;1971:5;1965:12;1998:6;1993:3;1986:19;2023:1;2033:162;2047:6;2044:1;2041:13;2033:162;;;2109:4;2165:13;;;2161:22;;2155:29;2137:11;;;2133:20;;2126:59;2062:12;2033:162;;;2213:6;2210:1;2207:13;2204:87;;;2279:1;2272:4;2263:6;2258:3;2254:16;2250:27;2243:38;2204:87;-1:-1:-1;2336:2:242;2324:15;2341:66;2320:88;2311:98;;;;2411:4;2307:109;;1891:531;-1:-1:-1;;1891:531:242:o;2427:184::-;2479:77;2476:1;2469:88;2576:4;2573:1;2566:15;2600:4;2597:1;2590:15;2616:1660;2869:4;2917:2;2906:9;2902:18;2947:2;2936:9;2929:21;2970:6;3005;2999:13;3036:6;3028;3021:22;3074:2;3063:9;3059:18;3052:25;;3136:2;3126:6;3123:1;3119:14;3108:9;3104:30;3100:39;3086:53;;3158:4;3197:2;3189:6;3185:15;3218:1;3228:314;3242:6;3239:1;3236:13;3228:314;;;3331:66;3319:9;3311:6;3307:22;3303:95;3298:3;3291:108;3422:40;3455:6;3446;3440:13;3422:40;:::i;:::-;3412:50;-1:-1:-1;3520:12:242;;;;3485:15;;;;3264:1;3257:9;3228:314;;;-1:-1:-1;;3578:22:242;;;3558:18;;;3551:50;3654:13;;3676:24;;;3758:15;;;;3718;;;-1:-1:-1;3654:13:242;-1:-1:-1;3793:1:242;3803:445;3819:8;3814:3;3811:17;3803:445;;;3890:8;3884:15;3929:2;3925;3922:10;3912:218;;3974:77;3971:1;3964:88;4079:4;4076:1;4069:15;4111:4;4108:1;4101:15;3912:218;4143:17;;4221;;;;4182:14;;;;3847:1;3838:11;3803:445;;;-1:-1:-1;4265:5:242;;2616:1660;-1:-1:-1;;;;;;;2616:1660:242:o;4281:184::-;4333:77;4330:1;4323:88;4430:4;4427:1;4420:15;4454:4;4451:1;4444:15;4470:129;4555:18;4548:5;4544:30;4537:5;4534:41;4524:69;;4589:1;4586;4579:12;4604:924;4692:6;4745:3;4733:9;4724:7;4720:23;4716:33;4713:53;;;4762:1;4759;4752:12;4713:53;4795:2;4789:9;4837:3;4829:6;4825:16;4907:6;4895:10;4892:22;4871:18;4859:10;4856:34;4853:62;4850:88;;;4918:18;;:::i;:::-;4954:2;4947:22;4991:23;;5023:30;4991:23;5023:30;:::i;:::-;5062:21;;5135:2;5120:18;;5107:32;5148;5107;5148;:::i;:::-;5208:2;5196:15;;5189:32;5273:2;5258:18;;5245:32;5286;5245;5286;:::i;:::-;5346:2;5334:15;;5327:32;5411:2;5396:18;;5383:32;5424;5383;5424;:::i;:::-;5484:2;5472:15;;5465:32;5476:6;4604:924;-1:-1:-1;;;4604:924:242:o;5725:777::-;5767:5;5820:3;5813:4;5805:6;5801:17;5797:27;5787:55;;5838:1;5835;5828:12;5787:55;5874:6;5861:20;5900:18;5937:2;5933;5930:10;5927:36;;;5943:18;;:::i;:::-;6077:2;6071:9;6139:4;6131:13;;5982:66;6127:22;;;6151:2;6123:31;6119:40;6107:53;;;6175:18;;;6195:22;;;6172:46;6169:72;;;6221:18;;:::i;:::-;6261:10;6257:2;6250:22;6296:2;6288:6;6281:18;6342:3;6335:4;6330:2;6322:6;6318:15;6314:26;6311:35;6308:55;;;6359:1;6356;6349:12;6308:55;6423:2;6416:4;6408:6;6404:17;6397:4;6389:6;6385:17;6372:54;6470:1;6463:4;6458:2;6450:6;6446:15;6442:26;6435:37;6490:6;6481:15;;;;;;5725:777;;;;:::o;6507:388::-;6584:6;6592;6645:2;6633:9;6624:7;6620:23;6616:32;6613:52;;;6661:1;6658;6651:12;6613:52;6697:9;6684:23;6674:33;;6758:2;6747:9;6743:18;6730:32;6785:18;6777:6;6774:30;6771:50;;;6817:1;6814;6807:12;6771:50;6840:49;6881:7;6872:6;6861:9;6857:22;6840:49;:::i;:::-;6830:59;;;6507:388;;;;;:::o;7082:320::-;7150:6;7203:2;7191:9;7182:7;7178:23;7174:32;7171:52;;;7219:1;7216;7209:12;7171:52;7259:9;7246:23;7292:18;7284:6;7281:30;7278:50;;;7324:1;7321;7314:12;7278:50;7347:49;7388:7;7379:6;7368:9;7364:22;7347:49;:::i;:::-;7337:59;7082:320;-1:-1:-1;;;;7082:320:242:o;7407:218::-;7554:2;7543:9;7536:21;7517:4;7574:45;7615:2;7604:9;7600:18;7592:6;7574:45;:::i;7630:646::-;7723:6;7731;7739;7747;7800:3;7788:9;7779:7;7775:23;7771:33;7768:53;;;7817:1;7814;7807:12;7768:53;7849:9;7843:16;7868:30;7892:5;7868:30;:::i;:::-;7967:2;7952:18;;7946:25;7917:5;;-1:-1:-1;7980:32:242;7946:25;7980:32;:::i;:::-;8083:2;8068:18;;8062:25;8031:7;;-1:-1:-1;8096:32:242;8062:25;8096:32;:::i;:::-;8199:2;8184:18;;8178:25;8147:7;;-1:-1:-1;8212:32:242;8178:25;8212:32;:::i;:::-;7630:646;;;;-1:-1:-1;7630:646:242;;-1:-1:-1;;7630:646:242:o;8281:184::-;8333:77;8330:1;8323:88;8430:4;8427:1;8420:15;8454:4;8451:1;8444:15;9233:437;9312:1;9308:12;;;;9355;;;9376:61;;9430:4;9422:6;9418:17;9408:27;;9376:61;9483:2;9475:6;9472:14;9452:18;9449:38;9446:218;;9520:77;9517:1;9510:88;9621:4;9618:1;9611:15;9649:4;9646:1;9639:15;9446:218;;9233:437;;;:::o;9675:289::-;9850:6;9839:9;9832:25;9893:2;9888;9877:9;9873:18;9866:30;9813:4;9913:45;9954:2;9943:9;9939:18;9931:6;9913:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue()": "20965255",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set((uint64,uint64,uint64,uint64))": "6cfb0e75",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"initPoints\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"increaseCooldown\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPoints\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxDistance\",\"type\":\"uint64\"}],\"internalType\":\"struct MoveConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"initPoints\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"increaseCooldown\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPoints\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxDistance\",\"type\":\"uint64\"}],\"internalType\":\"struct MoveConfig\",\"name\":\"moveConfig\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/MoveConfigComponent.sol\":\"MoveConfigComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":expension/=src/expension/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\",\":verifiers/=src/verifiers/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/SingletonID.sol\":{\"keccak256\":\"0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9\",\"dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/MoveConfigComponent.sol\":{\"keccak256\":\"0xb775f911447d2714129f20dd405e2029752ea2a0f6da7d04e4fddbd8dd8369d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://875333933f470890047f20434f406b3f84496b45b6b0b4e8b179e15de55b681c\",\"dweb:/ipfs/QmPePCppCpxkXWxzYQA2ZQcA34nezGri9fv6SUrhsAiuae\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct MoveConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "initPoints",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "increaseCooldown",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxPoints",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxDistance",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "struct MoveConfig",
              "name": "moveConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint64",
                  "name": "initPoints",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "increaseCooldown",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxPoints",
                  "type": "uint64"
                },
                {
                  "internalType": "uint64",
                  "name": "maxDistance",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":expension/=src/expension/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/",
        ":verifiers/=src/verifiers/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/MoveConfigComponent.sol": "MoveConfigComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/SingletonID.sol": {
        "keccak256": "0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2",
        "urls": [
          "bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9",
          "dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/MoveConfigComponent.sol": {
        "keccak256": "0xb775f911447d2714129f20dd405e2029752ea2a0f6da7d04e4fddbd8dd8369d2",
        "urls": [
          "bzz-raw://875333933f470890047f20434f406b3f84496b45b6b0b4e8b179e15de55b681c",
          "dweb:/ipfs/QmPePCppCpxkXWxzYQA2ZQcA34nezGri9fv6SUrhsAiuae"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/MoveConfigComponent.sol",
    "id": 10336,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        10168
      ],
      "LibTypes": [
        522
      ],
      "MoveConfig": [
        10177
      ],
      "MoveConfigComponent": [
        10335
      ],
      "SingletonID": [
        527
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1763:104",
    "nodes": [
      {
        "id": 10154,
        "nodeType": "PragmaDirective",
        "src": "32:24:104",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 10156,
        "nodeType": "ImportDirective",
        "src": "57:55:104",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10336,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10155,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "65:13:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10158,
        "nodeType": "ImportDirective",
        "src": "113:45:104",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10336,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10157,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "121:8:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10160,
        "nodeType": "ImportDirective",
        "src": "159:51:104",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/SingletonID.sol",
        "file": "solecs/SingletonID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 10336,
        "sourceUnit": 528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 10159,
              "name": "SingletonID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 527,
              "src": "167:11:104",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 10168,
        "nodeType": "VariableDeclaration",
        "src": "212:64:104",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "229:2:104",
        "scope": 10336,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 10161,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "212:7:104",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e4d6f7665436f6e666967",
                  "id": 10165,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "252:22:104",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_dc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f7",
                    "typeString": "literal_string \"component.MoveConfig\""
                  },
                  "value": "component.MoveConfig"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_dc602e66a6d8c84d0c8d6c4292d80341393a1e04ff02909a12718a4216d3a9f7",
                    "typeString": "literal_string \"component.MoveConfig\""
                  }
                ],
                "id": 10164,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "242:9:104",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 10166,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "242:33:104",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 10163,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "234:7:104",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 10162,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "234:7:104",
              "typeDescriptions": {}
            }
          },
          "id": 10167,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "234:42:104",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 10177,
        "nodeType": "StructDefinition",
        "src": "279:119:104",
        "nodes": [],
        "canonicalName": "MoveConfig",
        "members": [
          {
            "constant": false,
            "id": 10170,
            "mutability": "mutable",
            "name": "initPoints",
            "nameLocation": "310:10:104",
            "nodeType": "VariableDeclaration",
            "scope": 10177,
            "src": "303:17:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 10169,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "303:6:104",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10172,
            "mutability": "mutable",
            "name": "increaseCooldown",
            "nameLocation": "333:16:104",
            "nodeType": "VariableDeclaration",
            "scope": 10177,
            "src": "326:23:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 10171,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "326:6:104",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10174,
            "mutability": "mutable",
            "name": "maxPoints",
            "nameLocation": "362:9:104",
            "nodeType": "VariableDeclaration",
            "scope": 10177,
            "src": "355:16:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 10173,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "355:6:104",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10176,
            "mutability": "mutable",
            "name": "maxDistance",
            "nameLocation": "384:11:104",
            "nodeType": "VariableDeclaration",
            "scope": 10177,
            "src": "377:18:104",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 10175,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "377:6:104",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "MoveConfig",
        "nameLocation": "286:10:104",
        "scope": 10336,
        "visibility": "public"
      },
      {
        "id": 10335,
        "nodeType": "ContractDefinition",
        "src": "400:1394:104",
        "nodes": [
          {
            "id": 10189,
            "nodeType": "FunctionDefinition",
            "src": "452:54:104",
            "nodes": [],
            "body": {
              "id": 10188,
              "nodeType": "Block",
              "src": "504:2:104",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10184,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10181,
                    "src": "493:5:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 10185,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10168,
                    "src": "500:2:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10186,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10183,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "479:13:104"
                },
                "nodeType": "ModifierInvocation",
                "src": "479:24:104"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 10182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10181,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "472:5:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 10189,
                  "src": "464:13:104",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "464:7:104",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "463:15:104"
            },
            "returnParameters": {
              "id": 10187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "504:0:104"
            },
            "scope": 10335,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10274,
            "nodeType": "FunctionDefinition",
            "src": "512:568:104",
            "nodes": [],
            "body": {
              "id": 10273,
              "nodeType": "Block",
              "src": "659:421:104",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 10206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10200,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10194,
                      "src": "669:4:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 10204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "689:1:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 10203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "676:12:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 10201,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "680:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 10202,
                          "nodeType": "ArrayTypeName",
                          "src": "680:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 10205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "676:15:104",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "669:22:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 10207,
                  "nodeType": "ExpressionStatement",
                  "src": "669:22:104"
                },
                {
                  "expression": {
                    "id": 10215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10208,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10198,
                      "src": "701:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "34",
                          "id": 10213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "737:1:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          },
                          "value": "4"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_4_by_1",
                            "typeString": "int_const 4"
                          }
                        ],
                        "id": 10212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "710:26:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 10210,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 10209,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "714:20:104"
                            },
                            "referencedDeclaration": 521,
                            "src": "714:20:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 10211,
                          "nodeType": "ArrayTypeName",
                          "src": "714:22:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 10214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "710:29:104",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "701:38:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 10216,
                  "nodeType": "ExpressionStatement",
                  "src": "701:38:104"
                },
                {
                  "expression": {
                    "id": 10221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10217,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "750:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 10219,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 10218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "755:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "750:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "696e6974506f696e7473",
                      "id": 10220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "760:12:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_b07b461f4260cb445e674b9673de9953f1ca6b56a64793a8e34d04e17aa6acf2",
                        "typeString": "literal_string \"initPoints\""
                      },
                      "value": "initPoints"
                    },
                    "src": "750:22:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10222,
                  "nodeType": "ExpressionStatement",
                  "src": "750:22:104"
                },
                {
                  "expression": {
                    "id": 10229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10223,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "782:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 10225,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 10224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "789:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "782:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 10226,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "794:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 10227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "794:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 10228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "794:27:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "782:39:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 10230,
                  "nodeType": "ExpressionStatement",
                  "src": "782:39:104"
                },
                {
                  "expression": {
                    "id": 10235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10231,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "832:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 10233,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 10232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "837:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "832:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "696e637265617365436f6f6c646f776e",
                      "id": 10234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "842:18:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_90070d7a1343b3dcee27dbe51f4d273b96099691cb9662e305269e937d51079b",
                        "typeString": "literal_string \"increaseCooldown\""
                      },
                      "value": "increaseCooldown"
                    },
                    "src": "832:28:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10236,
                  "nodeType": "ExpressionStatement",
                  "src": "832:28:104"
                },
                {
                  "expression": {
                    "id": 10243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10237,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "870:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 10239,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 10238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "877:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "870:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 10240,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "882:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 10241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "882:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 10242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "882:27:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "870:39:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 10244,
                  "nodeType": "ExpressionStatement",
                  "src": "870:39:104"
                },
                {
                  "expression": {
                    "id": 10249,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10245,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "920:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 10247,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 10246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "925:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "920:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d6178506f696e7473",
                      "id": 10248,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "930:11:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_1b73226c460c7e853a379d47a7f545f57c07dc149baa3b9db57f24bb4ec6aeb7",
                        "typeString": "literal_string \"maxPoints\""
                      },
                      "value": "maxPoints"
                    },
                    "src": "920:21:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10250,
                  "nodeType": "ExpressionStatement",
                  "src": "920:21:104"
                },
                {
                  "expression": {
                    "id": 10257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10251,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "951:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 10253,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 10252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "958:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "951:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 10254,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "963:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 10255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "963:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 10256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "963:27:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "951:39:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 10258,
                  "nodeType": "ExpressionStatement",
                  "src": "951:39:104"
                },
                {
                  "expression": {
                    "id": 10263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10259,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "1001:4:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 10261,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 10260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1006:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1001:7:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "6d617844697374616e6365",
                      "id": 10262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1011:13:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_3953566fb37ef0b38a5157f6d07fcd64b9b6fcf9d6afb80c9a5d5bb02c17fe00",
                        "typeString": "literal_string \"maxDistance\""
                      },
                      "value": "maxDistance"
                    },
                    "src": "1001:23:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 10264,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:23:104"
                },
                {
                  "expression": {
                    "id": 10271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10265,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "1034:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 10267,
                      "indexExpression": {
                        "hexValue": "33",
                        "id": 10266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1041:1:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1034:9:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 10268,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "1046:8:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 10269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "1046:20:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 10270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "1046:27:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "1034:39:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 10272,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:39:104"
                }
              ]
            },
            "baseFunctions": [
              1267
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "521:9:104",
            "overrides": {
              "id": 10191,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "569:8:104"
            },
            "parameters": {
              "id": 10190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "530:2:104"
            },
            "returnParameters": {
              "id": 10199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "611:4:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 10274,
                  "src": "595:20:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10192,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "595:6:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 10193,
                    "nodeType": "ArrayTypeName",
                    "src": "595:8:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10198,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "647:6:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 10274,
                  "src": "617:36:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10196,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10195,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "617:20:104"
                      },
                      "referencedDeclaration": 521,
                      "src": "617:20:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 10197,
                    "nodeType": "ArrayTypeName",
                    "src": "617:22:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "594:60:104"
            },
            "scope": 10335,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10296,
            "nodeType": "FunctionDefinition",
            "src": "1086:305:104",
            "nodes": [],
            "body": {
              "id": 10295,
              "nodeType": "Block",
              "src": "1136:255:104",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10281,
                        "name": "SingletonID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "1163:11:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 10284,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "1216:10:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                                "typeString": "struct MoveConfig memory"
                              }
                            },
                            "id": 10285,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "initPoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10170,
                            "src": "1216:21:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 10286,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "1255:10:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                                "typeString": "struct MoveConfig memory"
                              }
                            },
                            "id": 10287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "increaseCooldown",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10172,
                            "src": "1255:27:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 10288,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "1300:10:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                                "typeString": "struct MoveConfig memory"
                              }
                            },
                            "id": 10289,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxPoints",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10174,
                            "src": "1300:20:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          {
                            "expression": {
                              "id": 10290,
                              "name": "moveConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10277,
                              "src": "1338:10:104",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                                "typeString": "struct MoveConfig memory"
                              }
                            },
                            "id": 10291,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "maxDistance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10176,
                            "src": "1338:22:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "id": 10282,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1188:3:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 10283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "1188:10:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 10292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1188:186:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 10280,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10296,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "1146:3:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 10293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1146:238:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10294,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:238:104"
                }
              ]
            },
            "functionSelector": "6cfb0e75",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1095:3:104",
            "parameters": {
              "id": 10278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10277,
                  "mutability": "mutable",
                  "name": "moveConfig",
                  "nameLocation": "1117:10:104",
                  "nodeType": "VariableDeclaration",
                  "scope": 10296,
                  "src": "1099:28:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                    "typeString": "struct MoveConfig"
                  },
                  "typeName": {
                    "id": 10276,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10275,
                      "name": "MoveConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10177,
                      "src": "1099:10:104"
                    },
                    "referencedDeclaration": 10177,
                    "src": "1099:10:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MoveConfig_$10177_storage_ptr",
                      "typeString": "struct MoveConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1098:30:104"
            },
            "returnParameters": {
              "id": 10279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1136:0:104"
            },
            "scope": 10335,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 10334,
            "nodeType": "FunctionDefinition",
            "src": "1397:395:104",
            "nodes": [],
            "body": {
              "id": 10333,
              "nodeType": "Block",
              "src": "1457:335:104",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    10303,
                    10305,
                    10307,
                    10309
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10303,
                      "mutability": "mutable",
                      "name": "initPoints",
                      "nameLocation": "1475:10:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 10333,
                      "src": "1468:17:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 10302,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1468:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10305,
                      "mutability": "mutable",
                      "name": "increaseCooldown",
                      "nameLocation": "1506:16:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 10333,
                      "src": "1499:23:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 10304,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1499:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10307,
                      "mutability": "mutable",
                      "name": "maxPoints",
                      "nameLocation": "1543:9:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 10333,
                      "src": "1536:16:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 10306,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1536:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10309,
                      "mutability": "mutable",
                      "name": "maxDistance",
                      "nameLocation": "1573:11:104",
                      "nodeType": "VariableDeclaration",
                      "scope": 10333,
                      "src": "1566:18:104",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 10308,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1566:6:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10325,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 10313,
                            "name": "SingletonID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "1628:11:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 10312,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1616:11:104",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 10314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1616:24:104",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 10316,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1659:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 10315,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "1659:6:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 10318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1667:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 10317,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "1667:6:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 10320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1675:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 10319,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "1675:6:104",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 10322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1683:6:104",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 10321,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "1683:6:104",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 10323,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1658:32:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$",
                          "typeString": "tuple(type(uint64),type(uint64),type(uint64),type(uint64))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$_t_type$_t_uint64_$_$",
                          "typeString": "tuple(type(uint64),type(uint64),type(uint64),type(uint64))"
                        }
                      ],
                      "expression": {
                        "id": 10310,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1588:3:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 10311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1588:10:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 10324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:116:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint64_$_t_uint64_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint64,uint64,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1467:237:104"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10327,
                        "name": "initPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10303,
                        "src": "1732:10:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 10328,
                        "name": "increaseCooldown",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10305,
                        "src": "1744:16:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 10329,
                        "name": "maxPoints",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10307,
                        "src": "1762:9:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 10330,
                        "name": "maxDistance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10309,
                        "src": "1773:11:104",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 10326,
                      "name": "MoveConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10177,
                      "src": "1721:10:104",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MoveConfig_$10177_storage_ptr_$",
                        "typeString": "type(struct MoveConfig storage pointer)"
                      }
                    },
                    "id": 10331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1721:64:104",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                      "typeString": "struct MoveConfig memory"
                    }
                  },
                  "functionReturnParameters": 10301,
                  "id": 10332,
                  "nodeType": "Return",
                  "src": "1714:71:104"
                }
              ]
            },
            "functionSelector": "20965255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1406:8:104",
            "parameters": {
              "id": 10297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1414:2:104"
            },
            "returnParameters": {
              "id": 10301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10300,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10334,
                  "src": "1438:17:104",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MoveConfig_$10177_memory_ptr",
                    "typeString": "struct MoveConfig"
                  },
                  "typeName": {
                    "id": 10299,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10298,
                      "name": "MoveConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 10177,
                      "src": "1438:10:104"
                    },
                    "referencedDeclaration": 10177,
                    "src": "1438:10:104",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MoveConfig_$10177_storage_ptr",
                      "typeString": "struct MoveConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:19:104"
            },
            "scope": 10335,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10178,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "432:13:104"
            },
            "id": 10179,
            "nodeType": "InheritanceSpecifier",
            "src": "432:13:104"
          }
        ],
        "canonicalName": "MoveConfigComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          10335,
          220,
          43702,
          43906,
          2161,
          45733,
          46152,
          45609,
          1318,
          45602,
          2204,
          45743
        ],
        "name": "MoveConfigComponent",
        "nameLocation": "409:19:104",
        "scope": 10336,
        "usedErrors": [
          20,
          43627,
          46149,
          46151
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 104
}