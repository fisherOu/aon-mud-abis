{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "width",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "height",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "terrain",
              "type": "bytes"
            }
          ],
          "internalType": "struct MapConfig",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint32",
              "name": "width",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "height",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "terrain",
              "type": "bytes"
            }
          ],
          "internalType": "struct MapConfig",
          "name": "mapConfig",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "356:887:100:-:0;;;405:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;446:5;248:32;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;405:54:100;356:887;;1203:207:33;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:33;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:33;-1:-1:-1;;;;;1386:17:33;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:33;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:33;:10;-1:-1:-1;;;;;422:22:33;;418:54;;453:19;;-1:-1:-1;;;453:19:33;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:237::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:237;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:34:-;186:49;;242:159::o;647:111:33:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:33;;647:111;-1:-1:-1;647:111:33:o;14:290:237:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:237;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:237:o;309:274::-;356:887:100;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638b282947116100b2578063b361be4611610081578063bf4fe57e11610066578063bf4fe57e146102b2578063cccf7a8e146102c5578063f2fde38b146102d857600080fd5b8063b361be461461027f578063b8bc073d1461029257600080fd5b80638b2829471461023a5780638da5cb5b1461024d5780639d2c76b414610255578063af640d0f1461026857600080fd5b80634fef6a38116101095780636b122fe0116100ee5780636b122fe0146101ee57806375c0669c14610204578063861eb9051461021757600080fd5b80634fef6a38146101c85780635a9b8140146101db57600080fd5b8063209652551461013b57806330b67baa1461015957806331b933b91461019e5780634cc82215146101b3575b600080fd5b6101436102eb565b6040516101509190610ed9565b60405180910390f35b6000546101799073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610150565b6101a6610350565b6040516101509190610f1a565b6101c66101c1366004610f5e565b610384565b005b6101c66101d6366004610f77565b6103cf565b6101c66101e93660046110e0565b6104ad565b6101f66104e8565b6040516101509291906111b8565b6101c6610212366004610f77565b610708565b61022a610225366004610f77565b61073a565b6040519015158152602001610150565b6101c66102483660046112a8565b6107c5565b610179610812565b6101c6610263366004610f77565b610857565b61027160025481565b604051908152602001610150565b6101a661028d3660046112ef565b610350565b6102a56102a0366004610f5e565b610980565b6040516101509190611324565b6101c66102c0366004610f77565b610a22565b61022a6102d3366004610f5e565b610afd565b6101c66102e6366004610f77565b610b1f565b60408051606080820183526000808352602083018190529282015290808061031461060d610980565b8060200190518101906103279190611337565b6040805160608101825263ffffffff948516815293909216602084015290820152949350505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61038d3361073a565b6103c3576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103cc81610bbc565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff16331461043f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6103cc61060d8260000151836020015184604001516040516020016104d4939291906113d7565b6040516020818303038152906040526107c5565b60408051600380825260808201909252606091829190816020015b606081526020019060019003908161050357505060408051600380825260808201909252919350602082016060803683370190505090506040518060400160405280600581526020017f77696474680000000000000000000000000000000000000000000000000000008152508260008151811061058357610583611409565b6020026020010181905250600a816000815181106105a3576105a3611409565b602002602001019060218111156105bc576105bc611189565b908160218111156105cf576105cf611189565b815250506040518060400160405280600681526020017f68656967687400000000000000000000000000000000000000000000000000008152508260018151811061061c5761061c611409565b6020026020010181905250600a8160018151811061063c5761063c611409565b6020026020010190602181111561065557610655611189565b9081602181111561066857610668611189565b815250506040518060400160405280600781526020017f7465727261696e00000000000000000000000000000000000000000000000000815250826002815181106106b5576106b5611409565b6020026020010181905250600f816002815181106106d5576106d5611409565b602002602001019060218111156106ee576106ee611189565b9081602181111561070157610701611189565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806107bf5750610790610812565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b6107ce3361073a565b610804576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61080e8282610c2a565b5050565b60006108527f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146108c7576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b15801561096557600080fd5b505af1158015610979573d6000803e3d6000fd5b5050505050565b600081815260016020526040902080546060919061099d90611438565b80601f01602080910402602001604051908101604052809291908181526020018280546109c990611438565b8015610a165780601f106109eb57610100808354040283529160200191610a16565b820191906000526020600020905b8154815290600101906020018083116109f957829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610a92576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610b1690611438565b15159392505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b8f576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103cc81610cd8565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610bd391610d8c565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b59060240161094b565b60008281526001602090815260409091208251610c4992840190610dc6565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610ca2908590859060040161148b565b600060405180830381600087803b158015610cbc57600080fd5b505af1158015610cd0573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103cc928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d9890611438565b6000825580601f10610da8575050565b601f0160209004906000526020600020908101906103cc9190610e4a565b828054610dd290611438565b90600052602060002090601f016020900481019282610df45760008555610e3a565b82601f10610e0d57805160ff1916838001178555610e3a565b82800160010185558215610e3a579182015b82811115610e3a578251825591602001919060010190610e1f565b50610e46929150610e4a565b5090565b5b80821115610e465760008155600101610e4b565b60005b83811015610e7a578181015183820152602001610e62565b83811115610e89576000848401525b50505050565b60008151808452610ea7816020860160208601610e5f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600063ffffffff808451166020840152806020850151166040840152506040830151606080840152610f126080840182610e8f565b949350505050565b6020808252825182820181905260009190848201906040850190845b81811015610f5257835183529284019291840191600101610f36565b50909695505050505050565b600060208284031215610f7057600080fd5b5035919050565b600060208284031215610f8957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610fad57600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561102a5761102a610fb4565b604052919050565b63ffffffff811681146103cc57600080fd5b600067ffffffffffffffff82111561105e5761105e610fb4565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261109b57600080fd5b81356110ae6110a982611044565b610fe3565b8181528460208386010111156110c357600080fd5b816020850160208301376000918101602001919091529392505050565b6000602082840312156110f257600080fd5b813567ffffffffffffffff8082111561110a57600080fd5b908301906060828603121561111e57600080fd5b60405160608101818110838211171561113957611139610fb4565b604052823561114781611032565b8152602083013561115781611032565b602082015260408301358281111561116e57600080fd5b61117a8782860161108a565b60408301525095945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b8381101561122d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa088870301855261121b868351610e8f565b955093820193908201906001016111e1565b50508584038187015286518085528782019482019350915060005b8281101561129b57845160228110611289577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101611248565b5091979650505050505050565b600080604083850312156112bb57600080fd5b82359150602083013567ffffffffffffffff8111156112d957600080fd5b6112e58582860161108a565b9150509250929050565b60006020828403121561130157600080fd5b813567ffffffffffffffff81111561131857600080fd5b610f128482850161108a565b602081526000610fad6020830184610e8f565b60008060006060848603121561134c57600080fd5b835161135781611032565b602085015190935061136881611032565b604085015190925067ffffffffffffffff81111561138557600080fd5b8401601f8101861361139657600080fd5b80516113a46110a982611044565b8181528760208385010111156113b957600080fd5b6113ca826020830160208601610e5f565b8093505050509250925092565b600063ffffffff8086168352808516602084015250606060408301526114006060830184610e8f565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061144c57607f821691505b602082108103611485577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b828152604060208201526000610f126040830184610e8f56fea26469706673582212202efffe693d01a41a55f82b0d7f847d06f65a453c059ebb4561d07f683a5f622564736f6c634300080d0033",
    "sourceMap": "356:887:100:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:231;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;870:20:0;;;;;;;;;;;;1289:42:237;1277:55;;;1259:74;;1247:2;1232:18;870:20:0;1113:226:237;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;:::-;;955:144:6;;;;;;:::i;:::-;;:::i;865:141:100:-;;;;;;:::i;:::-;;:::i;463:398::-;;;:::i;:::-;;;;;;;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;6886:14:237;;6879:22;6861:41;;6849:2;6834:18;440:168:6;6721:187:237;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:32:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;7452:25:237;;;7440:2;7425:18;1052:17:0;7306:177:237;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;514:113:32:-;;;;;;:::i;:::-;;:::i;1010:231:100:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;1140:24:100;89:5:9;1140:11:100;:24::i;:::-;1129:61;;;;;;;;;;;;:::i;:::-;1203:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:231;-1:-1:-1;;;;1010:231:100:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;865:141:100:-;919:82;89:5:9;947:9:100;:15;;;964:9;:16;;;982:9;:17;;;936:64;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;919:3;:82::i;463:398::-;587:15;;;600:1;587:15;;;;;;;;;514:20;;;;587:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;617:29:100;;;644:1;617:29;;;;;;;;;580:22;;-1:-1:-1;617:29:100;;;;;;;;;;-1:-1:-1;617:29:100;608:38;;653:17;;;;;;;;;;;;;;;;;:4;658:1;653:7;;;;;;;;:::i;:::-;;;;;;:17;;;;688:27;676:6;683:1;676:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;722:18;;;;;;;;;;;;;;;;;:4;727:1;722:7;;;;;;;;:::i;:::-;;;;;;:18;;;;758:27;746:6;753:1;746:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;792:19;;;;;;;;;;;;;;;;;:4;797:1;792:7;;;;;;;;:::i;:::-;;;;;;:19;;;;829:27;817:6;824:1;817:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;463:398:100;;:::o;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:32:-;424:7;450:8;186:49:34;722:29:33;;;;647:111;450:8:32;443:15;;378:87;:::o;1302:137:0:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;9702:74:237::0;9792:18;;;9785:34;;;;1384:31:0::1;::::0;9675:18:237;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;514:113:32:-;186:49:34;722:29:33;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:32::1;612:7;593:18;:27::i;242:159:34:-:0;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;7452:25:237;;;4366:5:0;;;;;4359:43;;7425:18:237;;4359:51:0;7306:177:237;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:33:-;186:49:34;1359:7:33;;1338:38;;1172:18;;1182:7;;186:49:34;;1338:38:33;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:258:237;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;262:1;253:6;248:3;244:16;237:27;218:48;;14:258;;;:::o;277:316::-;318:3;356:5;350:12;383:6;378:3;371:19;399:63;455:6;448:4;443:3;439:14;432:4;425:5;421:16;399:63;:::i;:::-;507:2;495:15;512:66;491:88;482:98;;;;582:4;478:109;;277:316;-1:-1:-1;;277:316:237:o;598:510::-;781:2;770:9;763:21;744:4;803:10;868:2;859:6;853:13;849:22;844:2;833:9;829:18;822:50;936:2;930;922:6;918:15;912:22;908:31;903:2;892:9;888:18;881:59;;987:2;979:6;975:15;969:22;1029:4;1022;1011:9;1007:20;1000:34;1051:51;1097:3;1086:9;1082:19;1068:12;1051:51;:::i;:::-;1043:59;598:510;-1:-1:-1;;;;598:510:237:o;1344:632::-;1515:2;1567:21;;;1637:13;;1540:18;;;1659:22;;;1486:4;;1515:2;1738:15;;;;1712:2;1697:18;;;1486:4;1781:169;1795:6;1792:1;1789:13;1781:169;;;1856:13;;1844:26;;1925:15;;;;1890:12;;;;1817:1;1810:9;1781:169;;;-1:-1:-1;1967:3:237;;1344:632;-1:-1:-1;;;;;;1344:632:237:o;1981:180::-;2040:6;2093:2;2081:9;2072:7;2068:23;2064:32;2061:52;;;2109:1;2106;2099:12;2061:52;-1:-1:-1;2132:23:237;;1981:180;-1:-1:-1;1981:180:237:o;2166:309::-;2225:6;2278:2;2266:9;2257:7;2253:23;2249:32;2246:52;;;2294:1;2291;2284:12;2246:52;2333:9;2320:23;2383:42;2376:5;2372:54;2365:5;2362:65;2352:93;;2441:1;2438;2431:12;2352:93;2464:5;2166:309;-1:-1:-1;;;2166:309:237:o;2480:184::-;2532:77;2529:1;2522:88;2629:4;2626:1;2619:15;2653:4;2650:1;2643:15;2669:334;2740:2;2734:9;2796:2;2786:13;;2801:66;2782:86;2770:99;;2899:18;2884:34;;2920:22;;;2881:62;2878:88;;;2946:18;;:::i;:::-;2982:2;2975:22;2669:334;;-1:-1:-1;2669:334:237:o;3008:121::-;3093:10;3086:5;3082:22;3075:5;3072:33;3062:61;;3119:1;3116;3109:12;3134:245;3182:4;3215:18;3207:6;3204:30;3201:56;;;3237:18;;:::i;:::-;-1:-1:-1;3294:2:237;3282:15;3299:66;3278:88;3368:4;3274:99;;3134:245::o;3384:462::-;3426:5;3479:3;3472:4;3464:6;3460:17;3456:27;3446:55;;3497:1;3494;3487:12;3446:55;3533:6;3520:20;3564:48;3580:31;3608:2;3580:31;:::i;:::-;3564:48;:::i;:::-;3637:2;3628:7;3621:19;3683:3;3676:4;3671:2;3663:6;3659:15;3655:26;3652:35;3649:55;;;3700:1;3697;3690:12;3649:55;3765:2;3758:4;3750:6;3746:17;3739:4;3730:7;3726:18;3713:55;3813:1;3788:16;;;3806:4;3784:27;3777:38;;;;3792:7;3384:462;-1:-1:-1;;;3384:462:237:o;3851:1012::-;3937:6;3990:2;3978:9;3969:7;3965:23;3961:32;3958:52;;;4006:1;4003;3996:12;3958:52;4046:9;4033:23;4075:18;4116:2;4108:6;4105:14;4102:34;;;4132:1;4129;4122:12;4102:34;4155:22;;;;4211:4;4193:16;;;4189:27;4186:47;;;4229:1;4226;4219:12;4186:47;4262:2;4256:9;4304:4;4296:6;4292:17;4359:6;4347:10;4344:22;4339:2;4327:10;4324:18;4321:46;4318:72;;;4370:18;;:::i;:::-;4406:2;4399:22;4443:16;;4468:30;4443:16;4468:30;:::i;:::-;4507:21;;4573:2;4565:11;;4552:25;4586:32;4552:25;4586:32;:::i;:::-;4646:2;4634:15;;4627:32;4705:2;4697:11;;4684:25;4721:16;;;4718:36;;;4750:1;4747;4740:12;4718:36;4787:44;4823:7;4812:8;4808:2;4804:17;4787:44;:::i;:::-;4782:2;4770:15;;4763:69;-1:-1:-1;4774:6:237;3851:1012;-1:-1:-1;;;;;3851:1012:237:o;4868:184::-;4920:77;4917:1;4910:88;5017:4;5014:1;5007:15;5041:4;5038:1;5031:15;5057:1659;5310:4;5358:2;5347:9;5343:18;5388:2;5377:9;5370:21;5411:6;5446;5440:13;5477:6;5469;5462:22;5515:2;5504:9;5500:18;5493:25;;5577:2;5567:6;5564:1;5560:14;5549:9;5545:30;5541:39;5527:53;;5599:4;5638:2;5630:6;5626:15;5659:1;5669:313;5683:6;5680:1;5677:13;5669:313;;;5772:66;5760:9;5752:6;5748:22;5744:95;5739:3;5732:108;5863:39;5895:6;5886;5880:13;5863:39;:::i;:::-;5853:49;-1:-1:-1;5960:12:237;;;;5925:15;;;;5705:1;5698:9;5669:313;;;-1:-1:-1;;6018:22:237;;;5998:18;;;5991:50;6094:13;;6116:24;;;6198:15;;;;6158;;;-1:-1:-1;6094:13:237;-1:-1:-1;6233:1:237;6243:445;6259:8;6254:3;6251:17;6243:445;;;6330:8;6324:15;6369:2;6365;6362:10;6352:218;;6414:77;6411:1;6404:88;6519:4;6516:1;6509:15;6551:4;6548:1;6541:15;6352:218;6583:17;;6661;;;;6622:14;;;;6287:1;6278:11;6243:445;;;-1:-1:-1;6705:5:237;;5057:1659;-1:-1:-1;;;;;;;5057:1659:237:o;6913:388::-;6990:6;6998;7051:2;7039:9;7030:7;7026:23;7022:32;7019:52;;;7067:1;7064;7057:12;7019:52;7103:9;7090:23;7080:33;;7164:2;7153:9;7149:18;7136:32;7191:18;7183:6;7180:30;7177:50;;;7223:1;7220;7213:12;7177:50;7246:49;7287:7;7278:6;7267:9;7263:22;7246:49;:::i;:::-;7236:59;;;6913:388;;;;;:::o;7488:320::-;7556:6;7609:2;7597:9;7588:7;7584:23;7580:32;7577:52;;;7625:1;7622;7615:12;7577:52;7665:9;7652:23;7698:18;7690:6;7687:30;7684:50;;;7730:1;7727;7720:12;7684:50;7753:49;7794:7;7785:6;7774:9;7770:22;7753:49;:::i;7813:217::-;7960:2;7949:9;7942:21;7923:4;7980:44;8020:2;8009:9;8005:18;7997:6;7980:44;:::i;8035:892::-;8130:6;8138;8146;8199:2;8187:9;8178:7;8174:23;8170:32;8167:52;;;8215:1;8212;8205:12;8167:52;8247:9;8241:16;8266:30;8290:5;8266:30;:::i;:::-;8365:2;8350:18;;8344:25;8315:5;;-1:-1:-1;8378:32:237;8344:25;8378:32;:::i;:::-;8480:2;8465:18;;8459:25;8429:7;;-1:-1:-1;8507:18:237;8496:30;;8493:50;;;8539:1;8536;8529:12;8493:50;8562:22;;8615:4;8607:13;;8603:27;-1:-1:-1;8593:55:237;;8644:1;8641;8634:12;8593:55;8673:2;8667:9;8698:48;8714:31;8742:2;8714:31;:::i;8698:48::-;8769:2;8762:5;8755:17;8809:7;8804:2;8799;8795;8791:11;8787:20;8784:33;8781:53;;;8830:1;8827;8820:12;8781:53;8843:54;8894:2;8889;8882:5;8878:14;8873:2;8869;8865:11;8843:54;:::i;:::-;8916:5;8906:15;;;;;8035:892;;;;;:::o;8932:402::-;9094:4;9123:10;9172:2;9164:6;9160:15;9149:9;9142:34;9224:2;9216:6;9212:15;9207:2;9196:9;9192:18;9185:43;;9264:2;9259;9248:9;9244:18;9237:30;9284:44;9324:2;9313:9;9309:18;9301:6;9284:44;:::i;:::-;9276:52;8932:402;-1:-1:-1;;;;;8932:402:237:o;9339:184::-;9391:77;9388:1;9381:88;9488:4;9485:1;9478:15;9512:4;9509:1;9502:15;9830:437;9909:1;9905:12;;;;9952;;;9973:61;;10027:4;10019:6;10015:17;10005:27;;9973:61;10080:2;10072:6;10069:14;10049:18;10046:38;10043:218;;10117:77;10114:1;10107:88;10218:4;10215:1;10208:15;10246:4;10243:1;10236:15;10043:218;;9830:437;;;:::o;10272:288::-;10447:6;10436:9;10429:25;10490:2;10485;10474:9;10470:18;10463:30;10410:4;10510:44;10550:2;10539:9;10535:18;10527:6;10510:44;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue()": "20965255",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set((uint32,uint32,bytes))": "5a9b8140",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"width\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"height\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"terrain\",\"type\":\"bytes\"}],\"internalType\":\"struct MapConfig\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"width\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"height\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"terrain\",\"type\":\"bytes\"}],\"internalType\":\"struct MapConfig\",\"name\":\"mapConfig\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/MapConfigComponent.sol\":\"MapConfigComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":expension/=src/expension/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\",\":verifiers/=src/verifiers/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/SingletonID.sol\":{\"keccak256\":\"0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9\",\"dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/MapConfigComponent.sol\":{\"keccak256\":\"0x6be45c684d404671e91e61dbf13c7935e2f33317ed37327ab50b517f39537836\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3441a9d9c23420deb86b9f2a77c153ec8c454837b59c27855ff0ff19026f41d7\",\"dweb:/ipfs/QmbLoZm1iq5bzRXRQAf9ghXnKx4SpahNmwm137SbbgD7b1\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct MapConfig",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "width",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "height",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "terrain",
                  "type": "bytes"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "struct MapConfig",
              "name": "mapConfig",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint32",
                  "name": "width",
                  "type": "uint32"
                },
                {
                  "internalType": "uint32",
                  "name": "height",
                  "type": "uint32"
                },
                {
                  "internalType": "bytes",
                  "name": "terrain",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":expension/=src/expension/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/",
        ":verifiers/=src/verifiers/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/MapConfigComponent.sol": "MapConfigComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/SingletonID.sol": {
        "keccak256": "0xb840f18986c5623b68ce1472b0aa7947f4988faf39d429d3cb2a27cc3af774c2",
        "urls": [
          "bzz-raw://c8d6a10142ba48ee000c1bc019eba05166d1601fd949a52179d270b2ca7c98b9",
          "dweb:/ipfs/QmX2WXRp38GvAG5bEUuAy1h85rJyw8cR3atpzsE5k6aNha"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/MapConfigComponent.sol": {
        "keccak256": "0x6be45c684d404671e91e61dbf13c7935e2f33317ed37327ab50b517f39537836",
        "urls": [
          "bzz-raw://3441a9d9c23420deb86b9f2a77c153ec8c454837b59c27855ff0ff19026f41d7",
          "dweb:/ipfs/QmbLoZm1iq5bzRXRQAf9ghXnKx4SpahNmwm137SbbgD7b1"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/MapConfigComponent.sol",
    "id": 9815,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        9670
      ],
      "LibTypes": [
        522
      ],
      "MapConfig": [
        9677
      ],
      "MapConfigComponent": [
        9814
      ],
      "SingletonID": [
        527
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1212:100",
    "nodes": [
      {
        "id": 9656,
        "nodeType": "PragmaDirective",
        "src": "32:24:100",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 9658,
        "nodeType": "ImportDirective",
        "src": "57:57:100",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9815,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9657,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "66:13:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9660,
        "nodeType": "ImportDirective",
        "src": "115:47:100",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9815,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9659,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "124:8:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9662,
        "nodeType": "ImportDirective",
        "src": "163:53:100",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/SingletonID.sol",
        "file": "solecs/SingletonID.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 9815,
        "sourceUnit": 528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 9661,
              "name": "SingletonID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 527,
              "src": "172:11:100",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9670,
        "nodeType": "VariableDeclaration",
        "src": "218:63:100",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "235:2:100",
        "scope": 9815,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 9663,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "218:7:100",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e4d6170436f6e666967",
                  "id": 9667,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "258:21:100",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_26cf7dc75ae68c708d2e4d32efa853730b92b0bf86104963fae257250466fa25",
                    "typeString": "literal_string \"component.MapConfig\""
                  },
                  "value": "component.MapConfig"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_26cf7dc75ae68c708d2e4d32efa853730b92b0bf86104963fae257250466fa25",
                    "typeString": "literal_string \"component.MapConfig\""
                  }
                ],
                "id": 9666,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "248:9:100",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 9668,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "248:32:100",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 9665,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "240:7:100",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 9664,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "240:7:100",
              "typeDescriptions": {}
            }
          },
          "id": 9669,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "240:41:100",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 9677,
        "nodeType": "StructDefinition",
        "src": "284:70:100",
        "nodes": [],
        "canonicalName": "MapConfig",
        "members": [
          {
            "constant": false,
            "id": 9672,
            "mutability": "mutable",
            "name": "width",
            "nameLocation": "312:5:100",
            "nodeType": "VariableDeclaration",
            "scope": 9677,
            "src": "305:12:100",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 9671,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "305:6:100",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9674,
            "mutability": "mutable",
            "name": "height",
            "nameLocation": "328:6:100",
            "nodeType": "VariableDeclaration",
            "scope": 9677,
            "src": "321:13:100",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 9673,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "321:6:100",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9676,
            "mutability": "mutable",
            "name": "terrain",
            "nameLocation": "344:7:100",
            "nodeType": "VariableDeclaration",
            "scope": 9677,
            "src": "338:13:100",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage_ptr",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 9675,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "338:5:100",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "MapConfig",
        "nameLocation": "291:9:100",
        "scope": 9815,
        "visibility": "public"
      },
      {
        "id": 9814,
        "nodeType": "ContractDefinition",
        "src": "356:887:100",
        "nodes": [
          {
            "id": 9689,
            "nodeType": "FunctionDefinition",
            "src": "405:54:100",
            "nodes": [],
            "body": {
              "id": 9688,
              "nodeType": "Block",
              "src": "457:2:100",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 9684,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9681,
                    "src": "446:5:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 9685,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9670,
                    "src": "453:2:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 9686,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 9683,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "432:13:100"
                },
                "nodeType": "ModifierInvocation",
                "src": "432:24:100"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 9682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9681,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "425:5:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 9689,
                  "src": "417:13:100",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:7:100",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "416:15:100"
            },
            "returnParameters": {
              "id": 9687,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "457:0:100"
            },
            "scope": 9814,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9760,
            "nodeType": "FunctionDefinition",
            "src": "463:398:100",
            "nodes": [],
            "body": {
              "id": 9759,
              "nodeType": "Block",
              "src": "574:287:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 9706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9700,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9694,
                      "src": "580:4:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 9704,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "600:1:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 9703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "587:12:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 9701,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "591:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 9702,
                          "nodeType": "ArrayTypeName",
                          "src": "591:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 9705,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "587:15:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "580:22:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 9707,
                  "nodeType": "ExpressionStatement",
                  "src": "580:22:100"
                },
                {
                  "expression": {
                    "id": 9715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9708,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9698,
                      "src": "608:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "33",
                          "id": 9713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "644:1:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          },
                          "value": "3"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_3_by_1",
                            "typeString": "int_const 3"
                          }
                        ],
                        "id": 9712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "617:26:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 9710,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 9709,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "621:20:100"
                            },
                            "referencedDeclaration": 521,
                            "src": "621:20:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 9711,
                          "nodeType": "ArrayTypeName",
                          "src": "621:22:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 9714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "617:29:100",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "608:38:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 9716,
                  "nodeType": "ExpressionStatement",
                  "src": "608:38:100"
                },
                {
                  "expression": {
                    "id": 9721,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9717,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9694,
                        "src": "653:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 9719,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 9718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "658:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "653:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7769647468",
                      "id": 9720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "663:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_a047c85cacaf9af4d358a36f974248a87fb26caa435eb4e354b607e9b8b9a83d",
                        "typeString": "literal_string \"width\""
                      },
                      "value": "width"
                    },
                    "src": "653:17:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 9722,
                  "nodeType": "ExpressionStatement",
                  "src": "653:17:100"
                },
                {
                  "expression": {
                    "id": 9729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9723,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9698,
                        "src": "676:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 9725,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 9724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "683:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "676:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 9726,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "688:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 9727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "688:20:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 9728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 497,
                      "src": "688:27:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "676:39:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 9730,
                  "nodeType": "ExpressionStatement",
                  "src": "676:39:100"
                },
                {
                  "expression": {
                    "id": 9735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9731,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9694,
                        "src": "722:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 9733,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 9732,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "727:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "722:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "686569676874",
                      "id": 9734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "732:8:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_048dd4d5794e69cea63353d940276ad61f89c65942226a2bb5bd352536892f82",
                        "typeString": "literal_string \"height\""
                      },
                      "value": "height"
                    },
                    "src": "722:18:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 9736,
                  "nodeType": "ExpressionStatement",
                  "src": "722:18:100"
                },
                {
                  "expression": {
                    "id": 9743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9737,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9698,
                        "src": "746:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 9739,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 9738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "753:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "746:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 9740,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "758:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 9741,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "758:20:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 9742,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT32",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 497,
                      "src": "758:27:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "746:39:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 9744,
                  "nodeType": "ExpressionStatement",
                  "src": "746:39:100"
                },
                {
                  "expression": {
                    "id": 9749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9745,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9694,
                        "src": "792:4:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 9747,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 9746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "797:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "792:7:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "7465727261696e",
                      "id": 9748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "802:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_7215fda33c13c87e6b033d7171fa7621f7133573227f949f802c75768846e306",
                        "typeString": "literal_string \"terrain\""
                      },
                      "value": "terrain"
                    },
                    "src": "792:19:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 9750,
                  "nodeType": "ExpressionStatement",
                  "src": "792:19:100"
                },
                {
                  "expression": {
                    "id": 9757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 9751,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9698,
                        "src": "817:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 9753,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 9752,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "824:1:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "817:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 9754,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "829:8:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 9755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "829:20:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 9756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "STRING",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 502,
                      "src": "829:27:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "817:39:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 9758,
                  "nodeType": "ExpressionStatement",
                  "src": "817:39:100"
                }
              ]
            },
            "baseFunctions": [
              1267
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "472:9:100",
            "overrides": {
              "id": 9691,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "496:8:100"
            },
            "parameters": {
              "id": 9690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "481:2:100"
            },
            "returnParameters": {
              "id": 9699,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9694,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "530:4:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 9760,
                  "src": "514:20:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9692,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "514:6:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 9693,
                    "nodeType": "ArrayTypeName",
                    "src": "514:8:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9698,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "566:6:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 9760,
                  "src": "536:36:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 9696,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 9695,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "536:20:100"
                      },
                      "referencedDeclaration": 521,
                      "src": "536:20:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 9697,
                    "nodeType": "ArrayTypeName",
                    "src": "536:22:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "513:60:100"
            },
            "scope": 9814,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9780,
            "nodeType": "FunctionDefinition",
            "src": "865:141:100",
            "nodes": [],
            "body": {
              "id": 9779,
              "nodeType": "Block",
              "src": "913:93:100",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9767,
                        "name": "SingletonID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 527,
                        "src": "923:11:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 9770,
                              "name": "mapConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9763,
                              "src": "947:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                                "typeString": "struct MapConfig memory"
                              }
                            },
                            "id": 9771,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "width",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9672,
                            "src": "947:15:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 9772,
                              "name": "mapConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9763,
                              "src": "964:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                                "typeString": "struct MapConfig memory"
                              }
                            },
                            "id": 9773,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "height",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9674,
                            "src": "964:16:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "expression": {
                              "id": 9774,
                              "name": "mapConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9763,
                              "src": "982:9:100",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                                "typeString": "struct MapConfig memory"
                              }
                            },
                            "id": 9775,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "terrain",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9676,
                            "src": "982:17:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 9768,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "936:3:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 9769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "936:10:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 9776,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "936:64:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9766,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9780,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "919:3:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 9777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "919:82:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9778,
                  "nodeType": "ExpressionStatement",
                  "src": "919:82:100"
                }
              ]
            },
            "functionSelector": "5a9b8140",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "874:3:100",
            "parameters": {
              "id": 9764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9763,
                  "mutability": "mutable",
                  "name": "mapConfig",
                  "nameLocation": "895:9:100",
                  "nodeType": "VariableDeclaration",
                  "scope": 9780,
                  "src": "878:26:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                    "typeString": "struct MapConfig"
                  },
                  "typeName": {
                    "id": 9762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9761,
                      "name": "MapConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9677,
                      "src": "878:9:100"
                    },
                    "referencedDeclaration": 9677,
                    "src": "878:9:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapConfig_$9677_storage_ptr",
                      "typeString": "struct MapConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "877:28:100"
            },
            "returnParameters": {
              "id": 9765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "913:0:100"
            },
            "scope": 9814,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 9813,
            "nodeType": "FunctionDefinition",
            "src": "1010:231:100",
            "nodes": [],
            "body": {
              "id": 9812,
              "nodeType": "Block",
              "src": "1069:172:100",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    9787,
                    9789,
                    9791
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 9787,
                      "mutability": "mutable",
                      "name": "width",
                      "nameLocation": "1083:5:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 9812,
                      "src": "1076:12:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 9786,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1076:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9789,
                      "mutability": "mutable",
                      "name": "height",
                      "nameLocation": "1097:6:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 9812,
                      "src": "1090:13:100",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 9788,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1090:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 9791,
                      "mutability": "mutable",
                      "name": "terrain",
                      "nameLocation": "1118:7:100",
                      "nodeType": "VariableDeclaration",
                      "scope": 9812,
                      "src": "1105:20:100",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 9790,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1105:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 9805,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 9795,
                            "name": "SingletonID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 527,
                            "src": "1152:11:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 9794,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1140:11:100",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 9796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:24:100",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 9798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1167:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 9797,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1167:6:100",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 9800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1175:6:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 9799,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1175:6:100",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 9802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1183:5:100",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 9801,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "1183:5:100",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 9803,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1166:23:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint32_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(uint32),type(bytes storage pointer))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint32_$_$_t_type$_t_uint32_$_$_t_type$_t_bytes_storage_ptr_$_$",
                          "typeString": "tuple(type(uint32),type(uint32),type(bytes storage pointer))"
                        }
                      ],
                      "expression": {
                        "id": 9792,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1129:3:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 9793,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1129:10:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 9804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1129:61:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_uint32_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint32,uint32,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1075:115:100"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9807,
                        "name": "width",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9787,
                        "src": "1213:5:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 9808,
                        "name": "height",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9789,
                        "src": "1220:6:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 9809,
                        "name": "terrain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9791,
                        "src": "1228:7:100",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 9806,
                      "name": "MapConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9677,
                      "src": "1203:9:100",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_MapConfig_$9677_storage_ptr_$",
                        "typeString": "type(struct MapConfig storage pointer)"
                      }
                    },
                    "id": 9810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1203:33:100",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                      "typeString": "struct MapConfig memory"
                    }
                  },
                  "functionReturnParameters": 9785,
                  "id": 9811,
                  "nodeType": "Return",
                  "src": "1196:40:100"
                }
              ]
            },
            "functionSelector": "20965255",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1019:8:100",
            "parameters": {
              "id": 9781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1027:2:100"
            },
            "returnParameters": {
              "id": 9785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9784,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9813,
                  "src": "1051:16:100",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MapConfig_$9677_memory_ptr",
                    "typeString": "struct MapConfig"
                  },
                  "typeName": {
                    "id": 9783,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 9782,
                      "name": "MapConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 9677,
                      "src": "1051:9:100"
                    },
                    "referencedDeclaration": 9677,
                    "src": "1051:9:100",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MapConfig_$9677_storage_ptr",
                      "typeString": "struct MapConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1050:18:100"
            },
            "scope": 9814,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9678,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "387:13:100"
            },
            "id": 9679,
            "nodeType": "InheritanceSpecifier",
            "src": "387:13:100"
          }
        ],
        "canonicalName": "MapConfigComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          9814,
          220,
          42592,
          42796,
          2161,
          44623,
          45042,
          44499,
          1318,
          44492,
          2204,
          44633
        ],
        "name": "MapConfigComponent",
        "nameLocation": "365:18:100",
        "scope": 9815,
        "usedErrors": [
          20,
          42517,
          45039,
          45041
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 100
}