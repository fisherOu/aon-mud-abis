{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "world",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BareComponent__NotImplemented",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "OwnableWritable__NotWriter",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Ownable__NotTransitiveOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "authorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEntities",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "getEntitiesWithValue",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getRawValue",
      "outputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSchema",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "keys",
          "type": "string[]"
        },
        {
          "internalType": "enum LibTypes.SchemaValue[]",
          "name": "values",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "getValue",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "seed",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "timeout",
              "type": "uint64"
            }
          ],
          "internalType": "struct ResourcePosition",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "has",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "id",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "registerIndexer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_world",
          "type": "address"
        }
      ],
      "name": "registerWorld",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        }
      ],
      "name": "remove",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "entity",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "seed",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "timeout",
              "type": "uint64"
            }
          ],
          "internalType": "struct ResourcePosition",
          "name": "resourcePosition",
          "type": "tuple"
        }
      ],
      "name": "set",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "writer",
          "type": "address"
        }
      ],
      "name": "unauthorizeWriter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "world",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "writeAccess",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200156238038062001562833981016040819052620000349162000200565b807f227a211c6d125a9d774669e52dc0800efe47a0b26c3f94606cc2fbbf12eb16db62000061336200008a565b60028190556001600160a01b0382161562000081576200008182620000fe565b50505062000232565b6000620000a1620001b660201b62000b191760201c565b80546040519192506001600160a01b03808516929116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380546001600160a01b0319166001600160a01b0392909216919091179055565b62000108620001da565b6001600160a01b0316336001600160a01b0316146200013a57604051632f7a8ee160e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b038316908117909155600254604051630f30347760e41b8152306004820152602481019190915263f303477090604401600060405180830381600087803b1580156200019a57600080fd5b505af1158015620001af573d6000803e3d6000fd5b5050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000620001f1620001b660201b62000b191760201c565b546001600160a01b0316919050565b6000602082840312156200021357600080fd5b81516001600160a01b03811681146200022b57600080fd5b9392505050565b61132080620002426000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102d1578063df49b421146102e4578063f2fde38b146102f757600080fd5b8063b8bc073d1461029e578063bf4fe57e146102be57600080fd5b80638da5cb5b146102595780639d2c76b414610261578063af640d0f14610274578063b361be461461028b57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610210578063861eb905146102235780638b2829471461024657600080fd5b80634fef6a38146101e75780636b122fe0146101fa57600080fd5b80630ff4c9161461013b57806330b67baa1461017857806331b933b9146101bd5780634cc82215146101d2575b600080fd5b61014e610149366004610de0565b61030a565b604080518251815260209283015167ffffffffffffffff1692810192909252015b60405180910390f35b6000546101989073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016f565b6101c5610361565b60405161016f9190610df9565b6101e56101e0366004610de0565b610395565b005b6101e56101f5366004610e3d565b6103e0565b6102026104be565b60405161016f929190610f14565b6101e561021e366004610e3d565b610643565b610236610231366004610e3d565b610675565b604051901515815260200161016f565b6101e56102543660046110de565b610700565b61019861074d565b6101e561026f366004610e3d565b610792565b61027d60025481565b60405190815260200161016f565b6101c5610299366004611125565b610361565b6102b16102ac366004610de0565b6108bb565b60405161016f9190611162565b6101e56102cc366004610e3d565b61095d565b6102366102df366004610de0565b610a38565b6101e56102f236600461118b565b610a5a565b6101e5610305366004610e3d565b610aa0565b604080518082019091526000808252602082015260008061032a846108bb565b80602001905181019061033d919061121f565b6040805180820190915291825267ffffffffffffffff166020820152949350505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039e33610675565b6103d4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610b3d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610450576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816104d757505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600481526020017f7365656400000000000000000000000000000000000000000000000000000000815250826000815181106105575761055761124f565b6020026020010181905250600d816000815181106105775761057761124f565b6020026020010190602181111561059057610590610ee5565b908160218111156105a3576105a3610ee5565b815250506040518060400160405280600781526020017f74696d656f757400000000000000000000000000000000000000000000000000815250826001815181106105f0576105f061124f565b6020026020010181905250600b816001815181106106105761061061124f565b6020026020010190602181111561062957610629610ee5565b9081602181111561063c5761063c610ee5565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106fa57506106cb61074d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61070933610675565b61073f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107498282610bab565b5050565b600061078d7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610802576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906108d89061127e565b80601f01602080910402602001604051908101604052809291908181526020018280546109049061127e565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109cd576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610a519061127e565b15159392505050565b6107498282600001518360200151604051602001610a8c92919091825267ffffffffffffffff16602082015260400190565b604051602081830303815290604052610700565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b10576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610c59565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b5491610d0d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610886565b60008281526001602090815260409091208251610bca92840190610d47565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c2390859085906004016112d1565b600060405180830381600087803b158015610c3d57600080fd5b505af1158015610c51573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103dd928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d199061127e565b6000825580601f10610d29575050565b601f0160209004906000526020600020908101906103dd9190610dcb565b828054610d539061127e565b90600052602060002090601f016020900481019282610d755760008555610dbb565b82601f10610d8e57805160ff1916838001178555610dbb565b82800160010185558215610dbb579182015b82811115610dbb578251825591602001919060010190610da0565b50610dc7929150610dcb565b5090565b5b80821115610dc75760008155600101610dcc565b600060208284031215610df257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e3157835183529284019291840191600101610e15565b50909695505050505050565b600060208284031215610e4f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e7357600080fd5b9392505050565b6000815180845260005b81811015610ea057602081850181015186830182015201610e84565b81811115610eb2576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610f89577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610f77868351610e7a565b95509382019390820190600101610f3d565b50508584038187015286518085528782019482019350915060005b82811015610ff757845160228110610fe5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610fa4565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261104457600080fd5b813567ffffffffffffffff8082111561105f5761105f611004565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156110a5576110a5611004565b816040528381528660208588010111156110be57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156110f157600080fd5b82359150602083013567ffffffffffffffff81111561110f57600080fd5b61111b85828601611033565b9150509250929050565b60006020828403121561113757600080fd5b813567ffffffffffffffff81111561114e57600080fd5b61115a84828501611033565b949350505050565b602081526000610e736020830184610e7a565b67ffffffffffffffff811681146103dd57600080fd5b600080828403606081121561119f57600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156111d357600080fd5b506040516040810181811067ffffffffffffffff821117156111f7576111f7611004565b60409081526020850135825284013561120f81611175565b6020820152919491935090915050565b6000806040838503121561123257600080fd5b82519150602083015161124481611175565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061129257607f821691505b6020821081036112cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061115a6040830184610e7a56fea26469706673582212203db232d294b6b4898754c6105ad7bc28c47f72f742631cea0ebccb80b15ba3b264736f6c634300080d0033",
    "sourceMap": "300:1021:98:-:0;;;358:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;399:5;190:39;399:21:5;409:10;399:9;:21::i;:::-;1121:2:0;:8;;;-1:-1:-1;;;;;1139:20:0;;;1135:47;;1161:21;1175:6;1161:13;:21::i;:::-;1074:113;;358:54:98;300:1021;;1203:207:35;1266:31;1300:23;:21;;;;;:23;;:::i;:::-;1359:7;;1338:38;;1266:57;;-1:-1:-1;;;;;;1338:38:35;;;;1359:7;;;1338:38;;1359:7;;1338:38;1386:17;;-1:-1:-1;;;;;;1386:17:35;-1:-1:-1;;;;;1386:17:35;;;;;;;;;;1203:207::o;1302:137:0:-;436:8:35;:6;:8::i;:::-;-1:-1:-1;;;;;422:22:35;:10;-1:-1:-1;;;;;422:22:35;;418:54;;453:19;;-1:-1:-1;;;453:19:35;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;-1:-1:-1;;;;;;1364:14:0::1;-1:-1:-1::0;;;;;1364:14:0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;-1:-1:-1;;;1384:50:0;;1424:4:::1;1384:50;::::0;::::1;483:51:119::0;550:18;;;543:34;;;;1384:31:0::1;::::0;456:18:119;;1384:50:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;242:159:36:-;186:49;;242:159::o;647:111:35:-;696:7;722:23;:21;;;;;:23;;:::i;:::-;:29;-1:-1:-1;;;;;722:29:35;;647:111;-1:-1:-1;647:111:35:o;14:290:119:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:119;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:119:o;309:274::-;300:1021:98;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101365760003560e01c80638da5cb5b116100b2578063b8bc073d11610081578063cccf7a8e11610066578063cccf7a8e146102d1578063df49b421146102e4578063f2fde38b146102f757600080fd5b8063b8bc073d1461029e578063bf4fe57e146102be57600080fd5b80638da5cb5b146102595780639d2c76b414610261578063af640d0f14610274578063b361be461461028b57600080fd5b80634fef6a381161010957806375c0669c116100ee57806375c0669c14610210578063861eb905146102235780638b2829471461024657600080fd5b80634fef6a38146101e75780636b122fe0146101fa57600080fd5b80630ff4c9161461013b57806330b67baa1461017857806331b933b9146101bd5780634cc82215146101d2575b600080fd5b61014e610149366004610de0565b61030a565b604080518251815260209283015167ffffffffffffffff1692810192909252015b60405180910390f35b6000546101989073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161016f565b6101c5610361565b60405161016f9190610df9565b6101e56101e0366004610de0565b610395565b005b6101e56101f5366004610e3d565b6103e0565b6102026104be565b60405161016f929190610f14565b6101e561021e366004610e3d565b610643565b610236610231366004610e3d565b610675565b604051901515815260200161016f565b6101e56102543660046110de565b610700565b61019861074d565b6101e561026f366004610e3d565b610792565b61027d60025481565b60405190815260200161016f565b6101c5610299366004611125565b610361565b6102b16102ac366004610de0565b6108bb565b60405161016f9190611162565b6101e56102cc366004610e3d565b61095d565b6102366102df366004610de0565b610a38565b6101e56102f236600461118b565b610a5a565b6101e5610305366004610e3d565b610aa0565b604080518082019091526000808252602082015260008061032a846108bb565b80602001905181019061033d919061121f565b6040805180820190915291825267ffffffffffffffff166020820152949350505050565b60606040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61039e33610675565b6103d4576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610b3d565b50565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610450576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b6040805160028082526060828101909352829190816020015b60608152602001906001900390816104d757505060408051600280825260608201835292945091906020830190803683370190505090506040518060400160405280600481526020017f7365656400000000000000000000000000000000000000000000000000000000815250826000815181106105575761055761124f565b6020026020010181905250600d816000815181106105775761057761124f565b6020026020010190602181111561059057610590610ee5565b908160218111156105a3576105a3610ee5565b815250506040518060400160405280600781526020017f74696d656f757400000000000000000000000000000000000000000000000000815250826001815181106105f0576105f061124f565b6020026020010181905250600b816001815181106106105761061061124f565b6020026020010190602181111561062957610629610ee5565b9081602181111561063c5761063c610ee5565b9052509091565b6040517f17d5b8e800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c909602052604081205460ff16806106fa57506106cb61074d565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b92915050565b61070933610675565b61073f576040517f406ed3da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6107498282610bab565b5050565b600061078d7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1690565b905090565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610802576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556002546040517ff3034770000000000000000000000000000000000000000000000000000000008152306004820152602481019190915263f3034770906044015b600060405180830381600087803b1580156108a057600080fd5b505af11580156108b4573d6000803e3d6000fd5b5050505050565b60008181526001602052604090208054606091906108d89061127e565b80601f01602080910402602001604051908101604052809291908181526020018280546109049061127e565b80156109515780601f1061092657610100808354040283529160200191610951565b820191906000526020600020905b81548152906001019060200180831161093457829003601f168201915b50505050509050919050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff1633146109cd576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081527f8ffeadc5cba727b8cc3cdef48739619490ea317fdb3baae1259089d06f92c9096020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b60008181526001602052604081208054610a519061127e565b15159392505050565b6107498282600001518360200151604051602001610a8c92919091825267ffffffffffffffff16602082015260400190565b604051602081830303815290604052610700565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f6716804605473ffffffffffffffffffffffffffffffffffffffff163314610b10576040517f2f7a8ee100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103dd81610c59565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046090565b6000818152600160205260408120610b5491610d0d565b6000546040517f0de3b7b50000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff90911690630de3b7b590602401610886565b60008281526001602090815260409091208251610bca92840190610d47565b506000546040517fcfd3c57f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063cfd3c57f90610c2390859085906004016112d1565b600060405180830381600087803b158015610c3d57600080fd5b505af1158015610c51573d6000803e3d6000fd5b505050505050565b7f8a22373512790c48b83a1fe2efdd2888d4a917bcdc24d0adf63e60f67168046080546040516103dd928492909173ffffffffffffffffffffffffffffffffffffffff8085169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b508054610d199061127e565b6000825580601f10610d29575050565b601f0160209004906000526020600020908101906103dd9190610dcb565b828054610d539061127e565b90600052602060002090601f016020900481019282610d755760008555610dbb565b82601f10610d8e57805160ff1916838001178555610dbb565b82800160010185558215610dbb579182015b82811115610dbb578251825591602001919060010190610da0565b50610dc7929150610dcb565b5090565b5b80821115610dc75760008155600101610dcc565b600060208284031215610df257600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b81811015610e3157835183529284019291840191600101610e15565b50909695505050505050565b600060208284031215610e4f57600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e7357600080fd5b9392505050565b6000815180845260005b81811015610ea057602081850181015186830182015201610e84565b81811115610eb2576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6000604082016040835280855180835260608501915060608160051b8601019250602080880160005b83811015610f89577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0888703018552610f77868351610e7a565b95509382019390820190600101610f3d565b50508584038187015286518085528782019482019350915060005b82811015610ff757845160228110610fe5577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b84529381019392810192600101610fa4565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261104457600080fd5b813567ffffffffffffffff8082111561105f5761105f611004565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156110a5576110a5611004565b816040528381528660208588010111156110be57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156110f157600080fd5b82359150602083013567ffffffffffffffff81111561110f57600080fd5b61111b85828601611033565b9150509250929050565b60006020828403121561113757600080fd5b813567ffffffffffffffff81111561114e57600080fd5b61115a84828501611033565b949350505050565b602081526000610e736020830184610e7a565b67ffffffffffffffff811681146103dd57600080fd5b600080828403606081121561119f57600080fd5b8335925060407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0820112156111d357600080fd5b506040516040810181811067ffffffffffffffff821117156111f7576111f7611004565b60409081526020850135825284013561120f81611175565b6020820152919491935090915050565b6000806040838503121561123257600080fd5b82519150602083015161124481611175565b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061129257607f821691505b6020821081036112cb577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b82815260406020820152600061115a6040830184610e7a56fea26469706673582212203db232d294b6b4898754c6105ad7bc28c47f72f742631cea0ebccb80b15ba3b264736f6c634300080d0033",
    "sourceMap": "300:1021:98:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1043:276;;;;;;:::i;:::-;;:::i;:::-;;;;433:13:119;;415:32;;507:4;495:17;;;489:24;515:18;485:49;463:20;;;456:79;;;;388:18;1043:276:98;;;;;;;;870:20:0;;;;;;;;;;;;722:42:119;710:55;;;692:74;;680:2;665:18;870:20:0;546:226:119;2840:128:0;;;:::i;:::-;;;;;;;:::i;2088:85::-;;;;;;:::i;:::-;;:::i;:::-;;955:144:6;;;;;;:::i;:::-;;:::i;418:390:98:-;;;:::i;:::-;;;;;;;;:::i;3209:109:0:-;;;;;;:::i;:::-;;:::i;440:168:6:-;;;;;;:::i;:::-;;:::i;:::-;;;4283:14:119;;4276:22;4258:41;;4246:2;4231:18;440:168:6;4118:187:119;1736:106:0;;;;;;:::i;:::-;;:::i;378:87:34:-;;;:::i;1302:137:0:-;;;;;;:::i;:::-;;:::i;1052:17::-;;;;;;;;;5820:25:119;;;5808:2;5793:18;1052:17:0;5674:177:119;3014:149:0;;;;;;:::i;:::-;;:::i;2623:171::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1253:146:6:-;;;;;;:::i;:::-;;:::i;2337:124:0:-;;;;;;:::i;:::-;;:::i;814:223:98:-;;;;;;:::i;:::-;;:::i;514:113:34:-;;;;;;:::i;:::-;;:::i;1043:276:98:-;-1:-1:-1;;;;;;;;;;;;;;;;;1148:12:98;1162:14;1204:19;1216:6;1204:11;:19::i;:::-;1180:84;;;;;;;;;;;;:::i;:::-;1281:31;;;;;;;;;;;;;;;;;;;1043:276;-1:-1:-1;;;;1043:276:98:o;2840:128:0:-;2901:16;2932:31;;;;;;;;;;;;;;2088:85;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;2153:15:0::1;2161:6;2153:7;:15::i;:::-;2088:85:::0;:::o;955:144:6:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1036:51:6::1;;:43;:51:::0;;;238:53:7;1036:51:6::1;::::0;;;;:58;;;::::1;1090:4;1036:58;::::0;;955:144::o;418:390:98:-;582:15;;;595:1;582:15;;;501:20;582:15;;;;;;501:20;;582:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;616:29:98;;;643:1;616:29;;;;;;;;575:22;;-1:-1:-1;616:29:98;643:1;616:29;;;;;;;;;;-1:-1:-1;616:29:98;607:38;;656:16;;;;;;;;;;;;;;;;;:4;661:1;656:7;;;;;;;;:::i;:::-;;;;;;:16;;;;694:28;682:6;689:1;682:9;;;;;;;;:::i;:::-;;;;;;:40;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;733:19;;;;;;;;;;;;;;;;;:4;738:1;733:7;;;;;;;;:::i;:::-;;;;;;:19;;;;774:27;762:6;769:1;762:9;;;;;;;;:::i;:::-;;;;;;:39;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;418:390:98;;:::o;3209:109:0:-;3282:31;;;;;;;;;;;;;;440:168:6;527:53;;;508:4;527:53;;;238::7;527::6;;;;;;;;;:76;;;596:7;:5;:7::i;:::-;584:19;;:8;:19;;;527:76;520:83;440:168;-1:-1:-1;;440:168:6:o;1736:106:0:-;716:23:6;728:10;716:11;:23::i;:::-;711:80;;756:28;;;;;;;;;;;;;;711:80;1818:19:0::1;1823:6;1831:5;1818:4;:19::i;:::-;1736:106:::0;;:::o;378:87:34:-;424:7;450:8;186:49:36;722:29:35;;;;647:111;450:8:34;443:15;;378:87;:::o;1302:137:0:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1364:5:0::1;:14:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;;1431:2:::1;::::0;1384:50:::1;::::0;;;;1424:4:::1;1384:50;::::0;::::1;8013:74:119::0;8103:18;;;8096:34;;;;1384:31:0::1;::::0;7986:18:119;;1384:50:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1302:137:::0;:::o;2623:171::-;2768:21;;;;:13;:21;;;;;2761:28;;2698:12;;2768:21;2761:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2623:171;;;:::o;1253:146:6:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;1343:51:6::1;;:43;:51:::0;;;238:53:7;1343:51:6::1;::::0;;;;1336:58;;;::::1;::::0;;1253:146::o;2337:124:0:-;2404:4;2423:21;;;:13;:21;;;;;:28;;;;;:::i;:::-;:33;;;2337:124;-1:-1:-1;;;2337:124:0:o;814:223:98:-;924:106;941:6;972:16;:21;;;995:16;:24;;;961:59;;;;;;;;8755:25:119;;;8828:18;8816:31;8811:2;8796:18;;8789:59;8743:2;8728:18;;8583:271;961:59:98;;;;;;;;;;;;;924:3;:106::i;514:113:34:-;186:49:36;722:29:35;;;422:10;:22;418:54;;453:19;;;;;;;;;;;;;;418:54;593:27:34::1;612:7;593:18;:27::i;242:159:36:-:0;186:49;;242:159::o;4201:214:0:-;4306:21;;;;:13;:21;;;;;4299:28;;;:::i;:::-;4366:5;;4359:51;;;;;;;;5820:25:119;;;4366:5:0;;;;;4359:43;;5793:18:119;;4359:51:0;5674:177:119;3672:226:0;3778:21;;;;:13;:21;;;;;;;;:29;;;;;;;;:::i;:::-;-1:-1:-1;3846:5:0;;3839:54;;;;;3846:5;;;;;3839:39;;:54;;3879:6;;3887:5;;3839:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:226;;:::o;1100:97:35:-;186:49:36;1359:7:35;;1338:38;;1172:18;;1182:7;;186:49:36;;1338:38:35;;;;;1359:7;;1338:38;;1266:31;;1338:38;1386:17;;;;;;;;;;;;;;;1203:207::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:180:119;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:119;;14:180;-1:-1:-1;14:180:119:o;777:632::-;948:2;1000:21;;;1070:13;;973:18;;;1092:22;;;919:4;;948:2;1171:15;;;;1145:2;1130:18;;;919:4;1214:169;1228:6;1225:1;1222:13;1214:169;;;1289:13;;1277:26;;1358:15;;;;1323:12;;;;1250:1;1243:9;1214:169;;;-1:-1:-1;1400:3:119;;777:632;-1:-1:-1;;;;;;777:632:119:o;1414:309::-;1473:6;1526:2;1514:9;1505:7;1501:23;1497:32;1494:52;;;1542:1;1539;1532:12;1494:52;1581:9;1568:23;1631:42;1624:5;1620:54;1613:5;1610:65;1600:93;;1689:1;1686;1679:12;1600:93;1712:5;1414:309;-1:-1:-1;;;1414:309:119:o;1728:531::-;1770:3;1808:5;1802:12;1835:6;1830:3;1823:19;1860:1;1870:162;1884:6;1881:1;1878:13;1870:162;;;1946:4;2002:13;;;1998:22;;1992:29;1974:11;;;1970:20;;1963:59;1899:12;1870:162;;;2050:6;2047:1;2044:13;2041:87;;;2116:1;2109:4;2100:6;2095:3;2091:16;2087:27;2080:38;2041:87;-1:-1:-1;2173:2:119;2161:15;2178:66;2157:88;2148:98;;;;2248:4;2144:109;;1728:531;-1:-1:-1;;1728:531:119:o;2264:184::-;2316:77;2313:1;2306:88;2413:4;2410:1;2403:15;2437:4;2434:1;2427:15;2453:1660;2706:4;2754:2;2743:9;2739:18;2784:2;2773:9;2766:21;2807:6;2842;2836:13;2873:6;2865;2858:22;2911:2;2900:9;2896:18;2889:25;;2973:2;2963:6;2960:1;2956:14;2945:9;2941:30;2937:39;2923:53;;2995:4;3034:2;3026:6;3022:15;3055:1;3065:314;3079:6;3076:1;3073:13;3065:314;;;3168:66;3156:9;3148:6;3144:22;3140:95;3135:3;3128:108;3259:40;3292:6;3283;3277:13;3259:40;:::i;:::-;3249:50;-1:-1:-1;3357:12:119;;;;3322:15;;;;3101:1;3094:9;3065:314;;;-1:-1:-1;;3415:22:119;;;3395:18;;;3388:50;3491:13;;3513:24;;;3595:15;;;;3555;;;-1:-1:-1;3491:13:119;-1:-1:-1;3630:1:119;3640:445;3656:8;3651:3;3648:17;3640:445;;;3727:8;3721:15;3766:2;3762;3759:10;3749:218;;3811:77;3808:1;3801:88;3916:4;3913:1;3906:15;3948:4;3945:1;3938:15;3749:218;3980:17;;4058;;;;4019:14;;;;3684:1;3675:11;3640:445;;;-1:-1:-1;4102:5:119;;2453:1660;-1:-1:-1;;;;;;;2453:1660:119:o;4310:184::-;4362:77;4359:1;4352:88;4459:4;4456:1;4449:15;4483:4;4480:1;4473:15;4499:777;4541:5;4594:3;4587:4;4579:6;4575:17;4571:27;4561:55;;4612:1;4609;4602:12;4561:55;4648:6;4635:20;4674:18;4711:2;4707;4704:10;4701:36;;;4717:18;;:::i;:::-;4851:2;4845:9;4913:4;4905:13;;4756:66;4901:22;;;4925:2;4897:31;4893:40;4881:53;;;4949:18;;;4969:22;;;4946:46;4943:72;;;4995:18;;:::i;:::-;5035:10;5031:2;5024:22;5070:2;5062:6;5055:18;5116:3;5109:4;5104:2;5096:6;5092:15;5088:26;5085:35;5082:55;;;5133:1;5130;5123:12;5082:55;5197:2;5190:4;5182:6;5178:17;5171:4;5163:6;5159:17;5146:54;5244:1;5237:4;5232:2;5224:6;5220:15;5216:26;5209:37;5264:6;5255:15;;;;;;4499:777;;;;:::o;5281:388::-;5358:6;5366;5419:2;5407:9;5398:7;5394:23;5390:32;5387:52;;;5435:1;5432;5425:12;5387:52;5471:9;5458:23;5448:33;;5532:2;5521:9;5517:18;5504:32;5559:18;5551:6;5548:30;5545:50;;;5591:1;5588;5581:12;5545:50;5614:49;5655:7;5646:6;5635:9;5631:22;5614:49;:::i;:::-;5604:59;;;5281:388;;;;;:::o;5856:320::-;5924:6;5977:2;5965:9;5956:7;5952:23;5948:32;5945:52;;;5993:1;5990;5983:12;5945:52;6033:9;6020:23;6066:18;6058:6;6055:30;6052:50;;;6098:1;6095;6088:12;6052:50;6121:49;6162:7;6153:6;6142:9;6138:22;6121:49;:::i;:::-;6111:59;5856:320;-1:-1:-1;;;;5856:320:119:o;6181:218::-;6328:2;6317:9;6310:21;6291:4;6348:45;6389:2;6378:9;6374:18;6366:6;6348:45;:::i;6404:129::-;6489:18;6482:5;6478:30;6471:5;6468:41;6458:69;;6523:1;6520;6513:12;6538:792;6641:6;6649;6693:9;6684:7;6680:23;6723:2;6719;6715:11;6712:31;;;6739:1;6736;6729:12;6712:31;6775:9;6762:23;6752:33;;6878:4;6809:66;6805:2;6801:75;6797:86;6794:106;;;6896:1;6893;6886:12;6794:106;;6929:4;6923:11;6973:4;6965:6;6961:17;7044:6;7032:10;7029:22;7008:18;6996:10;6993:34;6990:62;6987:88;;;7055:18;;:::i;:::-;7091:4;7084:24;;;7160:2;7145:18;;7132:32;7117:48;;7200:20;;7187:34;7230:30;7187:34;7230:30;:::i;:::-;7288:2;7276:15;;7269:30;6538:792;;7280:6;;-1:-1:-1;6538:792:119;;-1:-1:-1;;6538:792:119:o;7335:310::-;7413:6;7421;7474:2;7462:9;7453:7;7449:23;7445:32;7442:52;;;7490:1;7487;7480:12;7442:52;7519:9;7513:16;7503:26;;7572:2;7561:9;7557:18;7551:25;7585:30;7609:5;7585:30;:::i;:::-;7634:5;7624:15;;;7335:310;;;;;:::o;7650:184::-;7702:77;7699:1;7692:88;7799:4;7796:1;7789:15;7823:4;7820:1;7813:15;8141:437;8220:1;8216:12;;;;8263;;;8284:61;;8338:4;8330:6;8326:17;8316:27;;8284:61;8391:2;8383:6;8380:14;8360:18;8357:38;8354:218;;8428:77;8425:1;8418:88;8529:4;8526:1;8519:15;8557:4;8554:1;8547:15;8354:218;;8141:437;;;:::o;8859:289::-;9034:6;9023:9;9016:25;9077:2;9072;9061:9;9057:18;9050:30;8997:4;9097:45;9138:2;9127:9;9123:18;9115:6;9097:45;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authorizeWriter(address)": "4fef6a38",
    "getEntities()": "31b933b9",
    "getEntitiesWithValue(bytes)": "b361be46",
    "getRawValue(uint256)": "b8bc073d",
    "getSchema()": "6b122fe0",
    "getValue(uint256)": "0ff4c916",
    "has(uint256)": "cccf7a8e",
    "id()": "af640d0f",
    "owner()": "8da5cb5b",
    "registerIndexer(address)": "75c0669c",
    "registerWorld(address)": "9d2c76b4",
    "remove(uint256)": "4cc82215",
    "set(uint256,(uint256,uint64))": "df49b421",
    "set(uint256,bytes)": "8b282947",
    "transferOwnership(address)": "f2fde38b",
    "unauthorizeWriter(address)": "bf4fe57e",
    "world()": "30b67baa",
    "writeAccess(address)": "861eb905"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"world\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BareComponent__NotImplemented\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnableWritable__NotWriter\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Ownable__NotTransitiveOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"authorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEntities\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"getEntitiesWithValue\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getRawValue\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSchema\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"},{\"internalType\":\"enum LibTypes.SchemaValue[]\",\"name\":\"values\",\"type\":\"uint8[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"getValue\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"timeout\",\"type\":\"uint64\"}],\"internalType\":\"struct ResourcePosition\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"has\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"id\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"registerIndexer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_world\",\"type\":\"address\"}],\"name\":\"registerWorld\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"}],\"name\":\"remove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"entity\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"seed\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"timeout\",\"type\":\"uint64\"}],\"internalType\":\"struct ResourcePosition\",\"name\":\"resourcePosition\",\"type\":\"tuple\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"writer\",\"type\":\"address\"}],\"name\":\"unauthorizeWriter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"world\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"writeAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorizeWriter(address)\":{\"params\":{\"writer\":\"Address to grant write access to.\"}},\"getRawValue(uint256)\":{\"params\":{\"entity\":\"Entity to get the raw value in this component for.\"}},\"has(uint256)\":{\"params\":{\"entity\":\"Entity to check whether it has a value in this component for.\"}},\"owner()\":{\"returns\":{\"_0\":\"conrtact owner\"}},\"registerWorld(address)\":{\"params\":{\"_world\":\"Address of the World contract.\"}},\"remove(uint256)\":{\"params\":{\"entity\":\"Entity to remove from this component.\"}},\"set(uint256,bytes)\":{\"params\":{\"entity\":\"Entity to set the value for.\",\"value\":\"Value to set for the given entity.\"}},\"transferOwnership(address)\":{\"params\":{\"account\":\"address of new owner\"}},\"unauthorizeWriter(address)\":{\"params\":{\"writer\":\"Address to revoke write access.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"authorizeWriter(address)\":{\"notice\":\"Grant write access to the given address. Can only be called by the owner.\"},\"getEntities()\":{\"notice\":\"Not implemented in BareComponent \"},\"getEntitiesWithValue(bytes)\":{\"notice\":\"Not implemented in BareComponent \"},\"getRawValue(uint256)\":{\"notice\":\"Get the raw (abi-encoded) value of the given entity in this component.\"},\"getSchema()\":{\"notice\":\"Return the keys and value types of the schema of this component. \"},\"has(uint256)\":{\"notice\":\"Check whether the given entity has a value in this component.\"},\"id()\":{\"notice\":\"Public identifier of this component \"},\"owner()\":{\"notice\":\"get the ERC173 contract owner\"},\"registerIndexer(address)\":{\"notice\":\"Not implemented in BareComponent \"},\"registerWorld(address)\":{\"notice\":\"Register this component in the given world.\"},\"remove(uint256)\":{\"notice\":\"Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"set(uint256,bytes)\":{\"notice\":\"Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component.\"},\"transferOwnership(address)\":{\"notice\":\"transfer contract ownership to new account\"},\"unauthorizeWriter(address)\":{\"notice\":\"Revoke write access from the given address. Can only be called by the owner.\"},\"world()\":{\"notice\":\"Reference to the World contract this component is registered in \"},\"writeAccess(address)\":{\"notice\":\"Whether given operator has write access \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/components/ResourcePositionComponent.sol\":\"ResourcePositionComponent\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":@latticexyz/=../../node_modules/@latticexyz/\",\":@rari-capital/=../../node_modules/@rari-capital/\",\":@solidstate/=../../node_modules/@solidstate/\",\":components/=src/components/\",\":ds-test/=../../node_modules/ds-test/src/\",\":examples/=../../../mud/examples/\",\":forge-std/=../../node_modules/forge-std/src/\",\":integration-sandbox/=../../../mud/integration-sandbox/\",\":libraries/=src/libraries/\",\":memmove/=../../node_modules/memmove/src/\",\":packages/=../../../mud/packages/\",\":solecs/=../../node_modules/@latticexyz/solecs/src/\",\":solmate/=../../node_modules/@rari-capital/solmate/src/\",\":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/\",\":systems/=src/systems/\",\":templates/=../../../mud/templates/\"]},\"sources\":{\"../../node_modules/@latticexyz/solecs/src/BareComponent.sol\":{\"keccak256\":\"0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a\",\"dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA\"]},\"../../node_modules/@latticexyz/solecs/src/LibTypes.sol\":{\"keccak256\":\"0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798\",\"dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH\"]},\"../../node_modules/@latticexyz/solecs/src/MapSet.sol\":{\"keccak256\":\"0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288\",\"dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9\"]},\"../../node_modules/@latticexyz/solecs/src/Ownable.sol\":{\"keccak256\":\"0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4\",\"dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol\":{\"keccak256\":\"0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c\",\"dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A\"]},\"../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol\":{\"keccak256\":\"0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4\",\"dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW\"]},\"../../node_modules/@latticexyz/solecs/src/Set.sol\":{\"keccak256\":\"0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46\",\"dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol\":{\"keccak256\":\"0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629\",\"dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol\":{\"keccak256\":\"0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e\",\"dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol\":{\"keccak256\":\"0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78\",\"dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol\":{\"keccak256\":\"0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f\",\"dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol\":{\"keccak256\":\"0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a\",\"dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK\"]},\"../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol\":{\"keccak256\":\"0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059\",\"dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol\":{\"keccak256\":\"0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38\",\"dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn\"]},\"../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol\":{\"keccak256\":\"0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3\",\"dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y\"]},\"../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol\":{\"keccak256\":\"0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc\",\"dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol\":{\"keccak256\":\"0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52\",\"dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF\"]},\"../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol\":{\"keccak256\":\"0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995\",\"dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173.sol\":{\"keccak256\":\"0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555\",\"dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q\"]},\"../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol\":{\"keccak256\":\"0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75\",\"dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx\"]},\"../../node_modules/@solidstate/contracts/utils/AddressUtils.sol\":{\"keccak256\":\"0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929\",\"dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm\"]},\"../../node_modules/@solidstate/contracts/utils/UintUtils.sol\":{\"keccak256\":\"0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2\",\"dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza\"]},\"../../node_modules/memmove/src/Array.sol\":{\"keccak256\":\"0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1\",\"dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ\"]},\"../../node_modules/memmove/src/LinkedList.sol\":{\"keccak256\":\"0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598\",\"dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc\"]},\"src/components/ResourcePositionComponent.sol\":{\"keccak256\":\"0x40c3d9c17b64aa40b409958bd84cf03a302b9a9a80931f84ab46c835fbb01cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ff33371d211293a226ab2ed078e8f80d034312d1c19ed56898dcc5f990789e6\",\"dweb:/ipfs/QmcWfmQ9cmh3ahRNVhr7jHG2oYh3BJHXCjnC1YrryBijcc\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.13+commit.abaa5c0e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "BareComponent__NotImplemented"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "OwnableWritable__NotWriter"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotOwner"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Ownable__NotTransitiveOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntities",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEntitiesWithValue",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRawValue",
          "outputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "pure",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "keys",
              "type": "string[]"
            },
            {
              "internalType": "enum LibTypes.SchemaValue[]",
              "name": "values",
              "type": "uint8[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getValue",
          "outputs": [
            {
              "internalType": "struct ResourcePosition",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "seed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "timeout",
                  "type": "uint64"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "has",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "id",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerIndexer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_world",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerWorld"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "remove"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "entity",
              "type": "uint256"
            },
            {
              "internalType": "struct ResourcePosition",
              "name": "resourcePosition",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "seed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint64",
                  "name": "timeout",
                  "type": "uint64"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "set"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "writer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorizeWriter"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "world",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "writeAccess",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "authorizeWriter(address)": {
            "params": {
              "writer": "Address to grant write access to."
            }
          },
          "getRawValue(uint256)": {
            "params": {
              "entity": "Entity to get the raw value in this component for."
            }
          },
          "has(uint256)": {
            "params": {
              "entity": "Entity to check whether it has a value in this component for."
            }
          },
          "owner()": {
            "returns": {
              "_0": "conrtact owner"
            }
          },
          "registerWorld(address)": {
            "params": {
              "_world": "Address of the World contract."
            }
          },
          "remove(uint256)": {
            "params": {
              "entity": "Entity to remove from this component."
            }
          },
          "set(uint256,bytes)": {
            "params": {
              "entity": "Entity to set the value for.",
              "value": "Value to set for the given entity."
            }
          },
          "transferOwnership(address)": {
            "params": {
              "account": "address of new owner"
            }
          },
          "unauthorizeWriter(address)": {
            "params": {
              "writer": "Address to revoke write access."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorizeWriter(address)": {
            "notice": "Grant write access to the given address. Can only be called by the owner."
          },
          "getEntities()": {
            "notice": "Not implemented in BareComponent "
          },
          "getEntitiesWithValue(bytes)": {
            "notice": "Not implemented in BareComponent "
          },
          "getRawValue(uint256)": {
            "notice": "Get the raw (abi-encoded) value of the given entity in this component."
          },
          "getSchema()": {
            "notice": "Return the keys and value types of the schema of this component. "
          },
          "has(uint256)": {
            "notice": "Check whether the given entity has a value in this component."
          },
          "id()": {
            "notice": "Public identifier of this component "
          },
          "owner()": {
            "notice": "get the ERC173 contract owner"
          },
          "registerIndexer(address)": {
            "notice": "Not implemented in BareComponent "
          },
          "registerWorld(address)": {
            "notice": "Register this component in the given world."
          },
          "remove(uint256)": {
            "notice": "Remove the given entity from this component. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "set(uint256,bytes)": {
            "notice": "Set the given component value for the given entity. Registers the update in the World contract. Can only be called by addresses with write access to this component."
          },
          "transferOwnership(address)": {
            "notice": "transfer contract ownership to new account"
          },
          "unauthorizeWriter(address)": {
            "notice": "Revoke write access from the given address. Can only be called by the owner."
          },
          "world()": {
            "notice": "Reference to the World contract this component is registered in "
          },
          "writeAccess(address)": {
            "notice": "Whether given operator has write access "
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@latticexyz/=../../node_modules/@latticexyz/",
        ":@rari-capital/=../../node_modules/@rari-capital/",
        ":@solidstate/=../../node_modules/@solidstate/",
        ":components/=src/components/",
        ":ds-test/=../../node_modules/ds-test/src/",
        ":examples/=../../../mud/examples/",
        ":forge-std/=../../node_modules/forge-std/src/",
        ":integration-sandbox/=../../../mud/integration-sandbox/",
        ":libraries/=src/libraries/",
        ":memmove/=../../node_modules/memmove/src/",
        ":packages/=../../../mud/packages/",
        ":solecs/=../../node_modules/@latticexyz/solecs/src/",
        ":solmate/=../../node_modules/@rari-capital/solmate/src/",
        ":std-contracts/=../../node_modules/@latticexyz/std-contracts/src/",
        ":systems/=src/systems/",
        ":templates/=../../../mud/templates/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/components/ResourcePositionComponent.sol": "ResourcePositionComponent"
      },
      "libraries": {}
    },
    "sources": {
      "../../node_modules/@latticexyz/solecs/src/BareComponent.sol": {
        "keccak256": "0x2cd722acd3cad5a9318bd5907a3d9f3849756727a5b2303eaf76aa7ea8caa65a",
        "urls": [
          "bzz-raw://890e17cd1f2f2ed87c99ca7b9383f7eabb31570989247a81e268a636b163a89a",
          "dweb:/ipfs/QmXJEKkMBQniSwHvC9aqHjRCaMohwkpPT7ssCtkL31j4FA"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/LibTypes.sol": {
        "keccak256": "0xa3898035fd9fa865bcfc9861e3b5ecce36be3196fb27705e50a02fed9831f102",
        "urls": [
          "bzz-raw://273284a35a950f6d0bc4223d345cf46c59972a00510ddbc4ba695ede38714798",
          "dweb:/ipfs/QmdqzKMaAfKWfBzUsrzsDMWnyxSKJRuEvrc6VTR5VarQaH"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/MapSet.sol": {
        "keccak256": "0xe1a1f412b22d586c01a3e9e0e0af40893b880260f6765b9a5e23e56154dae1db",
        "urls": [
          "bzz-raw://f8aeddb1af783e43e8ca8a004954016c9f00d9d217d86454b3a3839ef0981288",
          "dweb:/ipfs/QmegHggcpmgGgL9xbZKqnWMwNMSqvs622MuhyEhR9bVfb9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Ownable.sol": {
        "keccak256": "0x7572ffd98860b2539eacdbb2112ce3d25ad8521c5d95f91e21ea5588a6904209",
        "urls": [
          "bzz-raw://3516b95146224d3fc04c5cc2818161fa9504a048894f6dd905b1e42307494fc4",
          "dweb:/ipfs/QmTqvvAs1fSLzXVWjAgSt3TtE3MM3M1DFXRzkkSsixtVza"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritable.sol": {
        "keccak256": "0x0e3e9a7ca8ee0a020753c233db1b757f09f3be37d9ea21614892311e6d29baaf",
        "urls": [
          "bzz-raw://43d631dfbedce59f2f0d594bfd432eafaaa75e76a381368d309bbadb062ec76c",
          "dweb:/ipfs/QmNjGZPJGAXf26HgMCUk68euquWUkKQ13sEyLMvkjTJ91A"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/OwnableWritableStorage.sol": {
        "keccak256": "0x9f99bbacdfd6c5b0779bd18d3900dd4f957c5a0d89d5986815fae2eff8254df5",
        "urls": [
          "bzz-raw://3ee736ebade674846118859290603b8ad2cc91efbe13e3621aa52fb4987cb0b4",
          "dweb:/ipfs/QmNUzZS4LPhBCacrPNjbQXLV4anrvNxQ2yPEPETj3sgbzW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/Set.sol": {
        "keccak256": "0xcddfd88e4fd1c183470f470dbe5e6fdd48ed0d26bd1ccefb8070a476bc8ba344",
        "urls": [
          "bzz-raw://e81ffd8a5b104abd04876a42d613378181009bae9368779223fabc1b1d514e46",
          "dweb:/ipfs/QmUywR2WzJfzPn1bRkd7e6Sy6jo3q9AjuQWU55BHKUiNME"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IComponent.sol": {
        "keccak256": "0xc25ab58cac1449fcd501ddcc56dade0653a7946adcd9eee2931bc095eda2a6b4",
        "urls": [
          "bzz-raw://c9505da36322f3b3de4dc0aaf0aec911e76be6cbd091f4d142070a7316df4629",
          "dweb:/ipfs/QmY5aGhwzBV5fXeLRDuzWMUfbPZGGdggbLdARhrkjmPBYW"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IERC173.sol": {
        "keccak256": "0x2bd9a729a3bfcfc445bc557a914aee17fcaf1c0f74b909b6a91a5d3755a699e9",
        "urls": [
          "bzz-raw://203741d681a686fb75f0715332e554083733f349100dfe11252c17fbe9cd094e",
          "dweb:/ipfs/QmaBXDHiU4ZdJ8K5jQZ3FfswMpWEqSPsBWGFkJMU2qmmWi"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IOwnableWritable.sol": {
        "keccak256": "0x804db2685d65f5d4029431c47276b6ac43d3c329ea4ce75358928dbd4d11ee77",
        "urls": [
          "bzz-raw://a1d85dfe46f678ce4cf3a788092519251a24c2c015f9e858a81111b506b0ee78",
          "dweb:/ipfs/QmVmE4f8axCeh8V2kcs8nxYd27rSiwvXJbDbNCg3VZHSXY"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IUint256Component.sol": {
        "keccak256": "0x12e2eaa4c5663048343e43a1994c446baacb16a4aacbe314ed5202d878751be9",
        "urls": [
          "bzz-raw://2d78184a1b1868773f2d5a7cf54bb42bccc666dc75cea14eeed15b8573fd000f",
          "dweb:/ipfs/QmemXPHPB7V8StWR8kZcKt3eDxB78sZFZW4Dp7TcEFTxx9"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/IWorld.sol": {
        "keccak256": "0x3ac1853f4cade8f432f5b3144e0c914b93f110ea3eabd85438cde39160716114",
        "urls": [
          "bzz-raw://1f0ba421b481b66d43c9da4de63171a79ffadc708956893bddf10eec666a0f4a",
          "dweb:/ipfs/QmdSyzQUDrP3MXt8JjgXt1QUgraUKBUPHE2CVzJiEwfMAK"
        ],
        "license": "MIT"
      },
      "../../node_modules/@latticexyz/solecs/src/interfaces/Query.sol": {
        "keccak256": "0x987e47a4d3f076910382b4e8619f607ea15abdedd786d6095bd27126ff6f941c",
        "urls": [
          "bzz-raw://8c3d57f9da85917b77e1043a179d3b516bc8c00a8880fdcb1bffca7e53169059",
          "dweb:/ipfs/QmaHxqsT1ZpS8toN88qxgbeaDSMvnhYv9J9FMjVnKrMgoP"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnable.sol": {
        "keccak256": "0xd2d21c507ed587cd5de6cc016d4b9c7e956e468108b784455a400301707031c1",
        "urls": [
          "bzz-raw://091a98176309554295f1d471f888b1567d07e0250b11e23fa540739b6dfdce38",
          "dweb:/ipfs/Qme69DrKhhtwkSBMU456C3NxzXNMC7AJ4sVNMg5rKcrtPn"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/IOwnableInternal.sol": {
        "keccak256": "0x6237a634712261bd82d5c7753780d35f77af215406d1e59512052f743f8f1c60",
        "urls": [
          "bzz-raw://8e54ac6cd1b376224b8d148c704693ff3f7ac9f69954fd30ee3d949fa17210c3",
          "dweb:/ipfs/QmWjq37K3gg29XhFbepg5GbmmFYoyXb81sh2K1MnVZqG6y"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/Ownable.sol": {
        "keccak256": "0xe16b09090c1251f8cc97fb2cc10c86675e0d0d9f0fc0032b417c37c8dba2db5f",
        "urls": [
          "bzz-raw://8482effd630de3e3eb3c66ce6bc5ddd12838381e6e585df42116b4fd7764e4bc",
          "dweb:/ipfs/Qma9ga6QS2SooCYKyB7J5EHE8uUGiAv49kosEyjHt9Zg79"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableInternal.sol": {
        "keccak256": "0x0185d24250a5e6fbafce443b9ba19bba761803e3e5d91ba423bfb1f5f0bbdbf9",
        "urls": [
          "bzz-raw://547fadeaec559ee824f4dd37b2ef972a061ca59576f5733cf643e00d88a4db52",
          "dweb:/ipfs/QmYx6rmRmZZQkoS8TykMVsz9ZvfQ8MfSPt6UzWJ8pyj8qF"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/access/ownable/OwnableStorage.sol": {
        "keccak256": "0x7385e2020de914f75cabdc83c6adf88ed21e9de14669a89b3832b80f4f8c7b73",
        "urls": [
          "bzz-raw://a367c512bf29fb4923ed5d2454783e3dae88e5e03dec216e65c3986f3c3a8995",
          "dweb:/ipfs/QmfYkD6osr6SQzod6wc7WPae6YvVnYbn2BjJuHrYL3ERXM"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173.sol": {
        "keccak256": "0x9b18a5ad66323c65a81ecd62c3536db99115fe69a30b56a04409de941da7deb6",
        "urls": [
          "bzz-raw://a93684363c5bfd4e31fa2cc2d3402e9451ba61c7dbb404e8e50658610fb2a555",
          "dweb:/ipfs/QmanFgF5v5GjBBrAEYCpaZyXRFRvzLGgB8SQcSEf9Dkj5Q"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/interfaces/IERC173Internal.sol": {
        "keccak256": "0x9644c3e56c9ecd1763f8aaa437d5d573a7f64a8d93ad7bea1a9c44beb5911b89",
        "urls": [
          "bzz-raw://c32cfda38b44878ab196d32eeb72823a9f9904e8193286c787caccfb2e5bfa75",
          "dweb:/ipfs/QmfBNKWUSKaJtYL3JJ3YFioXCVFeeakqQ4cR5XzAxxZkCx"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/AddressUtils.sol": {
        "keccak256": "0x7d924db4dbd9210923ab08db77db3c77438014c255fd49fa208ebce283d991bf",
        "urls": [
          "bzz-raw://5189eebdf91899224a14b4cd5184fa9e67a9b8904e6d88ff9610944d06c63929",
          "dweb:/ipfs/QmRwNhfcp98pPgbzK4i9hbypHLTWPGYpuRCtEJRCTNASRm"
        ],
        "license": "MIT"
      },
      "../../node_modules/@solidstate/contracts/utils/UintUtils.sol": {
        "keccak256": "0x5aaeaea22a0800402c6f2d8ce6185293bc64f74f6c390c1b1c53b624b43972f8",
        "urls": [
          "bzz-raw://8b1c95c745da8ca4de7b68e65ef9122dab4e748c3ae3c9f5fd5aa7c65887c9d2",
          "dweb:/ipfs/QmX2KURY4JbM4NVFp5KPYsNxoJGA8n8w6SdAFdD5Pasgza"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/Array.sol": {
        "keccak256": "0x0d7681d3392c34f811cebc9598c5e8f4eef6aba431dca9e1fa87267ba51a4515",
        "urls": [
          "bzz-raw://0ffb5179dd40ccacadc2cb26ac99e9ea5148796f6d21413d7e0f37913831bea1",
          "dweb:/ipfs/QmfJogaoqook5JgnUZKib6w6khzViUag3EQb1EZ8aUEasQ"
        ],
        "license": "MIT"
      },
      "../../node_modules/memmove/src/LinkedList.sol": {
        "keccak256": "0x2374863d39689178dda92b841e77b835ba8fa550561be23b7861d2e52c0fe8c1",
        "urls": [
          "bzz-raw://8538ec6ca6be4e1b25b74dfd2139586fa2b9dab8d49d91428ed64dc683884598",
          "dweb:/ipfs/Qma7Z6urenqG5Dzqwe8ouGiFH37mbsJEX83tqjSq1PTnRc"
        ],
        "license": "MIT"
      },
      "src/components/ResourcePositionComponent.sol": {
        "keccak256": "0x40c3d9c17b64aa40b409958bd84cf03a302b9a9a80931f84ab46c835fbb01cd6",
        "urls": [
          "bzz-raw://5ff33371d211293a226ab2ed078e8f80d034312d1c19ed56898dcc5f990789e6",
          "dweb:/ipfs/QmcWfmQ9cmh3ahRNVhr7jHG2oYh3BJHXCjnC1YrryBijcc"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/components/ResourcePositionComponent.sol",
    "id": 19747,
    "exportedSymbols": {
      "BareComponent": [
        220
      ],
      "ID": [
        19621
      ],
      "LibTypes": [
        522
      ],
      "ResourcePosition": [
        19626
      ],
      "ResourcePositionComponent": [
        19746
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1290:98",
    "nodes": [
      {
        "id": 19609,
        "nodeType": "PragmaDirective",
        "src": "32:24:98",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 19611,
        "nodeType": "ImportDirective",
        "src": "57:55:98",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/BareComponent.sol",
        "file": "solecs/BareComponent.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19747,
        "sourceUnit": 221,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19610,
              "name": "BareComponent",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 220,
              "src": "65:13:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19613,
        "nodeType": "ImportDirective",
        "src": "113:45:98",
        "nodes": [],
        "absolutePath": "../../node_modules/@latticexyz/solecs/src/LibTypes.sol",
        "file": "solecs/LibTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 19747,
        "sourceUnit": 523,
        "symbolAliases": [
          {
            "foreign": {
              "id": 19612,
              "name": "LibTypes",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 522,
              "src": "121:8:98",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 19621,
        "nodeType": "VariableDeclaration",
        "src": "160:70:98",
        "nodes": [],
        "constant": true,
        "mutability": "constant",
        "name": "ID",
        "nameLocation": "177:2:98",
        "scope": 19747,
        "stateVariable": false,
        "storageLocation": "default",
        "typeDescriptions": {
          "typeIdentifier": "t_uint256",
          "typeString": "uint256"
        },
        "typeName": {
          "id": 19614,
          "name": "uint256",
          "nodeType": "ElementaryTypeName",
          "src": "160:7:98",
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "value": {
          "arguments": [
            {
              "arguments": [
                {
                  "hexValue": "636f6d706f6e656e742e5265736f75726365506f736974696f6e",
                  "id": 19618,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "200:28:98",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_227a211c6d125a9d774669e52dc0800efe47a0b26c3f94606cc2fbbf12eb16db",
                    "typeString": "literal_string \"component.ResourcePosition\""
                  },
                  "value": "component.ResourcePosition"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_227a211c6d125a9d774669e52dc0800efe47a0b26c3f94606cc2fbbf12eb16db",
                    "typeString": "literal_string \"component.ResourcePosition\""
                  }
                ],
                "id": 19617,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "190:9:98",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 19619,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "190:39:98",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          ],
          "expression": {
            "argumentTypes": [
              {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            ],
            "id": 19616,
            "isConstant": false,
            "isLValue": false,
            "isPure": true,
            "lValueRequested": false,
            "nodeType": "ElementaryTypeNameExpression",
            "src": "182:7:98",
            "typeDescriptions": {
              "typeIdentifier": "t_type$_t_uint256_$",
              "typeString": "type(uint256)"
            },
            "typeName": {
              "id": 19615,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "182:7:98",
              "typeDescriptions": {}
            }
          },
          "id": 19620,
          "isConstant": false,
          "isLValue": false,
          "isPure": true,
          "kind": "typeConversion",
          "lValueRequested": false,
          "names": [],
          "nodeType": "FunctionCall",
          "src": "182:48:98",
          "tryCall": false,
          "typeDescriptions": {
            "typeIdentifier": "t_uint256",
            "typeString": "uint256"
          }
        },
        "visibility": "internal"
      },
      {
        "id": 19626,
        "nodeType": "StructDefinition",
        "src": "233:65:98",
        "nodes": [],
        "canonicalName": "ResourcePosition",
        "members": [
          {
            "constant": false,
            "id": 19623,
            "mutability": "mutable",
            "name": "seed",
            "nameLocation": "271:4:98",
            "nodeType": "VariableDeclaration",
            "scope": 19626,
            "src": "263:12:98",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19622,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "263:7:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 19625,
            "mutability": "mutable",
            "name": "timeout",
            "nameLocation": "288:7:98",
            "nodeType": "VariableDeclaration",
            "scope": 19626,
            "src": "281:14:98",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 19624,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "281:6:98",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ResourcePosition",
        "nameLocation": "240:16:98",
        "scope": 19747,
        "visibility": "public"
      },
      {
        "id": 19746,
        "nodeType": "ContractDefinition",
        "src": "300:1021:98",
        "nodes": [
          {
            "id": 19638,
            "nodeType": "FunctionDefinition",
            "src": "358:54:98",
            "nodes": [],
            "body": {
              "id": 19637,
              "nodeType": "Block",
              "src": "410:2:98",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 19633,
                    "name": "world",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19630,
                    "src": "399:5:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 19634,
                    "name": "ID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19621,
                    "src": "406:2:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 19635,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 19632,
                  "name": "BareComponent",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 220,
                  "src": "385:13:98"
                },
                "nodeType": "ModifierInvocation",
                "src": "385:24:98"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 19631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19630,
                  "mutability": "mutable",
                  "name": "world",
                  "nameLocation": "378:5:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19638,
                  "src": "370:13:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:7:98",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "369:15:98"
            },
            "returnParameters": {
              "id": 19636,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:98"
            },
            "scope": 19746,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19695,
            "nodeType": "FunctionDefinition",
            "src": "418:390:98",
            "nodes": [],
            "body": {
              "id": 19694,
              "nodeType": "Block",
              "src": "565:243:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 19655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19649,
                      "name": "keys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19643,
                      "src": "575:4:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 19653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "595:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 19652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "582:12:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (string memory[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 19650,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "586:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 19651,
                          "nodeType": "ArrayTypeName",
                          "src": "586:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        }
                      },
                      "id": 19654,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "582:15:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "typeString": "string memory[] memory"
                      }
                    },
                    "src": "575:22:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                      "typeString": "string memory[] memory"
                    }
                  },
                  "id": 19656,
                  "nodeType": "ExpressionStatement",
                  "src": "575:22:98"
                },
                {
                  "expression": {
                    "id": 19664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19657,
                      "name": "values",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19647,
                      "src": "607:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "32",
                          "id": 19662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "643:1:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          }
                        ],
                        "id": 19661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "616:26:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (enum LibTypes.SchemaValue[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 19659,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 19658,
                              "name": "LibTypes.SchemaValue",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 521,
                              "src": "620:20:98"
                            },
                            "referencedDeclaration": 521,
                            "src": "620:20:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SchemaValue_$521",
                              "typeString": "enum LibTypes.SchemaValue"
                            }
                          },
                          "id": 19660,
                          "nodeType": "ArrayTypeName",
                          "src": "620:22:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                            "typeString": "enum LibTypes.SchemaValue[]"
                          }
                        }
                      },
                      "id": 19663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "616:29:98",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                        "typeString": "enum LibTypes.SchemaValue[] memory"
                      }
                    },
                    "src": "607:38:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                      "typeString": "enum LibTypes.SchemaValue[] memory"
                    }
                  },
                  "id": 19665,
                  "nodeType": "ExpressionStatement",
                  "src": "607:38:98"
                },
                {
                  "expression": {
                    "id": 19670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19666,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19643,
                        "src": "656:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19668,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 19667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "661:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "656:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "73656564",
                      "id": 19669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "666:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_66a80b61b29ec044d14c4c8c613e762ba1fb8eeb0c454d1ee00ed6dedaa5b5c5",
                        "typeString": "literal_string \"seed\""
                      },
                      "value": "seed"
                    },
                    "src": "656:16:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19671,
                  "nodeType": "ExpressionStatement",
                  "src": "656:16:98"
                },
                {
                  "expression": {
                    "id": 19678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19672,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19647,
                        "src": "682:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19674,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 19673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "689:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "682:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19675,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "694:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "694:20:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT256",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 500,
                      "src": "694:28:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "682:40:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19679,
                  "nodeType": "ExpressionStatement",
                  "src": "682:40:98"
                },
                {
                  "expression": {
                    "id": 19684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19680,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19643,
                        "src": "733:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string memory[] memory"
                        }
                      },
                      "id": 19682,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 19681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "738:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "733:7:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74696d656f7574",
                      "id": 19683,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "743:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e31d6f048950b52c4177dc4ffddd5d6f57e6de91b9ce8502714713a378394e52",
                        "typeString": "literal_string \"timeout\""
                      },
                      "value": "timeout"
                    },
                    "src": "733:19:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 19685,
                  "nodeType": "ExpressionStatement",
                  "src": "733:19:98"
                },
                {
                  "expression": {
                    "id": 19692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19686,
                        "name": "values",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19647,
                        "src": "762:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                          "typeString": "enum LibTypes.SchemaValue[] memory"
                        }
                      },
                      "id": 19688,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 19687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "769:1:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "762:9:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 19689,
                          "name": "LibTypes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 522,
                          "src": "774:8:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_LibTypes_$522_$",
                            "typeString": "type(library LibTypes)"
                          }
                        },
                        "id": 19690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "SchemaValue",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 521,
                        "src": "774:20:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SchemaValue_$521_$",
                          "typeString": "type(enum LibTypes.SchemaValue)"
                        }
                      },
                      "id": 19691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "UINT64",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 498,
                      "src": "774:27:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "src": "762:39:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SchemaValue_$521",
                      "typeString": "enum LibTypes.SchemaValue"
                    }
                  },
                  "id": 19693,
                  "nodeType": "ExpressionStatement",
                  "src": "762:39:98"
                }
              ]
            },
            "baseFunctions": [
              25835
            ],
            "functionSelector": "6b122fe0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "427:9:98",
            "overrides": {
              "id": 19640,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "475:8:98"
            },
            "parameters": {
              "id": 19639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "436:2:98"
            },
            "returnParameters": {
              "id": 19648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19643,
                  "mutability": "mutable",
                  "name": "keys",
                  "nameLocation": "517:4:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19695,
                  "src": "501:20:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                    "typeString": "string[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19641,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "501:6:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "id": 19642,
                    "nodeType": "ArrayTypeName",
                    "src": "501:8:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                      "typeString": "string[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19647,
                  "mutability": "mutable",
                  "name": "values",
                  "nameLocation": "553:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19695,
                  "src": "523:36:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_memory_ptr",
                    "typeString": "enum LibTypes.SchemaValue[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 19645,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 19644,
                        "name": "LibTypes.SchemaValue",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 521,
                        "src": "523:20:98"
                      },
                      "referencedDeclaration": 521,
                      "src": "523:20:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SchemaValue_$521",
                        "typeString": "enum LibTypes.SchemaValue"
                      }
                    },
                    "id": 19646,
                    "nodeType": "ArrayTypeName",
                    "src": "523:22:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_enum$_SchemaValue_$521_$dyn_storage_ptr",
                      "typeString": "enum LibTypes.SchemaValue[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:60:98"
            },
            "scope": 19746,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19715,
            "nodeType": "FunctionDefinition",
            "src": "814:223:98",
            "nodes": [],
            "body": {
              "id": 19714,
              "nodeType": "Block",
              "src": "914:123:98",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19704,
                        "name": "entity",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19697,
                        "src": "941:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 19707,
                              "name": "resourcePosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19700,
                              "src": "972:16:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourcePosition_$19626_memory_ptr",
                                "typeString": "struct ResourcePosition memory"
                              }
                            },
                            "id": 19708,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "seed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19623,
                            "src": "972:21:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 19709,
                              "name": "resourcePosition",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 19700,
                              "src": "995:16:98",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ResourcePosition_$19626_memory_ptr",
                                "typeString": "struct ResourcePosition memory"
                              }
                            },
                            "id": 19710,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timeout",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19625,
                            "src": "995:24:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "id": 19705,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "961:3:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 19706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "961:10:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 19711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "961:59:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 19703,
                      "name": "set",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        19715,
                        95
                      ],
                      "referencedDeclaration": 95,
                      "src": "924:3:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory)"
                      }
                    },
                    "id": 19712,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "924:106:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19713,
                  "nodeType": "ExpressionStatement",
                  "src": "924:106:98"
                }
              ]
            },
            "functionSelector": "df49b421",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "823:3:98",
            "parameters": {
              "id": 19701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19697,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "844:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19715,
                  "src": "836:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "836:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19700,
                  "mutability": "mutable",
                  "name": "resourcePosition",
                  "nameLocation": "884:16:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19715,
                  "src": "860:40:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourcePosition_$19626_memory_ptr",
                    "typeString": "struct ResourcePosition"
                  },
                  "typeName": {
                    "id": 19699,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19698,
                      "name": "ResourcePosition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19626,
                      "src": "860:16:98"
                    },
                    "referencedDeclaration": 19626,
                    "src": "860:16:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourcePosition_$19626_storage_ptr",
                      "typeString": "struct ResourcePosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "826:80:98"
            },
            "returnParameters": {
              "id": 19702,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "914:0:98"
            },
            "scope": 19746,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 19745,
            "nodeType": "FunctionDefinition",
            "src": "1043:276:98",
            "nodes": [],
            "body": {
              "id": 19744,
              "nodeType": "Block",
              "src": "1137:182:98",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    19724,
                    19726
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 19724,
                      "mutability": "mutable",
                      "name": "seed",
                      "nameLocation": "1156:4:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 19744,
                      "src": "1148:12:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 19723,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1148:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 19726,
                      "mutability": "mutable",
                      "name": "timeout",
                      "nameLocation": "1169:7:98",
                      "nodeType": "VariableDeclaration",
                      "scope": 19744,
                      "src": "1162:14:98",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 19725,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1162:6:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 19738,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 19730,
                            "name": "entity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19717,
                            "src": "1216:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 19729,
                          "name": "getRawValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "1204:11:98",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (uint256) view returns (bytes memory)"
                          }
                        },
                        "id": 19731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1204:19:98",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 19733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1238:7:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 19732,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1238:7:98",
                              "typeDescriptions": {}
                            }
                          },
                          {
                            "id": 19735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1247:6:98",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint64_$",
                              "typeString": "type(uint64)"
                            },
                            "typeName": {
                              "id": 19734,
                              "name": "uint64",
                              "nodeType": "ElementaryTypeName",
                              "src": "1247:6:98",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "id": 19736,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1237:17:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint64_$_$",
                          "typeString": "tuple(type(uint256),type(uint64))"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint64_$_$",
                          "typeString": "tuple(type(uint256),type(uint64))"
                        }
                      ],
                      "expression": {
                        "id": 19727,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1180:3:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 19728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1180:10:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 19737,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1180:84:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint64_$",
                      "typeString": "tuple(uint256,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1147:117:98"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19740,
                        "name": "seed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19724,
                        "src": "1298:4:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 19741,
                        "name": "timeout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19726,
                        "src": "1304:7:98",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 19739,
                      "name": "ResourcePosition",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19626,
                      "src": "1281:16:98",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ResourcePosition_$19626_storage_ptr_$",
                        "typeString": "type(struct ResourcePosition storage pointer)"
                      }
                    },
                    "id": 19742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1281:31:98",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourcePosition_$19626_memory_ptr",
                      "typeString": "struct ResourcePosition memory"
                    }
                  },
                  "functionReturnParameters": 19722,
                  "id": 19743,
                  "nodeType": "Return",
                  "src": "1274:38:98"
                }
              ]
            },
            "functionSelector": "0ff4c916",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getValue",
            "nameLocation": "1052:8:98",
            "parameters": {
              "id": 19718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19717,
                  "mutability": "mutable",
                  "name": "entity",
                  "nameLocation": "1078:6:98",
                  "nodeType": "VariableDeclaration",
                  "scope": 19745,
                  "src": "1070:14:98",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 19716,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1060:30:98"
            },
            "returnParameters": {
              "id": 19722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19721,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 19745,
                  "src": "1112:23:98",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourcePosition_$19626_memory_ptr",
                    "typeString": "struct ResourcePosition"
                  },
                  "typeName": {
                    "id": 19720,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19719,
                      "name": "ResourcePosition",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19626,
                      "src": "1112:16:98"
                    },
                    "referencedDeclaration": 19626,
                    "src": "1112:16:98",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourcePosition_$19626_storage_ptr",
                      "typeString": "struct ResourcePosition"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:25:98"
            },
            "scope": 19746,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19627,
              "name": "BareComponent",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 220,
              "src": "338:13:98"
            },
            "id": 19628,
            "nodeType": "InheritanceSpecifier",
            "src": "338:13:98"
          }
        ],
        "canonicalName": "ResourcePositionComponent",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          19746,
          220,
          25650,
          25924,
          2367,
          27738,
          28174,
          27614,
          25886,
          28135,
          2410,
          27748
        ],
        "name": "ResourcePositionComponent",
        "nameLocation": "309:25:98",
        "scope": 19747,
        "usedErrors": [
          20,
          25575,
          28171,
          28173
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 98
}